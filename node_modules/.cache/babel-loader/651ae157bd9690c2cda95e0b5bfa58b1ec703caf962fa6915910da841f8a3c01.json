{"ast":null,"code":"/**\n * React Router DOM v6.21.3\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('react'), require('react-dom'), require('react-router'), require('@remix-run/router')) : typeof define === 'function' && define.amd ? define(['exports', 'react', 'react-dom', 'react-router', '@remix-run/router'], factory) : (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.ReactRouterDOM = {}, global.React, global.ReactDOM, global.ReactRouter, global.RemixRouter));\n})(this, function (exports, React, ReactDOM, reactRouter, router) {\n  'use strict';\n\n  function _interopNamespace(e) {\n    if (e && e.__esModule) return e;\n    var n = Object.create(null);\n    if (e) {\n      Object.keys(e).forEach(function (k) {\n        if (k !== 'default') {\n          var d = Object.getOwnPropertyDescriptor(e, k);\n          Object.defineProperty(n, k, d.get ? d : {\n            enumerable: true,\n            get: function () {\n              return e[k];\n            }\n          });\n        }\n      });\n    }\n    n[\"default\"] = e;\n    return Object.freeze(n);\n  }\n  var React__namespace = /*#__PURE__*/_interopNamespace(React);\n  var ReactDOM__namespace = /*#__PURE__*/_interopNamespace(ReactDOM);\n  function _extends() {\n    _extends = Object.assign ? Object.assign.bind() : function (target) {\n      for (var i = 1; i < arguments.length; i++) {\n        var source = arguments[i];\n        for (var key in source) {\n          if (Object.prototype.hasOwnProperty.call(source, key)) {\n            target[key] = source[key];\n          }\n        }\n      }\n      return target;\n    };\n    return _extends.apply(this, arguments);\n  }\n  function _objectWithoutPropertiesLoose(source, excluded) {\n    if (source == null) return {};\n    var target = {};\n    var sourceKeys = Object.keys(source);\n    var key, i;\n    for (i = 0; i < sourceKeys.length; i++) {\n      key = sourceKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      target[key] = source[key];\n    }\n    return target;\n  }\n  const defaultMethod = \"get\";\n  const defaultEncType = \"application/x-www-form-urlencoded\";\n  function isHtmlElement(object) {\n    return object != null && typeof object.tagName === \"string\";\n  }\n  function isButtonElement(object) {\n    return isHtmlElement(object) && object.tagName.toLowerCase() === \"button\";\n  }\n  function isFormElement(object) {\n    return isHtmlElement(object) && object.tagName.toLowerCase() === \"form\";\n  }\n  function isInputElement(object) {\n    return isHtmlElement(object) && object.tagName.toLowerCase() === \"input\";\n  }\n  function isModifiedEvent(event) {\n    return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n  }\n  function shouldProcessLinkClick(event, target) {\n    return event.button === 0 && (\n    // Ignore everything but left clicks\n    !target || target === \"_self\") &&\n    // Let browser handle \"target=_blank\" etc.\n    !isModifiedEvent(event) // Ignore clicks with modifier keys\n    ;\n  }\n\n  /**\n   * Creates a URLSearchParams object using the given initializer.\n   *\n   * This is identical to `new URLSearchParams(init)` except it also\n   * supports arrays as values in the object form of the initializer\n   * instead of just strings. This is convenient when you need multiple\n   * values for a given key, but don't want to use an array initializer.\n   *\n   * For example, instead of:\n   *\n   *   let searchParams = new URLSearchParams([\n   *     ['sort', 'name'],\n   *     ['sort', 'price']\n   *   ]);\n   *\n   * you can do:\n   *\n   *   let searchParams = createSearchParams({\n   *     sort: ['name', 'price']\n   *   });\n   */\n  function createSearchParams(init) {\n    if (init === void 0) {\n      init = \"\";\n    }\n    return new URLSearchParams(typeof init === \"string\" || Array.isArray(init) || init instanceof URLSearchParams ? init : Object.keys(init).reduce((memo, key) => {\n      let value = init[key];\n      return memo.concat(Array.isArray(value) ? value.map(v => [key, v]) : [[key, value]]);\n    }, []));\n  }\n  function getSearchParamsForLocation(locationSearch, defaultSearchParams) {\n    let searchParams = createSearchParams(locationSearch);\n    if (defaultSearchParams) {\n      // Use `defaultSearchParams.forEach(...)` here instead of iterating of\n      // `defaultSearchParams.keys()` to work-around a bug in Firefox related to\n      // web extensions. Relevant Bugzilla tickets:\n      // https://bugzilla.mozilla.org/show_bug.cgi?id=1414602\n      // https://bugzilla.mozilla.org/show_bug.cgi?id=1023984\n      defaultSearchParams.forEach((_, key) => {\n        if (!searchParams.has(key)) {\n          defaultSearchParams.getAll(key).forEach(value => {\n            searchParams.append(key, value);\n          });\n        }\n      });\n    }\n    return searchParams;\n  }\n\n  // Thanks https://github.com/sindresorhus/type-fest!\n\n  // One-time check for submitter support\n  let _formDataSupportsSubmitter = null;\n  function isFormDataSubmitterSupported() {\n    if (_formDataSupportsSubmitter === null) {\n      try {\n        new FormData(document.createElement(\"form\"),\n        // @ts-expect-error if FormData supports the submitter parameter, this will throw\n        0);\n        _formDataSupportsSubmitter = false;\n      } catch (e) {\n        _formDataSupportsSubmitter = true;\n      }\n    }\n    return _formDataSupportsSubmitter;\n  }\n  const supportedFormEncTypes = new Set([\"application/x-www-form-urlencoded\", \"multipart/form-data\", \"text/plain\"]);\n  function getFormEncType(encType) {\n    if (encType != null && !supportedFormEncTypes.has(encType)) {\n      router.UNSAFE_warning(false, \"\\\"\" + encType + \"\\\" is not a valid `encType` for `<Form>`/`<fetcher.Form>` \" + (\"and will default to \\\"\" + defaultEncType + \"\\\"\"));\n      return null;\n    }\n    return encType;\n  }\n  function getFormSubmissionInfo(target, basename) {\n    let method;\n    let action;\n    let encType;\n    let formData;\n    let body;\n    if (isFormElement(target)) {\n      // When grabbing the action from the element, it will have had the basename\n      // prefixed to ensure non-JS scenarios work, so strip it since we'll\n      // re-prefix in the router\n      let attr = target.getAttribute(\"action\");\n      action = attr ? router.stripBasename(attr, basename) : null;\n      method = target.getAttribute(\"method\") || defaultMethod;\n      encType = getFormEncType(target.getAttribute(\"enctype\")) || defaultEncType;\n      formData = new FormData(target);\n    } else if (isButtonElement(target) || isInputElement(target) && (target.type === \"submit\" || target.type === \"image\")) {\n      let form = target.form;\n      if (form == null) {\n        throw new Error(\"Cannot submit a <button> or <input type=\\\"submit\\\"> without a <form>\");\n      }\n\n      // <button>/<input type=\"submit\"> may override attributes of <form>\n\n      // When grabbing the action from the element, it will have had the basename\n      // prefixed to ensure non-JS scenarios work, so strip it since we'll\n      // re-prefix in the router\n      let attr = target.getAttribute(\"formaction\") || form.getAttribute(\"action\");\n      action = attr ? router.stripBasename(attr, basename) : null;\n      method = target.getAttribute(\"formmethod\") || form.getAttribute(\"method\") || defaultMethod;\n      encType = getFormEncType(target.getAttribute(\"formenctype\")) || getFormEncType(form.getAttribute(\"enctype\")) || defaultEncType;\n\n      // Build a FormData object populated from a form and submitter\n      formData = new FormData(form, target);\n\n      // If this browser doesn't support the `FormData(el, submitter)` format,\n      // then tack on the submitter value at the end.  This is a lightweight\n      // solution that is not 100% spec compliant.  For complete support in older\n      // browsers, consider using the `formdata-submitter-polyfill` package\n      if (!isFormDataSubmitterSupported()) {\n        let {\n          name,\n          type,\n          value\n        } = target;\n        if (type === \"image\") {\n          let prefix = name ? name + \".\" : \"\";\n          formData.append(prefix + \"x\", \"0\");\n          formData.append(prefix + \"y\", \"0\");\n        } else if (name) {\n          formData.append(name, value);\n        }\n      }\n    } else if (isHtmlElement(target)) {\n      throw new Error(\"Cannot submit element that is not <form>, <button>, or \" + \"<input type=\\\"submit|image\\\">\");\n    } else {\n      method = defaultMethod;\n      action = null;\n      encType = defaultEncType;\n      body = target;\n    }\n\n    // Send body for <Form encType=\"text/plain\" so we encode it into text\n    if (formData && encType === \"text/plain\") {\n      body = formData;\n      formData = undefined;\n    }\n    return {\n      action,\n      method: method.toLowerCase(),\n      encType,\n      formData,\n      body\n    };\n  }\n  const _excluded = [\"onClick\", \"relative\", \"reloadDocument\", \"replace\", \"state\", \"target\", \"to\", \"preventScrollReset\", \"unstable_viewTransition\"],\n    _excluded2 = [\"aria-current\", \"caseSensitive\", \"className\", \"end\", \"style\", \"to\", \"unstable_viewTransition\", \"children\"],\n    _excluded3 = [\"fetcherKey\", \"navigate\", \"reloadDocument\", \"replace\", \"state\", \"method\", \"action\", \"onSubmit\", \"relative\", \"preventScrollReset\", \"unstable_viewTransition\"];\n  //#endregion\n\n  ////////////////////////////////////////////////////////////////////////////////\n  //#region Routers\n  ////////////////////////////////////////////////////////////////////////////////\n  function createBrowserRouter(routes, opts) {\n    return router.createRouter({\n      basename: opts == null ? void 0 : opts.basename,\n      future: _extends({}, opts == null ? void 0 : opts.future, {\n        v7_prependBasename: true\n      }),\n      history: router.createBrowserHistory({\n        window: opts == null ? void 0 : opts.window\n      }),\n      hydrationData: (opts == null ? void 0 : opts.hydrationData) || parseHydrationData(),\n      routes,\n      mapRouteProperties: reactRouter.UNSAFE_mapRouteProperties,\n      window: opts == null ? void 0 : opts.window\n    }).initialize();\n  }\n  function createHashRouter(routes, opts) {\n    return router.createRouter({\n      basename: opts == null ? void 0 : opts.basename,\n      future: _extends({}, opts == null ? void 0 : opts.future, {\n        v7_prependBasename: true\n      }),\n      history: router.createHashHistory({\n        window: opts == null ? void 0 : opts.window\n      }),\n      hydrationData: (opts == null ? void 0 : opts.hydrationData) || parseHydrationData(),\n      routes,\n      mapRouteProperties: reactRouter.UNSAFE_mapRouteProperties,\n      window: opts == null ? void 0 : opts.window\n    }).initialize();\n  }\n  function parseHydrationData() {\n    var _window;\n    let state = (_window = window) == null ? void 0 : _window.__staticRouterHydrationData;\n    if (state && state.errors) {\n      state = _extends({}, state, {\n        errors: deserializeErrors(state.errors)\n      });\n    }\n    return state;\n  }\n  function deserializeErrors(errors) {\n    if (!errors) return null;\n    let entries = Object.entries(errors);\n    let serialized = {};\n    for (let [key, val] of entries) {\n      // Hey you!  If you change this, please change the corresponding logic in\n      // serializeErrors in react-router-dom/server.tsx :)\n      if (val && val.__type === \"RouteErrorResponse\") {\n        serialized[key] = new router.UNSAFE_ErrorResponseImpl(val.status, val.statusText, val.data, val.internal === true);\n      } else if (val && val.__type === \"Error\") {\n        // Attempt to reconstruct the right type of Error (i.e., ReferenceError)\n        if (val.__subType) {\n          let ErrorConstructor = window[val.__subType];\n          if (typeof ErrorConstructor === \"function\") {\n            try {\n              // @ts-expect-error\n              let error = new ErrorConstructor(val.message);\n              // Wipe away the client-side stack trace.  Nothing to fill it in with\n              // because we don't serialize SSR stack traces for security reasons\n              error.stack = \"\";\n              serialized[key] = error;\n            } catch (e) {\n              // no-op - fall through and create a normal Error\n            }\n          }\n        }\n        if (serialized[key] == null) {\n          let error = new Error(val.message);\n          // Wipe away the client-side stack trace.  Nothing to fill it in with\n          // because we don't serialize SSR stack traces for security reasons\n          error.stack = \"\";\n          serialized[key] = error;\n        }\n      } else {\n        serialized[key] = val;\n      }\n    }\n    return serialized;\n  }\n\n  //#endregion\n\n  ////////////////////////////////////////////////////////////////////////////////\n  //#region Contexts\n  ////////////////////////////////////////////////////////////////////////////////\n  const ViewTransitionContext = /*#__PURE__*/React__namespace.createContext({\n    isTransitioning: false\n  });\n  {\n    ViewTransitionContext.displayName = \"ViewTransition\";\n  }\n\n  // TODO: (v7) Change the useFetcher data from `any` to `unknown`\n\n  const FetchersContext = /*#__PURE__*/React__namespace.createContext(new Map());\n  {\n    FetchersContext.displayName = \"Fetchers\";\n  }\n\n  //#endregion\n\n  ////////////////////////////////////////////////////////////////////////////////\n  //#region Components\n  ////////////////////////////////////////////////////////////////////////////////\n\n  /**\n    Webpack + React 17 fails to compile on any of the following because webpack\n    complains that `startTransition` doesn't exist in `React`:\n    * import { startTransition } from \"react\"\n    * import * as React from from \"react\";\n      \"startTransition\" in React ? React.startTransition(() => setState()) : setState()\n    * import * as React from from \"react\";\n      \"startTransition\" in React ? React[\"startTransition\"](() => setState()) : setState()\n     Moving it to a constant such as the following solves the Webpack/React 17 issue:\n    * import * as React from from \"react\";\n      const START_TRANSITION = \"startTransition\";\n      START_TRANSITION in React ? React[START_TRANSITION](() => setState()) : setState()\n     However, that introduces webpack/terser minification issues in production builds\n    in React 18 where minification/obfuscation ends up removing the call of\n    React.startTransition entirely from the first half of the ternary.  Grabbing\n    this exported reference once up front resolves that issue.\n     See https://github.com/remix-run/react-router/issues/10579\n  */\n  const START_TRANSITION = \"startTransition\";\n  const startTransitionImpl = React__namespace[START_TRANSITION];\n  const FLUSH_SYNC = \"flushSync\";\n  const flushSyncImpl = ReactDOM__namespace[FLUSH_SYNC];\n  const USE_ID = \"useId\";\n  const useIdImpl = React__namespace[USE_ID];\n  function startTransitionSafe(cb) {\n    if (startTransitionImpl) {\n      startTransitionImpl(cb);\n    } else {\n      cb();\n    }\n  }\n  function flushSyncSafe(cb) {\n    if (flushSyncImpl) {\n      flushSyncImpl(cb);\n    } else {\n      cb();\n    }\n  }\n  class Deferred {\n    // @ts-expect-error - no initializer\n\n    // @ts-expect-error - no initializer\n\n    constructor() {\n      this.status = \"pending\";\n      this.promise = new Promise((resolve, reject) => {\n        this.resolve = value => {\n          if (this.status === \"pending\") {\n            this.status = \"resolved\";\n            resolve(value);\n          }\n        };\n        this.reject = reason => {\n          if (this.status === \"pending\") {\n            this.status = \"rejected\";\n            reject(reason);\n          }\n        };\n      });\n    }\n  }\n\n  /**\n   * Given a Remix Router instance, render the appropriate UI\n   */\n  function RouterProvider(_ref) {\n    let {\n      fallbackElement,\n      router: router$1,\n      future\n    } = _ref;\n    let [state, setStateImpl] = React__namespace.useState(router$1.state);\n    let [pendingState, setPendingState] = React__namespace.useState();\n    let [vtContext, setVtContext] = React__namespace.useState({\n      isTransitioning: false\n    });\n    let [renderDfd, setRenderDfd] = React__namespace.useState();\n    let [transition, setTransition] = React__namespace.useState();\n    let [interruption, setInterruption] = React__namespace.useState();\n    let fetcherData = React__namespace.useRef(new Map());\n    let {\n      v7_startTransition\n    } = future || {};\n    let optInStartTransition = React__namespace.useCallback(cb => {\n      if (v7_startTransition) {\n        startTransitionSafe(cb);\n      } else {\n        cb();\n      }\n    }, [v7_startTransition]);\n    let setState = React__namespace.useCallback((newState, _ref2) => {\n      let {\n        deletedFetchers,\n        unstable_flushSync: flushSync,\n        unstable_viewTransitionOpts: viewTransitionOpts\n      } = _ref2;\n      deletedFetchers.forEach(key => fetcherData.current.delete(key));\n      newState.fetchers.forEach((fetcher, key) => {\n        if (fetcher.data !== undefined) {\n          fetcherData.current.set(key, fetcher.data);\n        }\n      });\n      let isViewTransitionUnavailable = router$1.window == null || typeof router$1.window.document.startViewTransition !== \"function\";\n\n      // If this isn't a view transition or it's not available in this browser,\n      // just update and be done with it\n      if (!viewTransitionOpts || isViewTransitionUnavailable) {\n        if (flushSync) {\n          flushSyncSafe(() => setStateImpl(newState));\n        } else {\n          optInStartTransition(() => setStateImpl(newState));\n        }\n        return;\n      }\n\n      // flushSync + startViewTransition\n      if (flushSync) {\n        // Flush through the context to mark DOM elements as transition=ing\n        flushSyncSafe(() => {\n          // Cancel any pending transitions\n          if (transition) {\n            renderDfd && renderDfd.resolve();\n            transition.skipTransition();\n          }\n          setVtContext({\n            isTransitioning: true,\n            flushSync: true,\n            currentLocation: viewTransitionOpts.currentLocation,\n            nextLocation: viewTransitionOpts.nextLocation\n          });\n        });\n\n        // Update the DOM\n        let t = router$1.window.document.startViewTransition(() => {\n          flushSyncSafe(() => setStateImpl(newState));\n        });\n\n        // Clean up after the animation completes\n        t.finished.finally(() => {\n          flushSyncSafe(() => {\n            setRenderDfd(undefined);\n            setTransition(undefined);\n            setPendingState(undefined);\n            setVtContext({\n              isTransitioning: false\n            });\n          });\n        });\n        flushSyncSafe(() => setTransition(t));\n        return;\n      }\n\n      // startTransition + startViewTransition\n      if (transition) {\n        // Interrupting an in-progress transition, cancel and let everything flush\n        // out, and then kick off a new transition from the interruption state\n        renderDfd && renderDfd.resolve();\n        transition.skipTransition();\n        setInterruption({\n          state: newState,\n          currentLocation: viewTransitionOpts.currentLocation,\n          nextLocation: viewTransitionOpts.nextLocation\n        });\n      } else {\n        // Completed navigation update with opted-in view transitions, let 'er rip\n        setPendingState(newState);\n        setVtContext({\n          isTransitioning: true,\n          flushSync: false,\n          currentLocation: viewTransitionOpts.currentLocation,\n          nextLocation: viewTransitionOpts.nextLocation\n        });\n      }\n    }, [router$1.window, transition, renderDfd, fetcherData, optInStartTransition]);\n\n    // Need to use a layout effect here so we are subscribed early enough to\n    // pick up on any render-driven redirects/navigations (useEffect/<Navigate>)\n    React__namespace.useLayoutEffect(() => router$1.subscribe(setState), [router$1, setState]);\n\n    // When we start a view transition, create a Deferred we can use for the\n    // eventual \"completed\" render\n    React__namespace.useEffect(() => {\n      if (vtContext.isTransitioning && !vtContext.flushSync) {\n        setRenderDfd(new Deferred());\n      }\n    }, [vtContext]);\n\n    // Once the deferred is created, kick off startViewTransition() to update the\n    // DOM and then wait on the Deferred to resolve (indicating the DOM update has\n    // happened)\n    React__namespace.useEffect(() => {\n      if (renderDfd && pendingState && router$1.window) {\n        let newState = pendingState;\n        let renderPromise = renderDfd.promise;\n        let transition = router$1.window.document.startViewTransition(async () => {\n          optInStartTransition(() => setStateImpl(newState));\n          await renderPromise;\n        });\n        transition.finished.finally(() => {\n          setRenderDfd(undefined);\n          setTransition(undefined);\n          setPendingState(undefined);\n          setVtContext({\n            isTransitioning: false\n          });\n        });\n        setTransition(transition);\n      }\n    }, [optInStartTransition, pendingState, renderDfd, router$1.window]);\n\n    // When the new location finally renders and is committed to the DOM, this\n    // effect will run to resolve the transition\n    React__namespace.useEffect(() => {\n      if (renderDfd && pendingState && state.location.key === pendingState.location.key) {\n        renderDfd.resolve();\n      }\n    }, [renderDfd, transition, state.location, pendingState]);\n\n    // If we get interrupted with a new navigation during a transition, we skip\n    // the active transition, let it cleanup, then kick it off again here\n    React__namespace.useEffect(() => {\n      if (!vtContext.isTransitioning && interruption) {\n        setPendingState(interruption.state);\n        setVtContext({\n          isTransitioning: true,\n          flushSync: false,\n          currentLocation: interruption.currentLocation,\n          nextLocation: interruption.nextLocation\n        });\n        setInterruption(undefined);\n      }\n    }, [vtContext.isTransitioning, interruption]);\n    React__namespace.useEffect(() => {\n      router.UNSAFE_warning(fallbackElement == null || !router$1.future.v7_partialHydration, \"`<RouterProvider fallbackElement>` is deprecated when using \" + \"`v7_partialHydration`, use a `HydrateFallback` component instead\");\n      // Only log this once on initial mount\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n    let navigator = React__namespace.useMemo(() => {\n      return {\n        createHref: router$1.createHref,\n        encodeLocation: router$1.encodeLocation,\n        go: n => router$1.navigate(n),\n        push: (to, state, opts) => router$1.navigate(to, {\n          state,\n          preventScrollReset: opts == null ? void 0 : opts.preventScrollReset\n        }),\n        replace: (to, state, opts) => router$1.navigate(to, {\n          replace: true,\n          state,\n          preventScrollReset: opts == null ? void 0 : opts.preventScrollReset\n        })\n      };\n    }, [router$1]);\n    let basename = router$1.basename || \"/\";\n    let dataRouterContext = React__namespace.useMemo(() => ({\n      router: router$1,\n      navigator,\n      static: false,\n      basename\n    }), [router$1, navigator, basename]);\n\n    // The fragment and {null} here are important!  We need them to keep React 18's\n    // useId happy when we are server-rendering since we may have a <script> here\n    // containing the hydrated server-side staticContext (from StaticRouterProvider).\n    // useId relies on the component tree structure to generate deterministic id's\n    // so we need to ensure it remains the same on the client even though\n    // we don't need the <script> tag\n    return /*#__PURE__*/React__namespace.createElement(React__namespace.Fragment, null, /*#__PURE__*/React__namespace.createElement(reactRouter.UNSAFE_DataRouterContext.Provider, {\n      value: dataRouterContext\n    }, /*#__PURE__*/React__namespace.createElement(reactRouter.UNSAFE_DataRouterStateContext.Provider, {\n      value: state\n    }, /*#__PURE__*/React__namespace.createElement(FetchersContext.Provider, {\n      value: fetcherData.current\n    }, /*#__PURE__*/React__namespace.createElement(ViewTransitionContext.Provider, {\n      value: vtContext\n    }, /*#__PURE__*/React__namespace.createElement(reactRouter.Router, {\n      basename: basename,\n      location: state.location,\n      navigationType: state.historyAction,\n      navigator: navigator,\n      future: {\n        v7_relativeSplatPath: router$1.future.v7_relativeSplatPath\n      }\n    }, state.initialized || router$1.future.v7_partialHydration ? /*#__PURE__*/React__namespace.createElement(DataRoutes, {\n      routes: router$1.routes,\n      future: router$1.future,\n      state: state\n    }) : fallbackElement))))), null);\n  }\n  function DataRoutes(_ref3) {\n    let {\n      routes,\n      future,\n      state\n    } = _ref3;\n    return reactRouter.UNSAFE_useRoutesImpl(routes, undefined, state, future);\n  }\n  /**\n   * A `<Router>` for use in web browsers. Provides the cleanest URLs.\n   */\n  function BrowserRouter(_ref4) {\n    let {\n      basename,\n      children,\n      future,\n      window\n    } = _ref4;\n    let historyRef = React__namespace.useRef();\n    if (historyRef.current == null) {\n      historyRef.current = router.createBrowserHistory({\n        window,\n        v5Compat: true\n      });\n    }\n    let history = historyRef.current;\n    let [state, setStateImpl] = React__namespace.useState({\n      action: history.action,\n      location: history.location\n    });\n    let {\n      v7_startTransition\n    } = future || {};\n    let setState = React__namespace.useCallback(newState => {\n      v7_startTransition && startTransitionImpl ? startTransitionImpl(() => setStateImpl(newState)) : setStateImpl(newState);\n    }, [setStateImpl, v7_startTransition]);\n    React__namespace.useLayoutEffect(() => history.listen(setState), [history, setState]);\n    return /*#__PURE__*/React__namespace.createElement(reactRouter.Router, {\n      basename: basename,\n      children: children,\n      location: state.location,\n      navigationType: state.action,\n      navigator: history,\n      future: future\n    });\n  }\n  /**\n   * A `<Router>` for use in web browsers. Stores the location in the hash\n   * portion of the URL so it is not sent to the server.\n   */\n  function HashRouter(_ref5) {\n    let {\n      basename,\n      children,\n      future,\n      window\n    } = _ref5;\n    let historyRef = React__namespace.useRef();\n    if (historyRef.current == null) {\n      historyRef.current = router.createHashHistory({\n        window,\n        v5Compat: true\n      });\n    }\n    let history = historyRef.current;\n    let [state, setStateImpl] = React__namespace.useState({\n      action: history.action,\n      location: history.location\n    });\n    let {\n      v7_startTransition\n    } = future || {};\n    let setState = React__namespace.useCallback(newState => {\n      v7_startTransition && startTransitionImpl ? startTransitionImpl(() => setStateImpl(newState)) : setStateImpl(newState);\n    }, [setStateImpl, v7_startTransition]);\n    React__namespace.useLayoutEffect(() => history.listen(setState), [history, setState]);\n    return /*#__PURE__*/React__namespace.createElement(reactRouter.Router, {\n      basename: basename,\n      children: children,\n      location: state.location,\n      navigationType: state.action,\n      navigator: history,\n      future: future\n    });\n  }\n  /**\n   * A `<Router>` that accepts a pre-instantiated history object. It's important\n   * to note that using your own history object is highly discouraged and may add\n   * two versions of the history library to your bundles unless you use the same\n   * version of the history library that React Router uses internally.\n   */\n  function HistoryRouter(_ref6) {\n    let {\n      basename,\n      children,\n      future,\n      history\n    } = _ref6;\n    let [state, setStateImpl] = React__namespace.useState({\n      action: history.action,\n      location: history.location\n    });\n    let {\n      v7_startTransition\n    } = future || {};\n    let setState = React__namespace.useCallback(newState => {\n      v7_startTransition && startTransitionImpl ? startTransitionImpl(() => setStateImpl(newState)) : setStateImpl(newState);\n    }, [setStateImpl, v7_startTransition]);\n    React__namespace.useLayoutEffect(() => history.listen(setState), [history, setState]);\n    return /*#__PURE__*/React__namespace.createElement(reactRouter.Router, {\n      basename: basename,\n      children: children,\n      location: state.location,\n      navigationType: state.action,\n      navigator: history,\n      future: future\n    });\n  }\n  {\n    HistoryRouter.displayName = \"unstable_HistoryRouter\";\n  }\n  const isBrowser = typeof window !== \"undefined\" && typeof window.document !== \"undefined\" && typeof window.document.createElement !== \"undefined\";\n  const ABSOLUTE_URL_REGEX = /^(?:[a-z][a-z0-9+.-]*:|\\/\\/)/i;\n\n  /**\n   * The public API for rendering a history-aware `<a>`.\n   */\n  const Link = /*#__PURE__*/React__namespace.forwardRef(function LinkWithRef(_ref7, ref) {\n    let {\n        onClick,\n        relative,\n        reloadDocument,\n        replace,\n        state,\n        target,\n        to,\n        preventScrollReset,\n        unstable_viewTransition\n      } = _ref7,\n      rest = _objectWithoutPropertiesLoose(_ref7, _excluded);\n    let {\n      basename\n    } = React__namespace.useContext(reactRouter.UNSAFE_NavigationContext);\n\n    // Rendered into <a href> for absolute URLs\n    let absoluteHref;\n    let isExternal = false;\n    if (typeof to === \"string\" && ABSOLUTE_URL_REGEX.test(to)) {\n      // Render the absolute href server- and client-side\n      absoluteHref = to;\n\n      // Only check for external origins client-side\n      if (isBrowser) {\n        try {\n          let currentUrl = new URL(window.location.href);\n          let targetUrl = to.startsWith(\"//\") ? new URL(currentUrl.protocol + to) : new URL(to);\n          let path = router.stripBasename(targetUrl.pathname, basename);\n          if (targetUrl.origin === currentUrl.origin && path != null) {\n            // Strip the protocol/origin/basename for same-origin absolute URLs\n            to = path + targetUrl.search + targetUrl.hash;\n          } else {\n            isExternal = true;\n          }\n        } catch (e) {\n          // We can't do external URL detection without a valid URL\n          router.UNSAFE_warning(false, \"<Link to=\\\"\" + to + \"\\\"> contains an invalid URL which will probably break \" + \"when clicked - please update to a valid URL path.\");\n        }\n      }\n    }\n\n    // Rendered into <a href> for relative URLs\n    let href = reactRouter.useHref(to, {\n      relative\n    });\n    let internalOnClick = useLinkClickHandler(to, {\n      replace,\n      state,\n      target,\n      preventScrollReset,\n      relative,\n      unstable_viewTransition\n    });\n    function handleClick(event) {\n      if (onClick) onClick(event);\n      if (!event.defaultPrevented) {\n        internalOnClick(event);\n      }\n    }\n    return /*#__PURE__*/(\n      // eslint-disable-next-line jsx-a11y/anchor-has-content\n      React__namespace.createElement(\"a\", _extends({}, rest, {\n        href: absoluteHref || href,\n        onClick: isExternal || reloadDocument ? onClick : handleClick,\n        ref: ref,\n        target: target\n      }))\n    );\n  });\n  {\n    Link.displayName = \"Link\";\n  }\n  /**\n   * A `<Link>` wrapper that knows if it's \"active\" or not.\n   */\n  const NavLink = /*#__PURE__*/React__namespace.forwardRef(function NavLinkWithRef(_ref8, ref) {\n    let {\n        \"aria-current\": ariaCurrentProp = \"page\",\n        caseSensitive = false,\n        className: classNameProp = \"\",\n        end = false,\n        style: styleProp,\n        to,\n        unstable_viewTransition,\n        children\n      } = _ref8,\n      rest = _objectWithoutPropertiesLoose(_ref8, _excluded2);\n    let path = reactRouter.useResolvedPath(to, {\n      relative: rest.relative\n    });\n    let location = reactRouter.useLocation();\n    let routerState = React__namespace.useContext(reactRouter.UNSAFE_DataRouterStateContext);\n    let {\n      navigator,\n      basename\n    } = React__namespace.useContext(reactRouter.UNSAFE_NavigationContext);\n    let isTransitioning = routerState != null &&\n    // Conditional usage is OK here because the usage of a data router is static\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    useViewTransitionState(path) && unstable_viewTransition === true;\n    let toPathname = navigator.encodeLocation ? navigator.encodeLocation(path).pathname : path.pathname;\n    let locationPathname = location.pathname;\n    let nextLocationPathname = routerState && routerState.navigation && routerState.navigation.location ? routerState.navigation.location.pathname : null;\n    if (!caseSensitive) {\n      locationPathname = locationPathname.toLowerCase();\n      nextLocationPathname = nextLocationPathname ? nextLocationPathname.toLowerCase() : null;\n      toPathname = toPathname.toLowerCase();\n    }\n    if (nextLocationPathname && basename) {\n      nextLocationPathname = router.stripBasename(nextLocationPathname, basename) || nextLocationPathname;\n    }\n\n    // If the `to` has a trailing slash, look at that exact spot.  Otherwise,\n    // we're looking for a slash _after_ what's in `to`.  For example:\n    //\n    // <NavLink to=\"/users\"> and <NavLink to=\"/users/\">\n    // both want to look for a / at index 6 to match URL `/users/matt`\n    const endSlashPosition = toPathname !== \"/\" && toPathname.endsWith(\"/\") ? toPathname.length - 1 : toPathname.length;\n    let isActive = locationPathname === toPathname || !end && locationPathname.startsWith(toPathname) && locationPathname.charAt(endSlashPosition) === \"/\";\n    let isPending = nextLocationPathname != null && (nextLocationPathname === toPathname || !end && nextLocationPathname.startsWith(toPathname) && nextLocationPathname.charAt(toPathname.length) === \"/\");\n    let renderProps = {\n      isActive,\n      isPending,\n      isTransitioning\n    };\n    let ariaCurrent = isActive ? ariaCurrentProp : undefined;\n    let className;\n    if (typeof classNameProp === \"function\") {\n      className = classNameProp(renderProps);\n    } else {\n      // If the className prop is not a function, we use a default `active`\n      // class for <NavLink />s that are active. In v5 `active` was the default\n      // value for `activeClassName`, but we are removing that API and can still\n      // use the old default behavior for a cleaner upgrade path and keep the\n      // simple styling rules working as they currently do.\n      className = [classNameProp, isActive ? \"active\" : null, isPending ? \"pending\" : null, isTransitioning ? \"transitioning\" : null].filter(Boolean).join(\" \");\n    }\n    let style = typeof styleProp === \"function\" ? styleProp(renderProps) : styleProp;\n    return /*#__PURE__*/React__namespace.createElement(Link, _extends({}, rest, {\n      \"aria-current\": ariaCurrent,\n      className: className,\n      ref: ref,\n      style: style,\n      to: to,\n      unstable_viewTransition: unstable_viewTransition\n    }), typeof children === \"function\" ? children(renderProps) : children);\n  });\n  {\n    NavLink.displayName = \"NavLink\";\n  }\n  /**\n   * A `@remix-run/router`-aware `<form>`. It behaves like a normal form except\n   * that the interaction with the server is with `fetch` instead of new document\n   * requests, allowing components to add nicer UX to the page as the form is\n   * submitted and returns with data.\n   */\n  const Form = /*#__PURE__*/React__namespace.forwardRef((_ref9, forwardedRef) => {\n    let {\n        fetcherKey,\n        navigate,\n        reloadDocument,\n        replace,\n        state,\n        method = defaultMethod,\n        action,\n        onSubmit,\n        relative,\n        preventScrollReset,\n        unstable_viewTransition\n      } = _ref9,\n      props = _objectWithoutPropertiesLoose(_ref9, _excluded3);\n    let submit = useSubmit();\n    let formAction = useFormAction(action, {\n      relative\n    });\n    let formMethod = method.toLowerCase() === \"get\" ? \"get\" : \"post\";\n    let submitHandler = event => {\n      onSubmit && onSubmit(event);\n      if (event.defaultPrevented) return;\n      event.preventDefault();\n      let submitter = event.nativeEvent.submitter;\n      let submitMethod = (submitter == null ? void 0 : submitter.getAttribute(\"formmethod\")) || method;\n      submit(submitter || event.currentTarget, {\n        fetcherKey,\n        method: submitMethod,\n        navigate,\n        replace,\n        state,\n        relative,\n        preventScrollReset,\n        unstable_viewTransition\n      });\n    };\n    return /*#__PURE__*/React__namespace.createElement(\"form\", _extends({\n      ref: forwardedRef,\n      method: formMethod,\n      action: formAction,\n      onSubmit: reloadDocument ? onSubmit : submitHandler\n    }, props));\n  });\n  {\n    Form.displayName = \"Form\";\n  }\n  /**\n   * This component will emulate the browser's scroll restoration on location\n   * changes.\n   */\n  function ScrollRestoration(_ref10) {\n    let {\n      getKey,\n      storageKey\n    } = _ref10;\n    useScrollRestoration({\n      getKey,\n      storageKey\n    });\n    return null;\n  }\n  {\n    ScrollRestoration.displayName = \"ScrollRestoration\";\n  }\n  //#endregion\n\n  ////////////////////////////////////////////////////////////////////////////////\n  //#region Hooks\n  ////////////////////////////////////////////////////////////////////////////////\n  var DataRouterHook = /*#__PURE__*/function (DataRouterHook) {\n    DataRouterHook[\"UseScrollRestoration\"] = \"useScrollRestoration\";\n    DataRouterHook[\"UseSubmit\"] = \"useSubmit\";\n    DataRouterHook[\"UseSubmitFetcher\"] = \"useSubmitFetcher\";\n    DataRouterHook[\"UseFetcher\"] = \"useFetcher\";\n    DataRouterHook[\"useViewTransitionState\"] = \"useViewTransitionState\";\n    return DataRouterHook;\n  }(DataRouterHook || {});\n  var DataRouterStateHook = /*#__PURE__*/function (DataRouterStateHook) {\n    DataRouterStateHook[\"UseFetcher\"] = \"useFetcher\";\n    DataRouterStateHook[\"UseFetchers\"] = \"useFetchers\";\n    DataRouterStateHook[\"UseScrollRestoration\"] = \"useScrollRestoration\";\n    return DataRouterStateHook;\n  }(DataRouterStateHook || {}); // Internal hooks\n  function getDataRouterConsoleError(hookName) {\n    return hookName + \" must be used within a data router.  See https://reactrouter.com/routers/picking-a-router.\";\n  }\n  function useDataRouterContext(hookName) {\n    let ctx = React__namespace.useContext(reactRouter.UNSAFE_DataRouterContext);\n    !ctx ? router.UNSAFE_invariant(false, getDataRouterConsoleError(hookName)) : void 0;\n    return ctx;\n  }\n  function useDataRouterState(hookName) {\n    let state = React__namespace.useContext(reactRouter.UNSAFE_DataRouterStateContext);\n    !state ? router.UNSAFE_invariant(false, getDataRouterConsoleError(hookName)) : void 0;\n    return state;\n  }\n\n  // External hooks\n\n  /**\n   * Handles the click behavior for router `<Link>` components. This is useful if\n   * you need to create custom `<Link>` components with the same click behavior we\n   * use in our exported `<Link>`.\n   */\n  function useLinkClickHandler(to, _temp) {\n    let {\n      target,\n      replace: replaceProp,\n      state,\n      preventScrollReset,\n      relative,\n      unstable_viewTransition\n    } = _temp === void 0 ? {} : _temp;\n    let navigate = reactRouter.useNavigate();\n    let location = reactRouter.useLocation();\n    let path = reactRouter.useResolvedPath(to, {\n      relative\n    });\n    return React__namespace.useCallback(event => {\n      if (shouldProcessLinkClick(event, target)) {\n        event.preventDefault();\n\n        // If the URL hasn't changed, a regular <a> will do a replace instead of\n        // a push, so do the same here unless the replace prop is explicitly set\n        let replace = replaceProp !== undefined ? replaceProp : reactRouter.createPath(location) === reactRouter.createPath(path);\n        navigate(to, {\n          replace,\n          state,\n          preventScrollReset,\n          relative,\n          unstable_viewTransition\n        });\n      }\n    }, [location, navigate, path, replaceProp, state, target, to, preventScrollReset, relative, unstable_viewTransition]);\n  }\n\n  /**\n   * A convenient wrapper for reading and writing search parameters via the\n   * URLSearchParams interface.\n   */\n  function useSearchParams(defaultInit) {\n    router.UNSAFE_warning(typeof URLSearchParams !== \"undefined\", \"You cannot use the `useSearchParams` hook in a browser that does not \" + \"support the URLSearchParams API. If you need to support Internet \" + \"Explorer 11, we recommend you load a polyfill such as \" + \"https://github.com/ungap/url-search-params\\n\\n\" + \"If you're unsure how to load polyfills, we recommend you check out \" + \"https://polyfill.io/v3/ which provides some recommendations about how \" + \"to load polyfills only for users that need them, instead of for every \" + \"user.\");\n    let defaultSearchParamsRef = React__namespace.useRef(createSearchParams(defaultInit));\n    let hasSetSearchParamsRef = React__namespace.useRef(false);\n    let location = reactRouter.useLocation();\n    let searchParams = React__namespace.useMemo(() =>\n    // Only merge in the defaults if we haven't yet called setSearchParams.\n    // Once we call that we want those to take precedence, otherwise you can't\n    // remove a param with setSearchParams({}) if it has an initial value\n    getSearchParamsForLocation(location.search, hasSetSearchParamsRef.current ? null : defaultSearchParamsRef.current), [location.search]);\n    let navigate = reactRouter.useNavigate();\n    let setSearchParams = React__namespace.useCallback((nextInit, navigateOptions) => {\n      const newSearchParams = createSearchParams(typeof nextInit === \"function\" ? nextInit(searchParams) : nextInit);\n      hasSetSearchParamsRef.current = true;\n      navigate(\"?\" + newSearchParams, navigateOptions);\n    }, [navigate, searchParams]);\n    return [searchParams, setSearchParams];\n  }\n\n  /**\n   * Submits a HTML `<form>` to the server without reloading the page.\n   */\n\n  /**\n   * Submits a fetcher `<form>` to the server without reloading the page.\n   */\n\n  function validateClientSideSubmission() {\n    if (typeof document === \"undefined\") {\n      throw new Error(\"You are calling submit during the server render. \" + \"Try calling submit within a `useEffect` or callback instead.\");\n    }\n  }\n  let fetcherId = 0;\n  let getUniqueFetcherId = () => \"__\" + String(++fetcherId) + \"__\";\n\n  /**\n   * Returns a function that may be used to programmatically submit a form (or\n   * some arbitrary data) to the server.\n   */\n  function useSubmit() {\n    let {\n      router\n    } = useDataRouterContext(DataRouterHook.UseSubmit);\n    let {\n      basename\n    } = React__namespace.useContext(reactRouter.UNSAFE_NavigationContext);\n    let currentRouteId = reactRouter.UNSAFE_useRouteId();\n    return React__namespace.useCallback(function (target, options) {\n      if (options === void 0) {\n        options = {};\n      }\n      validateClientSideSubmission();\n      let {\n        action,\n        method,\n        encType,\n        formData,\n        body\n      } = getFormSubmissionInfo(target, basename);\n      if (options.navigate === false) {\n        let key = options.fetcherKey || getUniqueFetcherId();\n        router.fetch(key, currentRouteId, options.action || action, {\n          preventScrollReset: options.preventScrollReset,\n          formData,\n          body,\n          formMethod: options.method || method,\n          formEncType: options.encType || encType,\n          unstable_flushSync: options.unstable_flushSync\n        });\n      } else {\n        router.navigate(options.action || action, {\n          preventScrollReset: options.preventScrollReset,\n          formData,\n          body,\n          formMethod: options.method || method,\n          formEncType: options.encType || encType,\n          replace: options.replace,\n          state: options.state,\n          fromRouteId: currentRouteId,\n          unstable_flushSync: options.unstable_flushSync,\n          unstable_viewTransition: options.unstable_viewTransition\n        });\n      }\n    }, [router, basename, currentRouteId]);\n  }\n\n  // v7: Eventually we should deprecate this entirely in favor of using the\n  // router method directly?\n  function useFormAction(action, _temp2) {\n    let {\n      relative\n    } = _temp2 === void 0 ? {} : _temp2;\n    let {\n      basename\n    } = React__namespace.useContext(reactRouter.UNSAFE_NavigationContext);\n    let routeContext = React__namespace.useContext(reactRouter.UNSAFE_RouteContext);\n    !routeContext ? router.UNSAFE_invariant(false, \"useFormAction must be used inside a RouteContext\") : void 0;\n    let [match] = routeContext.matches.slice(-1);\n    // Shallow clone path so we can modify it below, otherwise we modify the\n    // object referenced by useMemo inside useResolvedPath\n    let path = _extends({}, reactRouter.useResolvedPath(action ? action : \".\", {\n      relative\n    }));\n\n    // If no action was specified, browsers will persist current search params\n    // when determining the path, so match that behavior\n    // https://github.com/remix-run/remix/issues/927\n    let location = reactRouter.useLocation();\n    if (action == null) {\n      // Safe to write to this directly here since if action was undefined, we\n      // would have called useResolvedPath(\".\") which will never include a search\n      path.search = location.search;\n\n      // When grabbing search params from the URL, remove any included ?index param\n      // since it might not apply to our contextual route.  We add it back based\n      // on match.route.index below\n      let params = new URLSearchParams(path.search);\n      if (params.has(\"index\") && params.get(\"index\") === \"\") {\n        params.delete(\"index\");\n        path.search = params.toString() ? \"?\" + params.toString() : \"\";\n      }\n    }\n    if ((!action || action === \".\") && match.route.index) {\n      path.search = path.search ? path.search.replace(/^\\?/, \"?index&\") : \"?index\";\n    }\n\n    // If we're operating within a basename, prepend it to the pathname prior\n    // to creating the form action.  If this is a root navigation, then just use\n    // the raw basename which allows the basename to have full control over the\n    // presence of a trailing slash on root actions\n    if (basename !== \"/\") {\n      path.pathname = path.pathname === \"/\" ? basename : router.joinPaths([basename, path.pathname]);\n    }\n    return reactRouter.createPath(path);\n  }\n  // TODO: (v7) Change the useFetcher generic default from `any` to `unknown`\n  /**\n   * Interacts with route loaders and actions without causing a navigation. Great\n   * for any interaction that stays on the same page.\n   */\n  function useFetcher(_temp3) {\n    var _route$matches;\n    let {\n      key\n    } = _temp3 === void 0 ? {} : _temp3;\n    let {\n      router: router$1\n    } = useDataRouterContext(DataRouterHook.UseFetcher);\n    let state = useDataRouterState(DataRouterStateHook.UseFetcher);\n    let fetcherData = React__namespace.useContext(FetchersContext);\n    let route = React__namespace.useContext(reactRouter.UNSAFE_RouteContext);\n    let routeId = (_route$matches = route.matches[route.matches.length - 1]) == null ? void 0 : _route$matches.route.id;\n    !fetcherData ? router.UNSAFE_invariant(false, \"useFetcher must be used inside a FetchersContext\") : void 0;\n    !route ? router.UNSAFE_invariant(false, \"useFetcher must be used inside a RouteContext\") : void 0;\n    !(routeId != null) ? router.UNSAFE_invariant(false, \"useFetcher can only be used on routes that contain a unique \\\"id\\\"\") : void 0;\n\n    // Fetcher key handling\n    // OK to call conditionally to feature detect `useId`\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    let defaultKey = useIdImpl ? useIdImpl() : \"\";\n    let [fetcherKey, setFetcherKey] = React__namespace.useState(key || defaultKey);\n    if (key && key !== fetcherKey) {\n      setFetcherKey(key);\n    } else if (!fetcherKey) {\n      // We will only fall through here when `useId` is not available\n      setFetcherKey(getUniqueFetcherId());\n    }\n\n    // Registration/cleanup\n    React__namespace.useEffect(() => {\n      router$1.getFetcher(fetcherKey);\n      return () => {\n        // Tell the router we've unmounted - if v7_fetcherPersist is enabled this\n        // will not delete immediately but instead queue up a delete after the\n        // fetcher returns to an `idle` state\n        router$1.deleteFetcher(fetcherKey);\n      };\n    }, [router$1, fetcherKey]);\n\n    // Fetcher additions\n    let load = React__namespace.useCallback((href, opts) => {\n      !routeId ? router.UNSAFE_invariant(false, \"No routeId available for fetcher.load()\") : void 0;\n      router$1.fetch(fetcherKey, routeId, href, opts);\n    }, [fetcherKey, routeId, router$1]);\n    let submitImpl = useSubmit();\n    let submit = React__namespace.useCallback((target, opts) => {\n      submitImpl(target, _extends({}, opts, {\n        navigate: false,\n        fetcherKey\n      }));\n    }, [fetcherKey, submitImpl]);\n    let FetcherForm = React__namespace.useMemo(() => {\n      let FetcherForm = /*#__PURE__*/React__namespace.forwardRef((props, ref) => {\n        return /*#__PURE__*/React__namespace.createElement(Form, _extends({}, props, {\n          navigate: false,\n          fetcherKey: fetcherKey,\n          ref: ref\n        }));\n      });\n      {\n        FetcherForm.displayName = \"fetcher.Form\";\n      }\n      return FetcherForm;\n    }, [fetcherKey]);\n\n    // Exposed FetcherWithComponents\n    let fetcher = state.fetchers.get(fetcherKey) || router.IDLE_FETCHER;\n    let data = fetcherData.get(fetcherKey);\n    let fetcherWithComponents = React__namespace.useMemo(() => _extends({\n      Form: FetcherForm,\n      submit,\n      load\n    }, fetcher, {\n      data\n    }), [FetcherForm, submit, load, fetcher, data]);\n    return fetcherWithComponents;\n  }\n\n  /**\n   * Provides all fetchers currently on the page. Useful for layouts and parent\n   * routes that need to provide pending/optimistic UI regarding the fetch.\n   */\n  function useFetchers() {\n    let state = useDataRouterState(DataRouterStateHook.UseFetchers);\n    return Array.from(state.fetchers.entries()).map(_ref11 => {\n      let [key, fetcher] = _ref11;\n      return _extends({}, fetcher, {\n        key\n      });\n    });\n  }\n  const SCROLL_RESTORATION_STORAGE_KEY = \"react-router-scroll-positions\";\n  let savedScrollPositions = {};\n\n  /**\n   * When rendered inside a RouterProvider, will restore scroll positions on navigations\n   */\n  function useScrollRestoration(_temp4) {\n    let {\n      getKey,\n      storageKey\n    } = _temp4 === void 0 ? {} : _temp4;\n    let {\n      router: router$1\n    } = useDataRouterContext(DataRouterHook.UseScrollRestoration);\n    let {\n      restoreScrollPosition,\n      preventScrollReset\n    } = useDataRouterState(DataRouterStateHook.UseScrollRestoration);\n    let {\n      basename\n    } = React__namespace.useContext(reactRouter.UNSAFE_NavigationContext);\n    let location = reactRouter.useLocation();\n    let matches = reactRouter.useMatches();\n    let navigation = reactRouter.useNavigation();\n\n    // Trigger manual scroll restoration while we're active\n    React__namespace.useEffect(() => {\n      window.history.scrollRestoration = \"manual\";\n      return () => {\n        window.history.scrollRestoration = \"auto\";\n      };\n    }, []);\n\n    // Save positions on pagehide\n    usePageHide(React__namespace.useCallback(() => {\n      if (navigation.state === \"idle\") {\n        let key = (getKey ? getKey(location, matches) : null) || location.key;\n        savedScrollPositions[key] = window.scrollY;\n      }\n      try {\n        sessionStorage.setItem(storageKey || SCROLL_RESTORATION_STORAGE_KEY, JSON.stringify(savedScrollPositions));\n      } catch (error) {\n        router.UNSAFE_warning(false, \"Failed to save scroll positions in sessionStorage, <ScrollRestoration /> will not work properly (\" + error + \").\");\n      }\n      window.history.scrollRestoration = \"auto\";\n    }, [storageKey, getKey, navigation.state, location, matches]));\n\n    // Read in any saved scroll locations\n    if (typeof document !== \"undefined\") {\n      // eslint-disable-next-line react-hooks/rules-of-hooks\n      React__namespace.useLayoutEffect(() => {\n        try {\n          let sessionPositions = sessionStorage.getItem(storageKey || SCROLL_RESTORATION_STORAGE_KEY);\n          if (sessionPositions) {\n            savedScrollPositions = JSON.parse(sessionPositions);\n          }\n        } catch (e) {\n          // no-op, use default empty object\n        }\n      }, [storageKey]);\n\n      // Enable scroll restoration in the router\n      // eslint-disable-next-line react-hooks/rules-of-hooks\n      React__namespace.useLayoutEffect(() => {\n        let getKeyWithoutBasename = getKey && basename !== \"/\" ? (location, matches) => getKey(\n        // Strip the basename to match useLocation()\n        _extends({}, location, {\n          pathname: router.stripBasename(location.pathname, basename) || location.pathname\n        }), matches) : getKey;\n        let disableScrollRestoration = router$1 == null ? void 0 : router$1.enableScrollRestoration(savedScrollPositions, () => window.scrollY, getKeyWithoutBasename);\n        return () => disableScrollRestoration && disableScrollRestoration();\n      }, [router$1, basename, getKey]);\n\n      // Restore scrolling when state.restoreScrollPosition changes\n      // eslint-disable-next-line react-hooks/rules-of-hooks\n      React__namespace.useLayoutEffect(() => {\n        // Explicit false means don't do anything (used for submissions)\n        if (restoreScrollPosition === false) {\n          return;\n        }\n\n        // been here before, scroll to it\n        if (typeof restoreScrollPosition === \"number\") {\n          window.scrollTo(0, restoreScrollPosition);\n          return;\n        }\n\n        // try to scroll to the hash\n        if (location.hash) {\n          let el = document.getElementById(decodeURIComponent(location.hash.slice(1)));\n          if (el) {\n            el.scrollIntoView();\n            return;\n          }\n        }\n\n        // Don't reset if this navigation opted out\n        if (preventScrollReset === true) {\n          return;\n        }\n\n        // otherwise go to the top on new locations\n        window.scrollTo(0, 0);\n      }, [location, restoreScrollPosition, preventScrollReset]);\n    }\n  }\n\n  /**\n   * Setup a callback to be fired on the window's `beforeunload` event. This is\n   * useful for saving some data to `window.localStorage` just before the page\n   * refreshes.\n   *\n   * Note: The `callback` argument should be a function created with\n   * `React.useCallback()`.\n   */\n  function useBeforeUnload(callback, options) {\n    let {\n      capture\n    } = options || {};\n    React__namespace.useEffect(() => {\n      let opts = capture != null ? {\n        capture\n      } : undefined;\n      window.addEventListener(\"beforeunload\", callback, opts);\n      return () => {\n        window.removeEventListener(\"beforeunload\", callback, opts);\n      };\n    }, [callback, capture]);\n  }\n\n  /**\n   * Setup a callback to be fired on the window's `pagehide` event. This is\n   * useful for saving some data to `window.localStorage` just before the page\n   * refreshes.  This event is better supported than beforeunload across browsers.\n   *\n   * Note: The `callback` argument should be a function created with\n   * `React.useCallback()`.\n   */\n  function usePageHide(callback, options) {\n    let {\n      capture\n    } = options || {};\n    React__namespace.useEffect(() => {\n      let opts = capture != null ? {\n        capture\n      } : undefined;\n      window.addEventListener(\"pagehide\", callback, opts);\n      return () => {\n        window.removeEventListener(\"pagehide\", callback, opts);\n      };\n    }, [callback, capture]);\n  }\n\n  /**\n   * Wrapper around useBlocker to show a window.confirm prompt to users instead\n   * of building a custom UI with useBlocker.\n   *\n   * Warning: This has *a lot of rough edges* and behaves very differently (and\n   * very incorrectly in some cases) across browsers if user click addition\n   * back/forward navigations while the confirm is open.  Use at your own risk.\n   */\n  function usePrompt(_ref12) {\n    let {\n      when,\n      message\n    } = _ref12;\n    let blocker = reactRouter.useBlocker(when);\n    React__namespace.useEffect(() => {\n      if (blocker.state === \"blocked\") {\n        let proceed = window.confirm(message);\n        if (proceed) {\n          // This timeout is needed to avoid a weird \"race\" on POP navigations\n          // between the `window.history` revert navigation and the result of\n          // `window.confirm`\n          setTimeout(blocker.proceed, 0);\n        } else {\n          blocker.reset();\n        }\n      }\n    }, [blocker, message]);\n    React__namespace.useEffect(() => {\n      if (blocker.state === \"blocked\" && !when) {\n        blocker.reset();\n      }\n    }, [blocker, when]);\n  }\n\n  /**\n   * Return a boolean indicating if there is an active view transition to the\n   * given href.  You can use this value to render CSS classes or viewTransitionName\n   * styles onto your elements\n   *\n   * @param href The destination href\n   * @param [opts.relative] Relative routing type (\"route\" | \"path\")\n   */\n  function useViewTransitionState(to, opts) {\n    if (opts === void 0) {\n      opts = {};\n    }\n    let vtContext = React__namespace.useContext(ViewTransitionContext);\n    !(vtContext != null) ? router.UNSAFE_invariant(false, \"`unstable_useViewTransitionState` must be used within `react-router-dom`'s `RouterProvider`.  \" + \"Did you accidentally import `RouterProvider` from `react-router`?\") : void 0;\n    let {\n      basename\n    } = useDataRouterContext(DataRouterHook.useViewTransitionState);\n    let path = reactRouter.useResolvedPath(to, {\n      relative: opts.relative\n    });\n    if (!vtContext.isTransitioning) {\n      return false;\n    }\n    let currentPath = router.stripBasename(vtContext.currentLocation.pathname, basename) || vtContext.currentLocation.pathname;\n    let nextPath = router.stripBasename(vtContext.nextLocation.pathname, basename) || vtContext.nextLocation.pathname;\n\n    // Transition is active if we're going to or coming from the indicated\n    // destination.  This ensures that other PUSH navigations that reverse\n    // an indicated transition apply.  I.e., on the list view you have:\n    //\n    //   <NavLink to=\"/details/1\" unstable_viewTransition>\n    //\n    // If you click the breadcrumb back to the list view:\n    //\n    //   <NavLink to=\"/list\" unstable_viewTransition>\n    //\n    // We should apply the transition because it's indicated as active going\n    // from /list -> /details/1 and therefore should be active on the reverse\n    // (even though this isn't strictly a POP reverse)\n    return router.matchPath(path.pathname, nextPath) != null || router.matchPath(path.pathname, currentPath) != null;\n  }\n\n  //#endregion\n\n  Object.defineProperty(exports, 'AbortedDeferredError', {\n    enumerable: true,\n    get: function () {\n      return reactRouter.AbortedDeferredError;\n    }\n  });\n  Object.defineProperty(exports, 'Await', {\n    enumerable: true,\n    get: function () {\n      return reactRouter.Await;\n    }\n  });\n  Object.defineProperty(exports, 'MemoryRouter', {\n    enumerable: true,\n    get: function () {\n      return reactRouter.MemoryRouter;\n    }\n  });\n  Object.defineProperty(exports, 'Navigate', {\n    enumerable: true,\n    get: function () {\n      return reactRouter.Navigate;\n    }\n  });\n  Object.defineProperty(exports, 'NavigationType', {\n    enumerable: true,\n    get: function () {\n      return reactRouter.NavigationType;\n    }\n  });\n  Object.defineProperty(exports, 'Outlet', {\n    enumerable: true,\n    get: function () {\n      return reactRouter.Outlet;\n    }\n  });\n  Object.defineProperty(exports, 'Route', {\n    enumerable: true,\n    get: function () {\n      return reactRouter.Route;\n    }\n  });\n  Object.defineProperty(exports, 'Router', {\n    enumerable: true,\n    get: function () {\n      return reactRouter.Router;\n    }\n  });\n  Object.defineProperty(exports, 'Routes', {\n    enumerable: true,\n    get: function () {\n      return reactRouter.Routes;\n    }\n  });\n  Object.defineProperty(exports, 'UNSAFE_DataRouterContext', {\n    enumerable: true,\n    get: function () {\n      return reactRouter.UNSAFE_DataRouterContext;\n    }\n  });\n  Object.defineProperty(exports, 'UNSAFE_DataRouterStateContext', {\n    enumerable: true,\n    get: function () {\n      return reactRouter.UNSAFE_DataRouterStateContext;\n    }\n  });\n  Object.defineProperty(exports, 'UNSAFE_LocationContext', {\n    enumerable: true,\n    get: function () {\n      return reactRouter.UNSAFE_LocationContext;\n    }\n  });\n  Object.defineProperty(exports, 'UNSAFE_NavigationContext', {\n    enumerable: true,\n    get: function () {\n      return reactRouter.UNSAFE_NavigationContext;\n    }\n  });\n  Object.defineProperty(exports, 'UNSAFE_RouteContext', {\n    enumerable: true,\n    get: function () {\n      return reactRouter.UNSAFE_RouteContext;\n    }\n  });\n  Object.defineProperty(exports, 'UNSAFE_useRouteId', {\n    enumerable: true,\n    get: function () {\n      return reactRouter.UNSAFE_useRouteId;\n    }\n  });\n  Object.defineProperty(exports, 'createMemoryRouter', {\n    enumerable: true,\n    get: function () {\n      return reactRouter.createMemoryRouter;\n    }\n  });\n  Object.defineProperty(exports, 'createPath', {\n    enumerable: true,\n    get: function () {\n      return reactRouter.createPath;\n    }\n  });\n  Object.defineProperty(exports, 'createRoutesFromChildren', {\n    enumerable: true,\n    get: function () {\n      return reactRouter.createRoutesFromChildren;\n    }\n  });\n  Object.defineProperty(exports, 'createRoutesFromElements', {\n    enumerable: true,\n    get: function () {\n      return reactRouter.createRoutesFromElements;\n    }\n  });\n  Object.defineProperty(exports, 'defer', {\n    enumerable: true,\n    get: function () {\n      return reactRouter.defer;\n    }\n  });\n  Object.defineProperty(exports, 'generatePath', {\n    enumerable: true,\n    get: function () {\n      return reactRouter.generatePath;\n    }\n  });\n  Object.defineProperty(exports, 'isRouteErrorResponse', {\n    enumerable: true,\n    get: function () {\n      return reactRouter.isRouteErrorResponse;\n    }\n  });\n  Object.defineProperty(exports, 'json', {\n    enumerable: true,\n    get: function () {\n      return reactRouter.json;\n    }\n  });\n  Object.defineProperty(exports, 'matchPath', {\n    enumerable: true,\n    get: function () {\n      return reactRouter.matchPath;\n    }\n  });\n  Object.defineProperty(exports, 'matchRoutes', {\n    enumerable: true,\n    get: function () {\n      return reactRouter.matchRoutes;\n    }\n  });\n  Object.defineProperty(exports, 'parsePath', {\n    enumerable: true,\n    get: function () {\n      return reactRouter.parsePath;\n    }\n  });\n  Object.defineProperty(exports, 'redirect', {\n    enumerable: true,\n    get: function () {\n      return reactRouter.redirect;\n    }\n  });\n  Object.defineProperty(exports, 'redirectDocument', {\n    enumerable: true,\n    get: function () {\n      return reactRouter.redirectDocument;\n    }\n  });\n  Object.defineProperty(exports, 'renderMatches', {\n    enumerable: true,\n    get: function () {\n      return reactRouter.renderMatches;\n    }\n  });\n  Object.defineProperty(exports, 'resolvePath', {\n    enumerable: true,\n    get: function () {\n      return reactRouter.resolvePath;\n    }\n  });\n  Object.defineProperty(exports, 'useActionData', {\n    enumerable: true,\n    get: function () {\n      return reactRouter.useActionData;\n    }\n  });\n  Object.defineProperty(exports, 'useAsyncError', {\n    enumerable: true,\n    get: function () {\n      return reactRouter.useAsyncError;\n    }\n  });\n  Object.defineProperty(exports, 'useAsyncValue', {\n    enumerable: true,\n    get: function () {\n      return reactRouter.useAsyncValue;\n    }\n  });\n  Object.defineProperty(exports, 'useBlocker', {\n    enumerable: true,\n    get: function () {\n      return reactRouter.useBlocker;\n    }\n  });\n  Object.defineProperty(exports, 'useHref', {\n    enumerable: true,\n    get: function () {\n      return reactRouter.useHref;\n    }\n  });\n  Object.defineProperty(exports, 'useInRouterContext', {\n    enumerable: true,\n    get: function () {\n      return reactRouter.useInRouterContext;\n    }\n  });\n  Object.defineProperty(exports, 'useLoaderData', {\n    enumerable: true,\n    get: function () {\n      return reactRouter.useLoaderData;\n    }\n  });\n  Object.defineProperty(exports, 'useLocation', {\n    enumerable: true,\n    get: function () {\n      return reactRouter.useLocation;\n    }\n  });\n  Object.defineProperty(exports, 'useMatch', {\n    enumerable: true,\n    get: function () {\n      return reactRouter.useMatch;\n    }\n  });\n  Object.defineProperty(exports, 'useMatches', {\n    enumerable: true,\n    get: function () {\n      return reactRouter.useMatches;\n    }\n  });\n  Object.defineProperty(exports, 'useNavigate', {\n    enumerable: true,\n    get: function () {\n      return reactRouter.useNavigate;\n    }\n  });\n  Object.defineProperty(exports, 'useNavigation', {\n    enumerable: true,\n    get: function () {\n      return reactRouter.useNavigation;\n    }\n  });\n  Object.defineProperty(exports, 'useNavigationType', {\n    enumerable: true,\n    get: function () {\n      return reactRouter.useNavigationType;\n    }\n  });\n  Object.defineProperty(exports, 'useOutlet', {\n    enumerable: true,\n    get: function () {\n      return reactRouter.useOutlet;\n    }\n  });\n  Object.defineProperty(exports, 'useOutletContext', {\n    enumerable: true,\n    get: function () {\n      return reactRouter.useOutletContext;\n    }\n  });\n  Object.defineProperty(exports, 'useParams', {\n    enumerable: true,\n    get: function () {\n      return reactRouter.useParams;\n    }\n  });\n  Object.defineProperty(exports, 'useResolvedPath', {\n    enumerable: true,\n    get: function () {\n      return reactRouter.useResolvedPath;\n    }\n  });\n  Object.defineProperty(exports, 'useRevalidator', {\n    enumerable: true,\n    get: function () {\n      return reactRouter.useRevalidator;\n    }\n  });\n  Object.defineProperty(exports, 'useRouteError', {\n    enumerable: true,\n    get: function () {\n      return reactRouter.useRouteError;\n    }\n  });\n  Object.defineProperty(exports, 'useRouteLoaderData', {\n    enumerable: true,\n    get: function () {\n      return reactRouter.useRouteLoaderData;\n    }\n  });\n  Object.defineProperty(exports, 'useRoutes', {\n    enumerable: true,\n    get: function () {\n      return reactRouter.useRoutes;\n    }\n  });\n  exports.BrowserRouter = BrowserRouter;\n  exports.Form = Form;\n  exports.HashRouter = HashRouter;\n  exports.Link = Link;\n  exports.NavLink = NavLink;\n  exports.RouterProvider = RouterProvider;\n  exports.ScrollRestoration = ScrollRestoration;\n  exports.UNSAFE_FetchersContext = FetchersContext;\n  exports.UNSAFE_ViewTransitionContext = ViewTransitionContext;\n  exports.UNSAFE_useScrollRestoration = useScrollRestoration;\n  exports.createBrowserRouter = createBrowserRouter;\n  exports.createHashRouter = createHashRouter;\n  exports.createSearchParams = createSearchParams;\n  exports.unstable_HistoryRouter = HistoryRouter;\n  exports.unstable_usePrompt = usePrompt;\n  exports.unstable_useViewTransitionState = useViewTransitionState;\n  exports.useBeforeUnload = useBeforeUnload;\n  exports.useFetcher = useFetcher;\n  exports.useFetchers = useFetchers;\n  exports.useFormAction = useFormAction;\n  exports.useLinkClickHandler = useLinkClickHandler;\n  exports.useSearchParams = useSearchParams;\n  exports.useSubmit = useSubmit;\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n});","map":{"version":3,"names":["defaultMethod","defaultEncType","isHtmlElement","object","tagName","isButtonElement","toLowerCase","isFormElement","isInputElement","isModifiedEvent","event","metaKey","altKey","ctrlKey","shiftKey","shouldProcessLinkClick","target","button","createSearchParams","init","URLSearchParams","Array","isArray","Object","keys","reduce","memo","key","value","concat","map","v","getSearchParamsForLocation","locationSearch","defaultSearchParams","searchParams","forEach","_","has","getAll","append","_formDataSupportsSubmitter","isFormDataSubmitterSupported","FormData","document","createElement","e","supportedFormEncTypes","Set","getFormEncType","encType","router","UNSAFE_warning","getFormSubmissionInfo","basename","method","action","formData","body","attr","getAttribute","stripBasename","type","form","Error","name","prefix","undefined","createBrowserRouter","routes","opts","createRouter","future","_extends","v7_prependBasename","history","createBrowserHistory","window","hydrationData","parseHydrationData","reactRouter","UNSAFE_mapRouteProperties","initialize","createHashRouter","createHashHistory","_window","state","__staticRouterHydrationData","errors","deserializeErrors","entries","serialized","val","__type","UNSAFE_ErrorResponseImpl","status","statusText","data","internal","__subType","ErrorConstructor","error","message","stack","ViewTransitionContext","React__namespace","createContext","isTransitioning","displayName","FetchersContext","Map","START_TRANSITION","startTransitionImpl","FLUSH_SYNC","flushSyncImpl","ReactDOM__namespace","USE_ID","useIdImpl","startTransitionSafe","cb","flushSyncSafe","Deferred","constructor","promise","Promise","resolve","reject","reason","RouterProvider","_ref","fallbackElement","router$1","setStateImpl","useState","pendingState","setPendingState","vtContext","setVtContext","renderDfd","setRenderDfd","transition","setTransition","interruption","setInterruption","fetcherData","useRef","v7_startTransition","optInStartTransition","useCallback","setState","newState","_ref2","deletedFetchers","unstable_flushSync","flushSync","unstable_viewTransitionOpts","viewTransitionOpts","current","delete","fetchers","fetcher","set","isViewTransitionUnavailable","startViewTransition","skipTransition","currentLocation","nextLocation","t","finished","finally","useLayoutEffect","subscribe","useEffect","renderPromise","location","v7_partialHydration","navigator","useMemo","createHref","encodeLocation","go","n","navigate","push","to","preventScrollReset","replace","dataRouterContext","static","Fragment","UNSAFE_DataRouterContext","Provider","UNSAFE_DataRouterStateContext","Router","navigationType","historyAction","v7_relativeSplatPath","initialized","DataRoutes","_ref3","UNSAFE_useRoutesImpl","BrowserRouter","_ref4","children","historyRef","v5Compat","listen","HashRouter","_ref5","HistoryRouter","_ref6","isBrowser","ABSOLUTE_URL_REGEX","Link","forwardRef","LinkWithRef","_ref7","ref","onClick","relative","reloadDocument","unstable_viewTransition","rest","_objectWithoutPropertiesLoose","_excluded","useContext","UNSAFE_NavigationContext","absoluteHref","isExternal","test","currentUrl","URL","href","targetUrl","startsWith","protocol","path","pathname","origin","search","hash","useHref","internalOnClick","useLinkClickHandler","handleClick","defaultPrevented","NavLink","NavLinkWithRef","_ref8","ariaCurrentProp","caseSensitive","className","classNameProp","end","style","styleProp","_excluded2","useResolvedPath","useLocation","routerState","useViewTransitionState","toPathname","locationPathname","nextLocationPathname","navigation","endSlashPosition","endsWith","length","isActive","charAt","isPending","renderProps","ariaCurrent","filter","Boolean","join","Form","_ref9","forwardedRef","fetcherKey","onSubmit","props","_excluded3","submit","useSubmit","formAction","useFormAction","formMethod","submitHandler","preventDefault","submitter","nativeEvent","submitMethod","currentTarget","ScrollRestoration","_ref10","getKey","storageKey","useScrollRestoration","DataRouterHook","DataRouterStateHook","getDataRouterConsoleError","hookName","useDataRouterContext","ctx","UNSAFE_invariant","useDataRouterState","_temp","replaceProp","useNavigate","createPath","useSearchParams","defaultInit","defaultSearchParamsRef","hasSetSearchParamsRef","setSearchParams","nextInit","navigateOptions","newSearchParams","validateClientSideSubmission","fetcherId","getUniqueFetcherId","String","UseSubmit","currentRouteId","UNSAFE_useRouteId","options","fetch","formEncType","fromRouteId","_temp2","routeContext","UNSAFE_RouteContext","match","matches","slice","params","get","toString","route","index","joinPaths","useFetcher","_temp3","_route$matches","UseFetcher","routeId","id","defaultKey","setFetcherKey","getFetcher","deleteFetcher","load","submitImpl","FetcherForm","IDLE_FETCHER","fetcherWithComponents","useFetchers","UseFetchers","from","_ref11","SCROLL_RESTORATION_STORAGE_KEY","savedScrollPositions","_temp4","UseScrollRestoration","restoreScrollPosition","useMatches","useNavigation","scrollRestoration","usePageHide","scrollY","sessionStorage","setItem","JSON","stringify","sessionPositions","getItem","parse","getKeyWithoutBasename","disableScrollRestoration","enableScrollRestoration","scrollTo","el","getElementById","decodeURIComponent","scrollIntoView","useBeforeUnload","callback","capture","addEventListener","removeEventListener","usePrompt","_ref12","when","blocker","useBlocker","proceed","confirm","setTimeout","reset","currentPath","nextPath","matchPath"],"sources":["C:\\Users\\thiso\\OneDrive\\Área de Trabalho\\TESTE\\teste\\node_modules\\react-router-dom\\dom.ts","C:\\Users\\thiso\\OneDrive\\Área de Trabalho\\TESTE\\teste\\node_modules\\react-router-dom\\index.tsx"],"sourcesContent":["import type {\n  FormEncType,\n  HTMLFormMethod,\n  RelativeRoutingType,\n} from \"@remix-run/router\";\nimport { stripBasename, UNSAFE_warning as warning } from \"@remix-run/router\";\n\nexport const defaultMethod: HTMLFormMethod = \"get\";\nconst defaultEncType: FormEncType = \"application/x-www-form-urlencoded\";\n\nexport function isHtmlElement(object: any): object is HTMLElement {\n  return object != null && typeof object.tagName === \"string\";\n}\n\nexport function isButtonElement(object: any): object is HTMLButtonElement {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"button\";\n}\n\nexport function isFormElement(object: any): object is HTMLFormElement {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"form\";\n}\n\nexport function isInputElement(object: any): object is HTMLInputElement {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"input\";\n}\n\ntype LimitedMouseEvent = Pick<\n  MouseEvent,\n  \"button\" | \"metaKey\" | \"altKey\" | \"ctrlKey\" | \"shiftKey\"\n>;\n\nfunction isModifiedEvent(event: LimitedMouseEvent) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n}\n\nexport function shouldProcessLinkClick(\n  event: LimitedMouseEvent,\n  target?: string\n) {\n  return (\n    event.button === 0 && // Ignore everything but left clicks\n    (!target || target === \"_self\") && // Let browser handle \"target=_blank\" etc.\n    !isModifiedEvent(event) // Ignore clicks with modifier keys\n  );\n}\n\nexport type ParamKeyValuePair = [string, string];\n\nexport type URLSearchParamsInit =\n  | string\n  | ParamKeyValuePair[]\n  | Record<string, string | string[]>\n  | URLSearchParams;\n\n/**\n * Creates a URLSearchParams object using the given initializer.\n *\n * This is identical to `new URLSearchParams(init)` except it also\n * supports arrays as values in the object form of the initializer\n * instead of just strings. This is convenient when you need multiple\n * values for a given key, but don't want to use an array initializer.\n *\n * For example, instead of:\n *\n *   let searchParams = new URLSearchParams([\n *     ['sort', 'name'],\n *     ['sort', 'price']\n *   ]);\n *\n * you can do:\n *\n *   let searchParams = createSearchParams({\n *     sort: ['name', 'price']\n *   });\n */\nexport function createSearchParams(\n  init: URLSearchParamsInit = \"\"\n): URLSearchParams {\n  return new URLSearchParams(\n    typeof init === \"string\" ||\n    Array.isArray(init) ||\n    init instanceof URLSearchParams\n      ? init\n      : Object.keys(init).reduce((memo, key) => {\n          let value = init[key];\n          return memo.concat(\n            Array.isArray(value) ? value.map((v) => [key, v]) : [[key, value]]\n          );\n        }, [] as ParamKeyValuePair[])\n  );\n}\n\nexport function getSearchParamsForLocation(\n  locationSearch: string,\n  defaultSearchParams: URLSearchParams | null\n) {\n  let searchParams = createSearchParams(locationSearch);\n\n  if (defaultSearchParams) {\n    // Use `defaultSearchParams.forEach(...)` here instead of iterating of\n    // `defaultSearchParams.keys()` to work-around a bug in Firefox related to\n    // web extensions. Relevant Bugzilla tickets:\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=1414602\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=1023984\n    defaultSearchParams.forEach((_, key) => {\n      if (!searchParams.has(key)) {\n        defaultSearchParams.getAll(key).forEach((value) => {\n          searchParams.append(key, value);\n        });\n      }\n    });\n  }\n\n  return searchParams;\n}\n\n// Thanks https://github.com/sindresorhus/type-fest!\ntype JsonObject = { [Key in string]: JsonValue } & {\n  [Key in string]?: JsonValue | undefined;\n};\ntype JsonArray = JsonValue[] | readonly JsonValue[];\ntype JsonPrimitive = string | number | boolean | null;\ntype JsonValue = JsonPrimitive | JsonObject | JsonArray;\n\nexport type SubmitTarget =\n  | HTMLFormElement\n  | HTMLButtonElement\n  | HTMLInputElement\n  | FormData\n  | URLSearchParams\n  | JsonValue\n  | null;\n\n// One-time check for submitter support\nlet _formDataSupportsSubmitter: boolean | null = null;\n\nfunction isFormDataSubmitterSupported() {\n  if (_formDataSupportsSubmitter === null) {\n    try {\n      new FormData(\n        document.createElement(\"form\"),\n        // @ts-expect-error if FormData supports the submitter parameter, this will throw\n        0\n      );\n      _formDataSupportsSubmitter = false;\n    } catch (e) {\n      _formDataSupportsSubmitter = true;\n    }\n  }\n  return _formDataSupportsSubmitter;\n}\n\nexport interface SubmitOptions {\n  /**\n   * The HTTP method used to submit the form. Overrides `<form method>`.\n   * Defaults to \"GET\".\n   */\n  method?: HTMLFormMethod;\n\n  /**\n   * The action URL path used to submit the form. Overrides `<form action>`.\n   * Defaults to the path of the current route.\n   */\n  action?: string;\n\n  /**\n   * The encoding used to submit the form. Overrides `<form encType>`.\n   * Defaults to \"application/x-www-form-urlencoded\".\n   */\n  encType?: FormEncType;\n\n  /**\n   * Indicate a specific fetcherKey to use when using navigate=false\n   */\n  fetcherKey?: string;\n\n  /**\n   * navigate=false will use a fetcher instead of a navigation\n   */\n  navigate?: boolean;\n\n  /**\n   * Set `true` to replace the current entry in the browser's history stack\n   * instead of creating a new one (i.e. stay on \"the same page\"). Defaults\n   * to `false`.\n   */\n  replace?: boolean;\n\n  /**\n   * State object to add to the history stack entry for this navigation\n   */\n  state?: any;\n\n  /**\n   * Determines whether the form action is relative to the route hierarchy or\n   * the pathname.  Use this if you want to opt out of navigating the route\n   * hierarchy and want to instead route based on /-delimited URL segments\n   */\n  relative?: RelativeRoutingType;\n\n  /**\n   * In browser-based environments, prevent resetting scroll after this\n   * navigation when using the <ScrollRestoration> component\n   */\n  preventScrollReset?: boolean;\n\n  /**\n   * Enable flushSync for this navigation's state updates\n   */\n  unstable_flushSync?: boolean;\n\n  /**\n   * Enable view transitions on this submission navigation\n   */\n  unstable_viewTransition?: boolean;\n}\n\nconst supportedFormEncTypes: Set<FormEncType> = new Set([\n  \"application/x-www-form-urlencoded\",\n  \"multipart/form-data\",\n  \"text/plain\",\n]);\n\nfunction getFormEncType(encType: string | null) {\n  if (encType != null && !supportedFormEncTypes.has(encType as FormEncType)) {\n    warning(\n      false,\n      `\"${encType}\" is not a valid \\`encType\\` for \\`<Form>\\`/\\`<fetcher.Form>\\` ` +\n        `and will default to \"${defaultEncType}\"`\n    );\n\n    return null;\n  }\n  return encType;\n}\n\nexport function getFormSubmissionInfo(\n  target: SubmitTarget,\n  basename: string\n): {\n  action: string | null;\n  method: string;\n  encType: string;\n  formData: FormData | undefined;\n  body: any;\n} {\n  let method: string;\n  let action: string | null;\n  let encType: string;\n  let formData: FormData | undefined;\n  let body: any;\n\n  if (isFormElement(target)) {\n    // When grabbing the action from the element, it will have had the basename\n    // prefixed to ensure non-JS scenarios work, so strip it since we'll\n    // re-prefix in the router\n    let attr = target.getAttribute(\"action\");\n    action = attr ? stripBasename(attr, basename) : null;\n    method = target.getAttribute(\"method\") || defaultMethod;\n    encType = getFormEncType(target.getAttribute(\"enctype\")) || defaultEncType;\n\n    formData = new FormData(target);\n  } else if (\n    isButtonElement(target) ||\n    (isInputElement(target) &&\n      (target.type === \"submit\" || target.type === \"image\"))\n  ) {\n    let form = target.form;\n\n    if (form == null) {\n      throw new Error(\n        `Cannot submit a <button> or <input type=\"submit\"> without a <form>`\n      );\n    }\n\n    // <button>/<input type=\"submit\"> may override attributes of <form>\n\n    // When grabbing the action from the element, it will have had the basename\n    // prefixed to ensure non-JS scenarios work, so strip it since we'll\n    // re-prefix in the router\n    let attr = target.getAttribute(\"formaction\") || form.getAttribute(\"action\");\n    action = attr ? stripBasename(attr, basename) : null;\n\n    method =\n      target.getAttribute(\"formmethod\") ||\n      form.getAttribute(\"method\") ||\n      defaultMethod;\n    encType =\n      getFormEncType(target.getAttribute(\"formenctype\")) ||\n      getFormEncType(form.getAttribute(\"enctype\")) ||\n      defaultEncType;\n\n    // Build a FormData object populated from a form and submitter\n    formData = new FormData(form, target);\n\n    // If this browser doesn't support the `FormData(el, submitter)` format,\n    // then tack on the submitter value at the end.  This is a lightweight\n    // solution that is not 100% spec compliant.  For complete support in older\n    // browsers, consider using the `formdata-submitter-polyfill` package\n    if (!isFormDataSubmitterSupported()) {\n      let { name, type, value } = target;\n      if (type === \"image\") {\n        let prefix = name ? `${name}.` : \"\";\n        formData.append(`${prefix}x`, \"0\");\n        formData.append(`${prefix}y`, \"0\");\n      } else if (name) {\n        formData.append(name, value);\n      }\n    }\n  } else if (isHtmlElement(target)) {\n    throw new Error(\n      `Cannot submit element that is not <form>, <button>, or ` +\n        `<input type=\"submit|image\">`\n    );\n  } else {\n    method = defaultMethod;\n    action = null;\n    encType = defaultEncType;\n    body = target;\n  }\n\n  // Send body for <Form encType=\"text/plain\" so we encode it into text\n  if (formData && encType === \"text/plain\") {\n    body = formData;\n    formData = undefined;\n  }\n\n  return { action, method: method.toLowerCase(), encType, formData, body };\n}\n","/**\n * NOTE: If you refactor this to split up the modules into separate files,\n * you'll need to update the rollup config for react-router-dom-v5-compat.\n */\nimport * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport type {\n  DataRouteObject,\n  FutureConfig,\n  Location,\n  NavigateOptions,\n  NavigationType,\n  Navigator,\n  RelativeRoutingType,\n  RouteObject,\n  RouterProviderProps,\n  To,\n} from \"react-router\";\nimport {\n  Router,\n  createPath,\n  useHref,\n  useLocation,\n  useMatches,\n  useNavigate,\n  useNavigation,\n  useResolvedPath,\n  useBlocker,\n  UNSAFE_DataRouterContext as DataRouterContext,\n  UNSAFE_DataRouterStateContext as DataRouterStateContext,\n  UNSAFE_NavigationContext as NavigationContext,\n  UNSAFE_RouteContext as RouteContext,\n  UNSAFE_mapRouteProperties as mapRouteProperties,\n  UNSAFE_useRouteId as useRouteId,\n  UNSAFE_useRoutesImpl as useRoutesImpl,\n} from \"react-router\";\nimport type {\n  BrowserHistory,\n  Fetcher,\n  FormEncType,\n  FormMethod,\n  FutureConfig as RouterFutureConfig,\n  GetScrollRestorationKeyFunction,\n  HashHistory,\n  History,\n  HTMLFormMethod,\n  HydrationState,\n  Router as RemixRouter,\n  V7_FormMethod,\n  RouterState,\n  RouterSubscriber,\n  BlockerFunction,\n} from \"@remix-run/router\";\nimport {\n  createRouter,\n  createBrowserHistory,\n  createHashHistory,\n  joinPaths,\n  stripBasename,\n  UNSAFE_ErrorResponseImpl as ErrorResponseImpl,\n  UNSAFE_invariant as invariant,\n  UNSAFE_warning as warning,\n  matchPath,\n  IDLE_FETCHER,\n} from \"@remix-run/router\";\n\nimport type {\n  SubmitOptions,\n  ParamKeyValuePair,\n  URLSearchParamsInit,\n  SubmitTarget,\n} from \"./dom\";\nimport {\n  createSearchParams,\n  defaultMethod,\n  getFormSubmissionInfo,\n  getSearchParamsForLocation,\n  shouldProcessLinkClick,\n} from \"./dom\";\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Re-exports\n////////////////////////////////////////////////////////////////////////////////\n\nexport type {\n  FormEncType,\n  FormMethod,\n  GetScrollRestorationKeyFunction,\n  ParamKeyValuePair,\n  SubmitOptions,\n  URLSearchParamsInit,\n  V7_FormMethod,\n};\nexport { createSearchParams };\n\n// Note: Keep in sync with react-router exports!\nexport type {\n  ActionFunction,\n  ActionFunctionArgs,\n  AwaitProps,\n  Blocker,\n  BlockerFunction,\n  DataRouteMatch,\n  DataRouteObject,\n  ErrorResponse,\n  Fetcher,\n  FutureConfig,\n  Hash,\n  IndexRouteObject,\n  IndexRouteProps,\n  JsonFunction,\n  LazyRouteFunction,\n  LayoutRouteProps,\n  LoaderFunction,\n  LoaderFunctionArgs,\n  Location,\n  MemoryRouterProps,\n  NavigateFunction,\n  NavigateOptions,\n  NavigateProps,\n  Navigation,\n  Navigator,\n  NonIndexRouteObject,\n  OutletProps,\n  Params,\n  ParamParseKey,\n  Path,\n  PathMatch,\n  Pathname,\n  PathParam,\n  PathPattern,\n  PathRouteProps,\n  RedirectFunction,\n  RelativeRoutingType,\n  RouteMatch,\n  RouteObject,\n  RouteProps,\n  RouterProps,\n  RouterProviderProps,\n  RoutesProps,\n  Search,\n  ShouldRevalidateFunction,\n  ShouldRevalidateFunctionArgs,\n  To,\n  UIMatch,\n} from \"react-router\";\nexport {\n  AbortedDeferredError,\n  Await,\n  MemoryRouter,\n  Navigate,\n  NavigationType,\n  Outlet,\n  Route,\n  Router,\n  Routes,\n  createMemoryRouter,\n  createPath,\n  createRoutesFromChildren,\n  createRoutesFromElements,\n  defer,\n  isRouteErrorResponse,\n  generatePath,\n  json,\n  matchPath,\n  matchRoutes,\n  parsePath,\n  redirect,\n  redirectDocument,\n  renderMatches,\n  resolvePath,\n  useActionData,\n  useAsyncError,\n  useAsyncValue,\n  useBlocker,\n  useHref,\n  useInRouterContext,\n  useLoaderData,\n  useLocation,\n  useMatch,\n  useMatches,\n  useNavigate,\n  useNavigation,\n  useNavigationType,\n  useOutlet,\n  useOutletContext,\n  useParams,\n  useResolvedPath,\n  useRevalidator,\n  useRouteError,\n  useRouteLoaderData,\n  useRoutes,\n} from \"react-router\";\n\n///////////////////////////////////////////////////////////////////////////////\n// DANGER! PLEASE READ ME!\n// We provide these exports as an escape hatch in the event that you need any\n// routing data that we don't provide an explicit API for. With that said, we\n// want to cover your use case if we can, so if you feel the need to use these\n// we want to hear from you. Let us know what you're building and we'll do our\n// best to make sure we can support you!\n//\n// We consider these exports an implementation detail and do not guarantee\n// against any breaking changes, regardless of the semver release. Use with\n// extreme caution and only if you understand the consequences. Godspeed.\n///////////////////////////////////////////////////////////////////////////////\n\n/** @internal */\nexport {\n  UNSAFE_DataRouterContext,\n  UNSAFE_DataRouterStateContext,\n  UNSAFE_NavigationContext,\n  UNSAFE_LocationContext,\n  UNSAFE_RouteContext,\n  UNSAFE_useRouteId,\n} from \"react-router\";\n//#endregion\n\ndeclare global {\n  var __staticRouterHydrationData: HydrationState | undefined;\n  interface Document {\n    startViewTransition(cb: () => Promise<void> | void): ViewTransition;\n  }\n}\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Routers\n////////////////////////////////////////////////////////////////////////////////\n\ninterface DOMRouterOpts {\n  basename?: string;\n  future?: Partial<Omit<RouterFutureConfig, \"v7_prependBasename\">>;\n  hydrationData?: HydrationState;\n  window?: Window;\n}\n\nexport function createBrowserRouter(\n  routes: RouteObject[],\n  opts?: DOMRouterOpts\n): RemixRouter {\n  return createRouter({\n    basename: opts?.basename,\n    future: {\n      ...opts?.future,\n      v7_prependBasename: true,\n    },\n    history: createBrowserHistory({ window: opts?.window }),\n    hydrationData: opts?.hydrationData || parseHydrationData(),\n    routes,\n    mapRouteProperties,\n    window: opts?.window,\n  }).initialize();\n}\n\nexport function createHashRouter(\n  routes: RouteObject[],\n  opts?: DOMRouterOpts\n): RemixRouter {\n  return createRouter({\n    basename: opts?.basename,\n    future: {\n      ...opts?.future,\n      v7_prependBasename: true,\n    },\n    history: createHashHistory({ window: opts?.window }),\n    hydrationData: opts?.hydrationData || parseHydrationData(),\n    routes,\n    mapRouteProperties,\n    window: opts?.window,\n  }).initialize();\n}\n\nfunction parseHydrationData(): HydrationState | undefined {\n  let state = window?.__staticRouterHydrationData;\n  if (state && state.errors) {\n    state = {\n      ...state,\n      errors: deserializeErrors(state.errors),\n    };\n  }\n  return state;\n}\n\nfunction deserializeErrors(\n  errors: RemixRouter[\"state\"][\"errors\"]\n): RemixRouter[\"state\"][\"errors\"] {\n  if (!errors) return null;\n  let entries = Object.entries(errors);\n  let serialized: RemixRouter[\"state\"][\"errors\"] = {};\n  for (let [key, val] of entries) {\n    // Hey you!  If you change this, please change the corresponding logic in\n    // serializeErrors in react-router-dom/server.tsx :)\n    if (val && val.__type === \"RouteErrorResponse\") {\n      serialized[key] = new ErrorResponseImpl(\n        val.status,\n        val.statusText,\n        val.data,\n        val.internal === true\n      );\n    } else if (val && val.__type === \"Error\") {\n      // Attempt to reconstruct the right type of Error (i.e., ReferenceError)\n      if (val.__subType) {\n        let ErrorConstructor = window[val.__subType];\n        if (typeof ErrorConstructor === \"function\") {\n          try {\n            // @ts-expect-error\n            let error = new ErrorConstructor(val.message);\n            // Wipe away the client-side stack trace.  Nothing to fill it in with\n            // because we don't serialize SSR stack traces for security reasons\n            error.stack = \"\";\n            serialized[key] = error;\n          } catch (e) {\n            // no-op - fall through and create a normal Error\n          }\n        }\n      }\n\n      if (serialized[key] == null) {\n        let error = new Error(val.message);\n        // Wipe away the client-side stack trace.  Nothing to fill it in with\n        // because we don't serialize SSR stack traces for security reasons\n        error.stack = \"\";\n        serialized[key] = error;\n      }\n    } else {\n      serialized[key] = val;\n    }\n  }\n  return serialized;\n}\n\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Contexts\n////////////////////////////////////////////////////////////////////////////////\n\ntype ViewTransitionContextObject =\n  | {\n      isTransitioning: false;\n    }\n  | {\n      isTransitioning: true;\n      flushSync: boolean;\n      currentLocation: Location;\n      nextLocation: Location;\n    };\n\nconst ViewTransitionContext = React.createContext<ViewTransitionContextObject>({\n  isTransitioning: false,\n});\nif (__DEV__) {\n  ViewTransitionContext.displayName = \"ViewTransition\";\n}\n\nexport { ViewTransitionContext as UNSAFE_ViewTransitionContext };\n\n// TODO: (v7) Change the useFetcher data from `any` to `unknown`\ntype FetchersContextObject = Map<string, any>;\n\nconst FetchersContext = React.createContext<FetchersContextObject>(new Map());\nif (__DEV__) {\n  FetchersContext.displayName = \"Fetchers\";\n}\n\nexport { FetchersContext as UNSAFE_FetchersContext };\n\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Components\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n  Webpack + React 17 fails to compile on any of the following because webpack\n  complains that `startTransition` doesn't exist in `React`:\n  * import { startTransition } from \"react\"\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React.startTransition(() => setState()) : setState()\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React[\"startTransition\"](() => setState()) : setState()\n\n  Moving it to a constant such as the following solves the Webpack/React 17 issue:\n  * import * as React from from \"react\";\n    const START_TRANSITION = \"startTransition\";\n    START_TRANSITION in React ? React[START_TRANSITION](() => setState()) : setState()\n\n  However, that introduces webpack/terser minification issues in production builds\n  in React 18 where minification/obfuscation ends up removing the call of\n  React.startTransition entirely from the first half of the ternary.  Grabbing\n  this exported reference once up front resolves that issue.\n\n  See https://github.com/remix-run/react-router/issues/10579\n*/\nconst START_TRANSITION = \"startTransition\";\nconst startTransitionImpl = React[START_TRANSITION];\nconst FLUSH_SYNC = \"flushSync\";\nconst flushSyncImpl = ReactDOM[FLUSH_SYNC];\nconst USE_ID = \"useId\";\nconst useIdImpl = React[USE_ID];\n\nfunction startTransitionSafe(cb: () => void) {\n  if (startTransitionImpl) {\n    startTransitionImpl(cb);\n  } else {\n    cb();\n  }\n}\n\nfunction flushSyncSafe(cb: () => void) {\n  if (flushSyncImpl) {\n    flushSyncImpl(cb);\n  } else {\n    cb();\n  }\n}\n\ninterface ViewTransition {\n  finished: Promise<void>;\n  ready: Promise<void>;\n  updateCallbackDone: Promise<void>;\n  skipTransition(): void;\n}\n\nclass Deferred<T> {\n  status: \"pending\" | \"resolved\" | \"rejected\" = \"pending\";\n  promise: Promise<T>;\n  // @ts-expect-error - no initializer\n  resolve: (value: T) => void;\n  // @ts-expect-error - no initializer\n  reject: (reason?: unknown) => void;\n  constructor() {\n    this.promise = new Promise((resolve, reject) => {\n      this.resolve = (value) => {\n        if (this.status === \"pending\") {\n          this.status = \"resolved\";\n          resolve(value);\n        }\n      };\n      this.reject = (reason) => {\n        if (this.status === \"pending\") {\n          this.status = \"rejected\";\n          reject(reason);\n        }\n      };\n    });\n  }\n}\n\n/**\n * Given a Remix Router instance, render the appropriate UI\n */\nexport function RouterProvider({\n  fallbackElement,\n  router,\n  future,\n}: RouterProviderProps): React.ReactElement {\n  let [state, setStateImpl] = React.useState(router.state);\n  let [pendingState, setPendingState] = React.useState<RouterState>();\n  let [vtContext, setVtContext] = React.useState<ViewTransitionContextObject>({\n    isTransitioning: false,\n  });\n  let [renderDfd, setRenderDfd] = React.useState<Deferred<void>>();\n  let [transition, setTransition] = React.useState<ViewTransition>();\n  let [interruption, setInterruption] = React.useState<{\n    state: RouterState;\n    currentLocation: Location;\n    nextLocation: Location;\n  }>();\n  let fetcherData = React.useRef<Map<string, any>>(new Map());\n  let { v7_startTransition } = future || {};\n\n  let optInStartTransition = React.useCallback(\n    (cb: () => void) => {\n      if (v7_startTransition) {\n        startTransitionSafe(cb);\n      } else {\n        cb();\n      }\n    },\n    [v7_startTransition]\n  );\n\n  let setState = React.useCallback<RouterSubscriber>(\n    (\n      newState: RouterState,\n      {\n        deletedFetchers,\n        unstable_flushSync: flushSync,\n        unstable_viewTransitionOpts: viewTransitionOpts,\n      }\n    ) => {\n      deletedFetchers.forEach((key) => fetcherData.current.delete(key));\n      newState.fetchers.forEach((fetcher, key) => {\n        if (fetcher.data !== undefined) {\n          fetcherData.current.set(key, fetcher.data);\n        }\n      });\n\n      let isViewTransitionUnavailable =\n        router.window == null ||\n        typeof router.window.document.startViewTransition !== \"function\";\n\n      // If this isn't a view transition or it's not available in this browser,\n      // just update and be done with it\n      if (!viewTransitionOpts || isViewTransitionUnavailable) {\n        if (flushSync) {\n          flushSyncSafe(() => setStateImpl(newState));\n        } else {\n          optInStartTransition(() => setStateImpl(newState));\n        }\n        return;\n      }\n\n      // flushSync + startViewTransition\n      if (flushSync) {\n        // Flush through the context to mark DOM elements as transition=ing\n        flushSyncSafe(() => {\n          // Cancel any pending transitions\n          if (transition) {\n            renderDfd && renderDfd.resolve();\n            transition.skipTransition();\n          }\n          setVtContext({\n            isTransitioning: true,\n            flushSync: true,\n            currentLocation: viewTransitionOpts.currentLocation,\n            nextLocation: viewTransitionOpts.nextLocation,\n          });\n        });\n\n        // Update the DOM\n        let t = router.window!.document.startViewTransition(() => {\n          flushSyncSafe(() => setStateImpl(newState));\n        });\n\n        // Clean up after the animation completes\n        t.finished.finally(() => {\n          flushSyncSafe(() => {\n            setRenderDfd(undefined);\n            setTransition(undefined);\n            setPendingState(undefined);\n            setVtContext({ isTransitioning: false });\n          });\n        });\n\n        flushSyncSafe(() => setTransition(t));\n        return;\n      }\n\n      // startTransition + startViewTransition\n      if (transition) {\n        // Interrupting an in-progress transition, cancel and let everything flush\n        // out, and then kick off a new transition from the interruption state\n        renderDfd && renderDfd.resolve();\n        transition.skipTransition();\n        setInterruption({\n          state: newState,\n          currentLocation: viewTransitionOpts.currentLocation,\n          nextLocation: viewTransitionOpts.nextLocation,\n        });\n      } else {\n        // Completed navigation update with opted-in view transitions, let 'er rip\n        setPendingState(newState);\n        setVtContext({\n          isTransitioning: true,\n          flushSync: false,\n          currentLocation: viewTransitionOpts.currentLocation,\n          nextLocation: viewTransitionOpts.nextLocation,\n        });\n      }\n    },\n    [router.window, transition, renderDfd, fetcherData, optInStartTransition]\n  );\n\n  // Need to use a layout effect here so we are subscribed early enough to\n  // pick up on any render-driven redirects/navigations (useEffect/<Navigate>)\n  React.useLayoutEffect(() => router.subscribe(setState), [router, setState]);\n\n  // When we start a view transition, create a Deferred we can use for the\n  // eventual \"completed\" render\n  React.useEffect(() => {\n    if (vtContext.isTransitioning && !vtContext.flushSync) {\n      setRenderDfd(new Deferred<void>());\n    }\n  }, [vtContext]);\n\n  // Once the deferred is created, kick off startViewTransition() to update the\n  // DOM and then wait on the Deferred to resolve (indicating the DOM update has\n  // happened)\n  React.useEffect(() => {\n    if (renderDfd && pendingState && router.window) {\n      let newState = pendingState;\n      let renderPromise = renderDfd.promise;\n      let transition = router.window.document.startViewTransition(async () => {\n        optInStartTransition(() => setStateImpl(newState));\n        await renderPromise;\n      });\n      transition.finished.finally(() => {\n        setRenderDfd(undefined);\n        setTransition(undefined);\n        setPendingState(undefined);\n        setVtContext({ isTransitioning: false });\n      });\n      setTransition(transition);\n    }\n  }, [optInStartTransition, pendingState, renderDfd, router.window]);\n\n  // When the new location finally renders and is committed to the DOM, this\n  // effect will run to resolve the transition\n  React.useEffect(() => {\n    if (\n      renderDfd &&\n      pendingState &&\n      state.location.key === pendingState.location.key\n    ) {\n      renderDfd.resolve();\n    }\n  }, [renderDfd, transition, state.location, pendingState]);\n\n  // If we get interrupted with a new navigation during a transition, we skip\n  // the active transition, let it cleanup, then kick it off again here\n  React.useEffect(() => {\n    if (!vtContext.isTransitioning && interruption) {\n      setPendingState(interruption.state);\n      setVtContext({\n        isTransitioning: true,\n        flushSync: false,\n        currentLocation: interruption.currentLocation,\n        nextLocation: interruption.nextLocation,\n      });\n      setInterruption(undefined);\n    }\n  }, [vtContext.isTransitioning, interruption]);\n\n  React.useEffect(() => {\n    warning(\n      fallbackElement == null || !router.future.v7_partialHydration,\n      \"`<RouterProvider fallbackElement>` is deprecated when using \" +\n        \"`v7_partialHydration`, use a `HydrateFallback` component instead\"\n    );\n    // Only log this once on initial mount\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  let navigator = React.useMemo((): Navigator => {\n    return {\n      createHref: router.createHref,\n      encodeLocation: router.encodeLocation,\n      go: (n) => router.navigate(n),\n      push: (to, state, opts) =>\n        router.navigate(to, {\n          state,\n          preventScrollReset: opts?.preventScrollReset,\n        }),\n      replace: (to, state, opts) =>\n        router.navigate(to, {\n          replace: true,\n          state,\n          preventScrollReset: opts?.preventScrollReset,\n        }),\n    };\n  }, [router]);\n\n  let basename = router.basename || \"/\";\n\n  let dataRouterContext = React.useMemo(\n    () => ({\n      router,\n      navigator,\n      static: false,\n      basename,\n    }),\n    [router, navigator, basename]\n  );\n\n  // The fragment and {null} here are important!  We need them to keep React 18's\n  // useId happy when we are server-rendering since we may have a <script> here\n  // containing the hydrated server-side staticContext (from StaticRouterProvider).\n  // useId relies on the component tree structure to generate deterministic id's\n  // so we need to ensure it remains the same on the client even though\n  // we don't need the <script> tag\n  return (\n    <>\n      <DataRouterContext.Provider value={dataRouterContext}>\n        <DataRouterStateContext.Provider value={state}>\n          <FetchersContext.Provider value={fetcherData.current}>\n            <ViewTransitionContext.Provider value={vtContext}>\n              <Router\n                basename={basename}\n                location={state.location}\n                navigationType={state.historyAction}\n                navigator={navigator}\n                future={{\n                  v7_relativeSplatPath: router.future.v7_relativeSplatPath,\n                }}\n              >\n                {state.initialized || router.future.v7_partialHydration ? (\n                  <DataRoutes\n                    routes={router.routes}\n                    future={router.future}\n                    state={state}\n                  />\n                ) : (\n                  fallbackElement\n                )}\n              </Router>\n            </ViewTransitionContext.Provider>\n          </FetchersContext.Provider>\n        </DataRouterStateContext.Provider>\n      </DataRouterContext.Provider>\n      {null}\n    </>\n  );\n}\n\nfunction DataRoutes({\n  routes,\n  future,\n  state,\n}: {\n  routes: DataRouteObject[];\n  future: RemixRouter[\"future\"];\n  state: RouterState;\n}): React.ReactElement | null {\n  return useRoutesImpl(routes, undefined, state, future);\n}\n\nexport interface BrowserRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  future?: Partial<FutureConfig>;\n  window?: Window;\n}\n\n/**\n * A `<Router>` for use in web browsers. Provides the cleanest URLs.\n */\nexport function BrowserRouter({\n  basename,\n  children,\n  future,\n  window,\n}: BrowserRouterProps) {\n  let historyRef = React.useRef<BrowserHistory>();\n  if (historyRef.current == null) {\n    historyRef.current = createBrowserHistory({ window, v5Compat: true });\n  }\n\n  let history = historyRef.current;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n  let { v7_startTransition } = future || {};\n  let setState = React.useCallback(\n    (newState: { action: NavigationType; location: Location }) => {\n      v7_startTransition && startTransitionImpl\n        ? startTransitionImpl(() => setStateImpl(newState))\n        : setStateImpl(newState);\n    },\n    [setStateImpl, v7_startTransition]\n  );\n\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n      future={future}\n    />\n  );\n}\n\nexport interface HashRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  future?: Partial<FutureConfig>;\n  window?: Window;\n}\n\n/**\n * A `<Router>` for use in web browsers. Stores the location in the hash\n * portion of the URL so it is not sent to the server.\n */\nexport function HashRouter({\n  basename,\n  children,\n  future,\n  window,\n}: HashRouterProps) {\n  let historyRef = React.useRef<HashHistory>();\n  if (historyRef.current == null) {\n    historyRef.current = createHashHistory({ window, v5Compat: true });\n  }\n\n  let history = historyRef.current;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n  let { v7_startTransition } = future || {};\n  let setState = React.useCallback(\n    (newState: { action: NavigationType; location: Location }) => {\n      v7_startTransition && startTransitionImpl\n        ? startTransitionImpl(() => setStateImpl(newState))\n        : setStateImpl(newState);\n    },\n    [setStateImpl, v7_startTransition]\n  );\n\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n      future={future}\n    />\n  );\n}\n\nexport interface HistoryRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  future?: FutureConfig;\n  history: History;\n}\n\n/**\n * A `<Router>` that accepts a pre-instantiated history object. It's important\n * to note that using your own history object is highly discouraged and may add\n * two versions of the history library to your bundles unless you use the same\n * version of the history library that React Router uses internally.\n */\nfunction HistoryRouter({\n  basename,\n  children,\n  future,\n  history,\n}: HistoryRouterProps) {\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n  let { v7_startTransition } = future || {};\n  let setState = React.useCallback(\n    (newState: { action: NavigationType; location: Location }) => {\n      v7_startTransition && startTransitionImpl\n        ? startTransitionImpl(() => setStateImpl(newState))\n        : setStateImpl(newState);\n    },\n    [setStateImpl, v7_startTransition]\n  );\n\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n      future={future}\n    />\n  );\n}\n\nif (__DEV__) {\n  HistoryRouter.displayName = \"unstable_HistoryRouter\";\n}\n\nexport { HistoryRouter as unstable_HistoryRouter };\n\nexport interface LinkProps\n  extends Omit<React.AnchorHTMLAttributes<HTMLAnchorElement>, \"href\"> {\n  reloadDocument?: boolean;\n  replace?: boolean;\n  state?: any;\n  preventScrollReset?: boolean;\n  relative?: RelativeRoutingType;\n  to: To;\n  unstable_viewTransition?: boolean;\n}\n\nconst isBrowser =\n  typeof window !== \"undefined\" &&\n  typeof window.document !== \"undefined\" &&\n  typeof window.document.createElement !== \"undefined\";\n\nconst ABSOLUTE_URL_REGEX = /^(?:[a-z][a-z0-9+.-]*:|\\/\\/)/i;\n\n/**\n * The public API for rendering a history-aware `<a>`.\n */\nexport const Link = React.forwardRef<HTMLAnchorElement, LinkProps>(\n  function LinkWithRef(\n    {\n      onClick,\n      relative,\n      reloadDocument,\n      replace,\n      state,\n      target,\n      to,\n      preventScrollReset,\n      unstable_viewTransition,\n      ...rest\n    },\n    ref\n  ) {\n    let { basename } = React.useContext(NavigationContext);\n\n    // Rendered into <a href> for absolute URLs\n    let absoluteHref;\n    let isExternal = false;\n\n    if (typeof to === \"string\" && ABSOLUTE_URL_REGEX.test(to)) {\n      // Render the absolute href server- and client-side\n      absoluteHref = to;\n\n      // Only check for external origins client-side\n      if (isBrowser) {\n        try {\n          let currentUrl = new URL(window.location.href);\n          let targetUrl = to.startsWith(\"//\")\n            ? new URL(currentUrl.protocol + to)\n            : new URL(to);\n          let path = stripBasename(targetUrl.pathname, basename);\n\n          if (targetUrl.origin === currentUrl.origin && path != null) {\n            // Strip the protocol/origin/basename for same-origin absolute URLs\n            to = path + targetUrl.search + targetUrl.hash;\n          } else {\n            isExternal = true;\n          }\n        } catch (e) {\n          // We can't do external URL detection without a valid URL\n          warning(\n            false,\n            `<Link to=\"${to}\"> contains an invalid URL which will probably break ` +\n              `when clicked - please update to a valid URL path.`\n          );\n        }\n      }\n    }\n\n    // Rendered into <a href> for relative URLs\n    let href = useHref(to, { relative });\n\n    let internalOnClick = useLinkClickHandler(to, {\n      replace,\n      state,\n      target,\n      preventScrollReset,\n      relative,\n      unstable_viewTransition,\n    });\n    function handleClick(\n      event: React.MouseEvent<HTMLAnchorElement, MouseEvent>\n    ) {\n      if (onClick) onClick(event);\n      if (!event.defaultPrevented) {\n        internalOnClick(event);\n      }\n    }\n\n    return (\n      // eslint-disable-next-line jsx-a11y/anchor-has-content\n      <a\n        {...rest}\n        href={absoluteHref || href}\n        onClick={isExternal || reloadDocument ? onClick : handleClick}\n        ref={ref}\n        target={target}\n      />\n    );\n  }\n);\n\nif (__DEV__) {\n  Link.displayName = \"Link\";\n}\n\ntype NavLinkRenderProps = {\n  isActive: boolean;\n  isPending: boolean;\n  isTransitioning: boolean;\n};\n\nexport interface NavLinkProps\n  extends Omit<LinkProps, \"className\" | \"style\" | \"children\"> {\n  children?: React.ReactNode | ((props: NavLinkRenderProps) => React.ReactNode);\n  caseSensitive?: boolean;\n  className?: string | ((props: NavLinkRenderProps) => string | undefined);\n  end?: boolean;\n  style?:\n    | React.CSSProperties\n    | ((props: NavLinkRenderProps) => React.CSSProperties | undefined);\n}\n\n/**\n * A `<Link>` wrapper that knows if it's \"active\" or not.\n */\nexport const NavLink = React.forwardRef<HTMLAnchorElement, NavLinkProps>(\n  function NavLinkWithRef(\n    {\n      \"aria-current\": ariaCurrentProp = \"page\",\n      caseSensitive = false,\n      className: classNameProp = \"\",\n      end = false,\n      style: styleProp,\n      to,\n      unstable_viewTransition,\n      children,\n      ...rest\n    },\n    ref\n  ) {\n    let path = useResolvedPath(to, { relative: rest.relative });\n    let location = useLocation();\n    let routerState = React.useContext(DataRouterStateContext);\n    let { navigator, basename } = React.useContext(NavigationContext);\n    let isTransitioning =\n      routerState != null &&\n      // Conditional usage is OK here because the usage of a data router is static\n      // eslint-disable-next-line react-hooks/rules-of-hooks\n      useViewTransitionState(path) &&\n      unstable_viewTransition === true;\n\n    let toPathname = navigator.encodeLocation\n      ? navigator.encodeLocation(path).pathname\n      : path.pathname;\n    let locationPathname = location.pathname;\n    let nextLocationPathname =\n      routerState && routerState.navigation && routerState.navigation.location\n        ? routerState.navigation.location.pathname\n        : null;\n\n    if (!caseSensitive) {\n      locationPathname = locationPathname.toLowerCase();\n      nextLocationPathname = nextLocationPathname\n        ? nextLocationPathname.toLowerCase()\n        : null;\n      toPathname = toPathname.toLowerCase();\n    }\n\n    if (nextLocationPathname && basename) {\n      nextLocationPathname =\n        stripBasename(nextLocationPathname, basename) || nextLocationPathname;\n    }\n\n    // If the `to` has a trailing slash, look at that exact spot.  Otherwise,\n    // we're looking for a slash _after_ what's in `to`.  For example:\n    //\n    // <NavLink to=\"/users\"> and <NavLink to=\"/users/\">\n    // both want to look for a / at index 6 to match URL `/users/matt`\n    const endSlashPosition =\n      toPathname !== \"/\" && toPathname.endsWith(\"/\")\n        ? toPathname.length - 1\n        : toPathname.length;\n    let isActive =\n      locationPathname === toPathname ||\n      (!end &&\n        locationPathname.startsWith(toPathname) &&\n        locationPathname.charAt(endSlashPosition) === \"/\");\n\n    let isPending =\n      nextLocationPathname != null &&\n      (nextLocationPathname === toPathname ||\n        (!end &&\n          nextLocationPathname.startsWith(toPathname) &&\n          nextLocationPathname.charAt(toPathname.length) === \"/\"));\n\n    let renderProps = {\n      isActive,\n      isPending,\n      isTransitioning,\n    };\n\n    let ariaCurrent = isActive ? ariaCurrentProp : undefined;\n\n    let className: string | undefined;\n    if (typeof classNameProp === \"function\") {\n      className = classNameProp(renderProps);\n    } else {\n      // If the className prop is not a function, we use a default `active`\n      // class for <NavLink />s that are active. In v5 `active` was the default\n      // value for `activeClassName`, but we are removing that API and can still\n      // use the old default behavior for a cleaner upgrade path and keep the\n      // simple styling rules working as they currently do.\n      className = [\n        classNameProp,\n        isActive ? \"active\" : null,\n        isPending ? \"pending\" : null,\n        isTransitioning ? \"transitioning\" : null,\n      ]\n        .filter(Boolean)\n        .join(\" \");\n    }\n\n    let style =\n      typeof styleProp === \"function\" ? styleProp(renderProps) : styleProp;\n\n    return (\n      <Link\n        {...rest}\n        aria-current={ariaCurrent}\n        className={className}\n        ref={ref}\n        style={style}\n        to={to}\n        unstable_viewTransition={unstable_viewTransition}\n      >\n        {typeof children === \"function\" ? children(renderProps) : children}\n      </Link>\n    );\n  }\n);\n\nif (__DEV__) {\n  NavLink.displayName = \"NavLink\";\n}\n\nexport interface FetcherFormProps\n  extends React.FormHTMLAttributes<HTMLFormElement> {\n  /**\n   * The HTTP verb to use when the form is submit. Supports \"get\", \"post\",\n   * \"put\", \"delete\", \"patch\".\n   */\n  method?: HTMLFormMethod;\n\n  /**\n   * `<form encType>` - enhancing beyond the normal string type and limiting\n   * to the built-in browser supported values\n   */\n  encType?:\n    | \"application/x-www-form-urlencoded\"\n    | \"multipart/form-data\"\n    | \"text/plain\";\n\n  /**\n   * Normal `<form action>` but supports React Router's relative paths.\n   */\n  action?: string;\n\n  /**\n   * Determines whether the form action is relative to the route hierarchy or\n   * the pathname.  Use this if you want to opt out of navigating the route\n   * hierarchy and want to instead route based on /-delimited URL segments\n   */\n  relative?: RelativeRoutingType;\n\n  /**\n   * Prevent the scroll position from resetting to the top of the viewport on\n   * completion of the navigation when using the <ScrollRestoration> component\n   */\n  preventScrollReset?: boolean;\n\n  /**\n   * A function to call when the form is submitted. If you call\n   * `event.preventDefault()` then this form will not do anything.\n   */\n  onSubmit?: React.FormEventHandler<HTMLFormElement>;\n}\n\nexport interface FormProps extends FetcherFormProps {\n  /**\n   * Indicate a specific fetcherKey to use when using navigate=false\n   */\n  fetcherKey?: string;\n\n  /**\n   * navigate=false will use a fetcher instead of a navigation\n   */\n  navigate?: boolean;\n\n  /**\n   * Forces a full document navigation instead of a fetch.\n   */\n  reloadDocument?: boolean;\n\n  /**\n   * Replaces the current entry in the browser history stack when the form\n   * navigates. Use this if you don't want the user to be able to click \"back\"\n   * to the page with the form on it.\n   */\n  replace?: boolean;\n\n  /**\n   * State object to add to the history stack entry for this navigation\n   */\n  state?: any;\n\n  /**\n   * Enable view transitions on this Form navigation\n   */\n  unstable_viewTransition?: boolean;\n}\n\ntype HTMLSubmitEvent = React.BaseSyntheticEvent<\n  SubmitEvent,\n  Event,\n  HTMLFormElement\n>;\n\ntype HTMLFormSubmitter = HTMLButtonElement | HTMLInputElement;\n\n/**\n * A `@remix-run/router`-aware `<form>`. It behaves like a normal form except\n * that the interaction with the server is with `fetch` instead of new document\n * requests, allowing components to add nicer UX to the page as the form is\n * submitted and returns with data.\n */\nexport const Form = React.forwardRef<HTMLFormElement, FormProps>(\n  (\n    {\n      fetcherKey,\n      navigate,\n      reloadDocument,\n      replace,\n      state,\n      method = defaultMethod,\n      action,\n      onSubmit,\n      relative,\n      preventScrollReset,\n      unstable_viewTransition,\n      ...props\n    },\n    forwardedRef\n  ) => {\n    let submit = useSubmit();\n    let formAction = useFormAction(action, { relative });\n    let formMethod: HTMLFormMethod =\n      method.toLowerCase() === \"get\" ? \"get\" : \"post\";\n\n    let submitHandler: React.FormEventHandler<HTMLFormElement> = (event) => {\n      onSubmit && onSubmit(event);\n      if (event.defaultPrevented) return;\n      event.preventDefault();\n\n      let submitter = (event as unknown as HTMLSubmitEvent).nativeEvent\n        .submitter as HTMLFormSubmitter | null;\n\n      let submitMethod =\n        (submitter?.getAttribute(\"formmethod\") as HTMLFormMethod | undefined) ||\n        method;\n\n      submit(submitter || event.currentTarget, {\n        fetcherKey,\n        method: submitMethod,\n        navigate,\n        replace,\n        state,\n        relative,\n        preventScrollReset,\n        unstable_viewTransition,\n      });\n    };\n\n    return (\n      <form\n        ref={forwardedRef}\n        method={formMethod}\n        action={formAction}\n        onSubmit={reloadDocument ? onSubmit : submitHandler}\n        {...props}\n      />\n    );\n  }\n);\n\nif (__DEV__) {\n  Form.displayName = \"Form\";\n}\n\nexport interface ScrollRestorationProps {\n  getKey?: GetScrollRestorationKeyFunction;\n  storageKey?: string;\n}\n\n/**\n * This component will emulate the browser's scroll restoration on location\n * changes.\n */\nexport function ScrollRestoration({\n  getKey,\n  storageKey,\n}: ScrollRestorationProps) {\n  useScrollRestoration({ getKey, storageKey });\n  return null;\n}\n\nif (__DEV__) {\n  ScrollRestoration.displayName = \"ScrollRestoration\";\n}\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Hooks\n////////////////////////////////////////////////////////////////////////////////\n\nenum DataRouterHook {\n  UseScrollRestoration = \"useScrollRestoration\",\n  UseSubmit = \"useSubmit\",\n  UseSubmitFetcher = \"useSubmitFetcher\",\n  UseFetcher = \"useFetcher\",\n  useViewTransitionState = \"useViewTransitionState\",\n}\n\nenum DataRouterStateHook {\n  UseFetcher = \"useFetcher\",\n  UseFetchers = \"useFetchers\",\n  UseScrollRestoration = \"useScrollRestoration\",\n}\n\n// Internal hooks\n\nfunction getDataRouterConsoleError(\n  hookName: DataRouterHook | DataRouterStateHook\n) {\n  return `${hookName} must be used within a data router.  See https://reactrouter.com/routers/picking-a-router.`;\n}\n\nfunction useDataRouterContext(hookName: DataRouterHook) {\n  let ctx = React.useContext(DataRouterContext);\n  invariant(ctx, getDataRouterConsoleError(hookName));\n  return ctx;\n}\n\nfunction useDataRouterState(hookName: DataRouterStateHook) {\n  let state = React.useContext(DataRouterStateContext);\n  invariant(state, getDataRouterConsoleError(hookName));\n  return state;\n}\n\n// External hooks\n\n/**\n * Handles the click behavior for router `<Link>` components. This is useful if\n * you need to create custom `<Link>` components with the same click behavior we\n * use in our exported `<Link>`.\n */\nexport function useLinkClickHandler<E extends Element = HTMLAnchorElement>(\n  to: To,\n  {\n    target,\n    replace: replaceProp,\n    state,\n    preventScrollReset,\n    relative,\n    unstable_viewTransition,\n  }: {\n    target?: React.HTMLAttributeAnchorTarget;\n    replace?: boolean;\n    state?: any;\n    preventScrollReset?: boolean;\n    relative?: RelativeRoutingType;\n    unstable_viewTransition?: boolean;\n  } = {}\n): (event: React.MouseEvent<E, MouseEvent>) => void {\n  let navigate = useNavigate();\n  let location = useLocation();\n  let path = useResolvedPath(to, { relative });\n\n  return React.useCallback(\n    (event: React.MouseEvent<E, MouseEvent>) => {\n      if (shouldProcessLinkClick(event, target)) {\n        event.preventDefault();\n\n        // If the URL hasn't changed, a regular <a> will do a replace instead of\n        // a push, so do the same here unless the replace prop is explicitly set\n        let replace =\n          replaceProp !== undefined\n            ? replaceProp\n            : createPath(location) === createPath(path);\n\n        navigate(to, {\n          replace,\n          state,\n          preventScrollReset,\n          relative,\n          unstable_viewTransition,\n        });\n      }\n    },\n    [\n      location,\n      navigate,\n      path,\n      replaceProp,\n      state,\n      target,\n      to,\n      preventScrollReset,\n      relative,\n      unstable_viewTransition,\n    ]\n  );\n}\n\n/**\n * A convenient wrapper for reading and writing search parameters via the\n * URLSearchParams interface.\n */\nexport function useSearchParams(\n  defaultInit?: URLSearchParamsInit\n): [URLSearchParams, SetURLSearchParams] {\n  warning(\n    typeof URLSearchParams !== \"undefined\",\n    `You cannot use the \\`useSearchParams\\` hook in a browser that does not ` +\n      `support the URLSearchParams API. If you need to support Internet ` +\n      `Explorer 11, we recommend you load a polyfill such as ` +\n      `https://github.com/ungap/url-search-params\\n\\n` +\n      `If you're unsure how to load polyfills, we recommend you check out ` +\n      `https://polyfill.io/v3/ which provides some recommendations about how ` +\n      `to load polyfills only for users that need them, instead of for every ` +\n      `user.`\n  );\n\n  let defaultSearchParamsRef = React.useRef(createSearchParams(defaultInit));\n  let hasSetSearchParamsRef = React.useRef(false);\n\n  let location = useLocation();\n  let searchParams = React.useMemo(\n    () =>\n      // Only merge in the defaults if we haven't yet called setSearchParams.\n      // Once we call that we want those to take precedence, otherwise you can't\n      // remove a param with setSearchParams({}) if it has an initial value\n      getSearchParamsForLocation(\n        location.search,\n        hasSetSearchParamsRef.current ? null : defaultSearchParamsRef.current\n      ),\n    [location.search]\n  );\n\n  let navigate = useNavigate();\n  let setSearchParams = React.useCallback<SetURLSearchParams>(\n    (nextInit, navigateOptions) => {\n      const newSearchParams = createSearchParams(\n        typeof nextInit === \"function\" ? nextInit(searchParams) : nextInit\n      );\n      hasSetSearchParamsRef.current = true;\n      navigate(\"?\" + newSearchParams, navigateOptions);\n    },\n    [navigate, searchParams]\n  );\n\n  return [searchParams, setSearchParams];\n}\n\nexport type SetURLSearchParams = (\n  nextInit?:\n    | URLSearchParamsInit\n    | ((prev: URLSearchParams) => URLSearchParamsInit),\n  navigateOpts?: NavigateOptions\n) => void;\n\n/**\n * Submits a HTML `<form>` to the server without reloading the page.\n */\nexport interface SubmitFunction {\n  (\n    /**\n     * Specifies the `<form>` to be submitted to the server, a specific\n     * `<button>` or `<input type=\"submit\">` to use to submit the form, or some\n     * arbitrary data to submit.\n     *\n     * Note: When using a `<button>` its `name` and `value` will also be\n     * included in the form data that is submitted.\n     */\n    target: SubmitTarget,\n\n    /**\n     * Options that override the `<form>`'s own attributes. Required when\n     * submitting arbitrary data without a backing `<form>`.\n     */\n    options?: SubmitOptions\n  ): void;\n}\n\n/**\n * Submits a fetcher `<form>` to the server without reloading the page.\n */\nexport interface FetcherSubmitFunction {\n  (\n    target: SubmitTarget,\n    // Fetchers cannot replace or set state because they are not navigation events\n    options?: Omit<SubmitOptions, \"replace\" | \"state\">\n  ): void;\n}\n\nfunction validateClientSideSubmission() {\n  if (typeof document === \"undefined\") {\n    throw new Error(\n      \"You are calling submit during the server render. \" +\n        \"Try calling submit within a `useEffect` or callback instead.\"\n    );\n  }\n}\n\nlet fetcherId = 0;\nlet getUniqueFetcherId = () => `__${String(++fetcherId)}__`;\n\n/**\n * Returns a function that may be used to programmatically submit a form (or\n * some arbitrary data) to the server.\n */\nexport function useSubmit(): SubmitFunction {\n  let { router } = useDataRouterContext(DataRouterHook.UseSubmit);\n  let { basename } = React.useContext(NavigationContext);\n  let currentRouteId = useRouteId();\n\n  return React.useCallback<SubmitFunction>(\n    (target, options = {}) => {\n      validateClientSideSubmission();\n\n      let { action, method, encType, formData, body } = getFormSubmissionInfo(\n        target,\n        basename\n      );\n\n      if (options.navigate === false) {\n        let key = options.fetcherKey || getUniqueFetcherId();\n        router.fetch(key, currentRouteId, options.action || action, {\n          preventScrollReset: options.preventScrollReset,\n          formData,\n          body,\n          formMethod: options.method || (method as HTMLFormMethod),\n          formEncType: options.encType || (encType as FormEncType),\n          unstable_flushSync: options.unstable_flushSync,\n        });\n      } else {\n        router.navigate(options.action || action, {\n          preventScrollReset: options.preventScrollReset,\n          formData,\n          body,\n          formMethod: options.method || (method as HTMLFormMethod),\n          formEncType: options.encType || (encType as FormEncType),\n          replace: options.replace,\n          state: options.state,\n          fromRouteId: currentRouteId,\n          unstable_flushSync: options.unstable_flushSync,\n          unstable_viewTransition: options.unstable_viewTransition,\n        });\n      }\n    },\n    [router, basename, currentRouteId]\n  );\n}\n\n// v7: Eventually we should deprecate this entirely in favor of using the\n// router method directly?\nexport function useFormAction(\n  action?: string,\n  { relative }: { relative?: RelativeRoutingType } = {}\n): string {\n  let { basename } = React.useContext(NavigationContext);\n  let routeContext = React.useContext(RouteContext);\n  invariant(routeContext, \"useFormAction must be used inside a RouteContext\");\n\n  let [match] = routeContext.matches.slice(-1);\n  // Shallow clone path so we can modify it below, otherwise we modify the\n  // object referenced by useMemo inside useResolvedPath\n  let path = { ...useResolvedPath(action ? action : \".\", { relative }) };\n\n  // If no action was specified, browsers will persist current search params\n  // when determining the path, so match that behavior\n  // https://github.com/remix-run/remix/issues/927\n  let location = useLocation();\n  if (action == null) {\n    // Safe to write to this directly here since if action was undefined, we\n    // would have called useResolvedPath(\".\") which will never include a search\n    path.search = location.search;\n\n    // When grabbing search params from the URL, remove any included ?index param\n    // since it might not apply to our contextual route.  We add it back based\n    // on match.route.index below\n    let params = new URLSearchParams(path.search);\n    if (params.has(\"index\") && params.get(\"index\") === \"\") {\n      params.delete(\"index\");\n      path.search = params.toString() ? `?${params.toString()}` : \"\";\n    }\n  }\n\n  if ((!action || action === \".\") && match.route.index) {\n    path.search = path.search\n      ? path.search.replace(/^\\?/, \"?index&\")\n      : \"?index\";\n  }\n\n  // If we're operating within a basename, prepend it to the pathname prior\n  // to creating the form action.  If this is a root navigation, then just use\n  // the raw basename which allows the basename to have full control over the\n  // presence of a trailing slash on root actions\n  if (basename !== \"/\") {\n    path.pathname =\n      path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n  }\n\n  return createPath(path);\n}\n\nexport type FetcherWithComponents<TData> = Fetcher<TData> & {\n  Form: React.ForwardRefExoticComponent<\n    FetcherFormProps & React.RefAttributes<HTMLFormElement>\n  >;\n  submit: FetcherSubmitFunction;\n  load: (href: string, opts?: { unstable_flushSync?: boolean }) => void;\n};\n\n// TODO: (v7) Change the useFetcher generic default from `any` to `unknown`\n\n/**\n * Interacts with route loaders and actions without causing a navigation. Great\n * for any interaction that stays on the same page.\n */\nexport function useFetcher<TData = any>({\n  key,\n}: { key?: string } = {}): FetcherWithComponents<TData> {\n  let { router } = useDataRouterContext(DataRouterHook.UseFetcher);\n  let state = useDataRouterState(DataRouterStateHook.UseFetcher);\n  let fetcherData = React.useContext(FetchersContext);\n  let route = React.useContext(RouteContext);\n  let routeId = route.matches[route.matches.length - 1]?.route.id;\n\n  invariant(fetcherData, `useFetcher must be used inside a FetchersContext`);\n  invariant(route, `useFetcher must be used inside a RouteContext`);\n  invariant(\n    routeId != null,\n    `useFetcher can only be used on routes that contain a unique \"id\"`\n  );\n\n  // Fetcher key handling\n  // OK to call conditionally to feature detect `useId`\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  let defaultKey = useIdImpl ? useIdImpl() : \"\";\n  let [fetcherKey, setFetcherKey] = React.useState<string>(key || defaultKey);\n  if (key && key !== fetcherKey) {\n    setFetcherKey(key);\n  } else if (!fetcherKey) {\n    // We will only fall through here when `useId` is not available\n    setFetcherKey(getUniqueFetcherId());\n  }\n\n  // Registration/cleanup\n  React.useEffect(() => {\n    router.getFetcher(fetcherKey);\n    return () => {\n      // Tell the router we've unmounted - if v7_fetcherPersist is enabled this\n      // will not delete immediately but instead queue up a delete after the\n      // fetcher returns to an `idle` state\n      router.deleteFetcher(fetcherKey);\n    };\n  }, [router, fetcherKey]);\n\n  // Fetcher additions\n  let load = React.useCallback(\n    (href: string, opts?: { unstable_flushSync?: boolean }) => {\n      invariant(routeId, \"No routeId available for fetcher.load()\");\n      router.fetch(fetcherKey, routeId, href, opts);\n    },\n    [fetcherKey, routeId, router]\n  );\n\n  let submitImpl = useSubmit();\n  let submit = React.useCallback<FetcherSubmitFunction>(\n    (target, opts) => {\n      submitImpl(target, {\n        ...opts,\n        navigate: false,\n        fetcherKey,\n      });\n    },\n    [fetcherKey, submitImpl]\n  );\n\n  let FetcherForm = React.useMemo(() => {\n    let FetcherForm = React.forwardRef<HTMLFormElement, FetcherFormProps>(\n      (props, ref) => {\n        return (\n          <Form {...props} navigate={false} fetcherKey={fetcherKey} ref={ref} />\n        );\n      }\n    );\n    if (__DEV__) {\n      FetcherForm.displayName = \"fetcher.Form\";\n    }\n    return FetcherForm;\n  }, [fetcherKey]);\n\n  // Exposed FetcherWithComponents\n  let fetcher = state.fetchers.get(fetcherKey) || IDLE_FETCHER;\n  let data = fetcherData.get(fetcherKey);\n  let fetcherWithComponents = React.useMemo(\n    () => ({\n      Form: FetcherForm,\n      submit,\n      load,\n      ...fetcher,\n      data,\n    }),\n    [FetcherForm, submit, load, fetcher, data]\n  );\n\n  return fetcherWithComponents;\n}\n\n/**\n * Provides all fetchers currently on the page. Useful for layouts and parent\n * routes that need to provide pending/optimistic UI regarding the fetch.\n */\nexport function useFetchers(): (Fetcher & { key: string })[] {\n  let state = useDataRouterState(DataRouterStateHook.UseFetchers);\n  return Array.from(state.fetchers.entries()).map(([key, fetcher]) => ({\n    ...fetcher,\n    key,\n  }));\n}\n\nconst SCROLL_RESTORATION_STORAGE_KEY = \"react-router-scroll-positions\";\nlet savedScrollPositions: Record<string, number> = {};\n\n/**\n * When rendered inside a RouterProvider, will restore scroll positions on navigations\n */\nfunction useScrollRestoration({\n  getKey,\n  storageKey,\n}: {\n  getKey?: GetScrollRestorationKeyFunction;\n  storageKey?: string;\n} = {}) {\n  let { router } = useDataRouterContext(DataRouterHook.UseScrollRestoration);\n  let { restoreScrollPosition, preventScrollReset } = useDataRouterState(\n    DataRouterStateHook.UseScrollRestoration\n  );\n  let { basename } = React.useContext(NavigationContext);\n  let location = useLocation();\n  let matches = useMatches();\n  let navigation = useNavigation();\n\n  // Trigger manual scroll restoration while we're active\n  React.useEffect(() => {\n    window.history.scrollRestoration = \"manual\";\n    return () => {\n      window.history.scrollRestoration = \"auto\";\n    };\n  }, []);\n\n  // Save positions on pagehide\n  usePageHide(\n    React.useCallback(() => {\n      if (navigation.state === \"idle\") {\n        let key = (getKey ? getKey(location, matches) : null) || location.key;\n        savedScrollPositions[key] = window.scrollY;\n      }\n      try {\n        sessionStorage.setItem(\n          storageKey || SCROLL_RESTORATION_STORAGE_KEY,\n          JSON.stringify(savedScrollPositions)\n        );\n      } catch (error) {\n        warning(\n          false,\n          `Failed to save scroll positions in sessionStorage, <ScrollRestoration /> will not work properly (${error}).`\n        );\n      }\n      window.history.scrollRestoration = \"auto\";\n    }, [storageKey, getKey, navigation.state, location, matches])\n  );\n\n  // Read in any saved scroll locations\n  if (typeof document !== \"undefined\") {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      try {\n        let sessionPositions = sessionStorage.getItem(\n          storageKey || SCROLL_RESTORATION_STORAGE_KEY\n        );\n        if (sessionPositions) {\n          savedScrollPositions = JSON.parse(sessionPositions);\n        }\n      } catch (e) {\n        // no-op, use default empty object\n      }\n    }, [storageKey]);\n\n    // Enable scroll restoration in the router\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      let getKeyWithoutBasename: GetScrollRestorationKeyFunction | undefined =\n        getKey && basename !== \"/\"\n          ? (location, matches) =>\n              getKey(\n                // Strip the basename to match useLocation()\n                {\n                  ...location,\n                  pathname:\n                    stripBasename(location.pathname, basename) ||\n                    location.pathname,\n                },\n                matches\n              )\n          : getKey;\n      let disableScrollRestoration = router?.enableScrollRestoration(\n        savedScrollPositions,\n        () => window.scrollY,\n        getKeyWithoutBasename\n      );\n      return () => disableScrollRestoration && disableScrollRestoration();\n    }, [router, basename, getKey]);\n\n    // Restore scrolling when state.restoreScrollPosition changes\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      // Explicit false means don't do anything (used for submissions)\n      if (restoreScrollPosition === false) {\n        return;\n      }\n\n      // been here before, scroll to it\n      if (typeof restoreScrollPosition === \"number\") {\n        window.scrollTo(0, restoreScrollPosition);\n        return;\n      }\n\n      // try to scroll to the hash\n      if (location.hash) {\n        let el = document.getElementById(\n          decodeURIComponent(location.hash.slice(1))\n        );\n        if (el) {\n          el.scrollIntoView();\n          return;\n        }\n      }\n\n      // Don't reset if this navigation opted out\n      if (preventScrollReset === true) {\n        return;\n      }\n\n      // otherwise go to the top on new locations\n      window.scrollTo(0, 0);\n    }, [location, restoreScrollPosition, preventScrollReset]);\n  }\n}\n\nexport { useScrollRestoration as UNSAFE_useScrollRestoration };\n\n/**\n * Setup a callback to be fired on the window's `beforeunload` event. This is\n * useful for saving some data to `window.localStorage` just before the page\n * refreshes.\n *\n * Note: The `callback` argument should be a function created with\n * `React.useCallback()`.\n */\nexport function useBeforeUnload(\n  callback: (event: BeforeUnloadEvent) => any,\n  options?: { capture?: boolean }\n): void {\n  let { capture } = options || {};\n  React.useEffect(() => {\n    let opts = capture != null ? { capture } : undefined;\n    window.addEventListener(\"beforeunload\", callback, opts);\n    return () => {\n      window.removeEventListener(\"beforeunload\", callback, opts);\n    };\n  }, [callback, capture]);\n}\n\n/**\n * Setup a callback to be fired on the window's `pagehide` event. This is\n * useful for saving some data to `window.localStorage` just before the page\n * refreshes.  This event is better supported than beforeunload across browsers.\n *\n * Note: The `callback` argument should be a function created with\n * `React.useCallback()`.\n */\nfunction usePageHide(\n  callback: (event: PageTransitionEvent) => any,\n  options?: { capture?: boolean }\n): void {\n  let { capture } = options || {};\n  React.useEffect(() => {\n    let opts = capture != null ? { capture } : undefined;\n    window.addEventListener(\"pagehide\", callback, opts);\n    return () => {\n      window.removeEventListener(\"pagehide\", callback, opts);\n    };\n  }, [callback, capture]);\n}\n\n/**\n * Wrapper around useBlocker to show a window.confirm prompt to users instead\n * of building a custom UI with useBlocker.\n *\n * Warning: This has *a lot of rough edges* and behaves very differently (and\n * very incorrectly in some cases) across browsers if user click addition\n * back/forward navigations while the confirm is open.  Use at your own risk.\n */\nfunction usePrompt({\n  when,\n  message,\n}: {\n  when: boolean | BlockerFunction;\n  message: string;\n}) {\n  let blocker = useBlocker(when);\n\n  React.useEffect(() => {\n    if (blocker.state === \"blocked\") {\n      let proceed = window.confirm(message);\n      if (proceed) {\n        // This timeout is needed to avoid a weird \"race\" on POP navigations\n        // between the `window.history` revert navigation and the result of\n        // `window.confirm`\n        setTimeout(blocker.proceed, 0);\n      } else {\n        blocker.reset();\n      }\n    }\n  }, [blocker, message]);\n\n  React.useEffect(() => {\n    if (blocker.state === \"blocked\" && !when) {\n      blocker.reset();\n    }\n  }, [blocker, when]);\n}\n\nexport { usePrompt as unstable_usePrompt };\n\n/**\n * Return a boolean indicating if there is an active view transition to the\n * given href.  You can use this value to render CSS classes or viewTransitionName\n * styles onto your elements\n *\n * @param href The destination href\n * @param [opts.relative] Relative routing type (\"route\" | \"path\")\n */\nfunction useViewTransitionState(\n  to: To,\n  opts: { relative?: RelativeRoutingType } = {}\n) {\n  let vtContext = React.useContext(ViewTransitionContext);\n\n  invariant(\n    vtContext != null,\n    \"`unstable_useViewTransitionState` must be used within `react-router-dom`'s `RouterProvider`.  \" +\n      \"Did you accidentally import `RouterProvider` from `react-router`?\"\n  );\n\n  let { basename } = useDataRouterContext(\n    DataRouterHook.useViewTransitionState\n  );\n  let path = useResolvedPath(to, { relative: opts.relative });\n  if (!vtContext.isTransitioning) {\n    return false;\n  }\n\n  let currentPath =\n    stripBasename(vtContext.currentLocation.pathname, basename) ||\n    vtContext.currentLocation.pathname;\n  let nextPath =\n    stripBasename(vtContext.nextLocation.pathname, basename) ||\n    vtContext.nextLocation.pathname;\n\n  // Transition is active if we're going to or coming from the indicated\n  // destination.  This ensures that other PUSH navigations that reverse\n  // an indicated transition apply.  I.e., on the list view you have:\n  //\n  //   <NavLink to=\"/details/1\" unstable_viewTransition>\n  //\n  // If you click the breadcrumb back to the list view:\n  //\n  //   <NavLink to=\"/list\" unstable_viewTransition>\n  //\n  // We should apply the transition because it's indicated as active going\n  // from /list -> /details/1 and therefore should be active on the reverse\n  // (even though this isn't strictly a POP reverse)\n  return (\n    matchPath(path.pathname, nextPath) != null ||\n    matchPath(path.pathname, currentPath) != null\n  );\n}\n\nexport { useViewTransitionState as unstable_useViewTransitionState };\n\n//#endregion\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAOO,MAAMA,aAA6B,GAAG,KAAK;EAClD,MAAMC,cAA2B,GAAG,mCAAmC;EAEhE,SAASC,aAAaA,CAACC,MAAW,EAAyB;IAChE,OAAOA,MAAM,IAAI,IAAI,IAAI,OAAOA,MAAM,CAACC,OAAO,KAAK,QAAQ;EAC7D;EAEO,SAASC,eAAeA,CAACF,MAAW,EAA+B;IACxE,OAAOD,aAAa,CAACC,MAAM,CAAC,IAAIA,MAAM,CAACC,OAAO,CAACE,WAAW,EAAE,KAAK,QAAQ;EAC3E;EAEO,SAASC,aAAaA,CAACJ,MAAW,EAA6B;IACpE,OAAOD,aAAa,CAACC,MAAM,CAAC,IAAIA,MAAM,CAACC,OAAO,CAACE,WAAW,EAAE,KAAK,MAAM;EACzE;EAEO,SAASE,cAAcA,CAACL,MAAW,EAA8B;IACtE,OAAOD,aAAa,CAACC,MAAM,CAAC,IAAIA,MAAM,CAACC,OAAO,CAACE,WAAW,EAAE,KAAK,OAAO;EAC1E;EAOA,SAASG,eAAeA,CAACC,KAAwB,EAAE;IACjD,OAAO,CAAC,EAAEA,KAAK,CAACC,OAAO,IAAID,KAAK,CAACE,MAAM,IAAIF,KAAK,CAACG,OAAO,IAAIH,KAAK,CAACI,QAAQ,CAAC;EAC7E;EAEO,SAASC,sBAAsBA,CACpCL,KAAwB,EACxBM,MAAe,EACf;IACA,OACEN,KAAK,CAACO,MAAM,KAAK,CAAC;IAAI;IACrB,CAACD,MAAM,IAAIA,MAAM,KAAK,OAAO,CAAC;IAAI;IACnC,CAACP,eAAe,CAACC,KAAK,CAAC;IAAA;EAE3B;;EAUA;;;;;;;;;;;;;;;;;;;;;EAqBO,SAASQ,kBAAkBA,CAChCC,IAAyB,EACR;IAAA,IADjBA,IAAyB;MAAzBA,IAAyB,GAAG,EAAE;IAAA;IAE9B,OAAO,IAAIC,eAAe,CACxB,OAAOD,IAAI,KAAK,QAAQ,IACxBE,KAAK,CAACC,OAAO,CAACH,IAAI,CAAC,IACnBA,IAAI,YAAYC,eAAe,GAC3BD,IAAI,GACJI,MAAM,CAACC,IAAI,CAACL,IAAI,CAAC,CAACM,MAAM,CAAC,CAACC,IAAI,EAAEC,GAAG,KAAK;MACtC,IAAIC,KAAK,GAAGT,IAAI,CAACQ,GAAG,CAAC;MACrB,OAAOD,IAAI,CAACG,MAAM,CAChBR,KAAK,CAACC,OAAO,CAACM,KAAK,CAAC,GAAGA,KAAK,CAACE,GAAG,CAAEC,CAAC,IAAK,CAACJ,GAAG,EAAEI,CAAC,CAAC,CAAC,GAAG,CAAC,CAACJ,GAAG,EAAEC,KAAK,CAAC,CACnE,CAAC;KACF,EAAE,EAAyB,CAClC,CAAC;EACH;EAEO,SAASI,0BAA0BA,CACxCC,cAAsB,EACtBC,mBAA2C,EAC3C;IACA,IAAIC,YAAY,GAAGjB,kBAAkB,CAACe,cAAc,CAAC;IAErD,IAAIC,mBAAmB,EAAE;MACvB;MACA;MACA;MACA;MACA;MACAA,mBAAmB,CAACE,OAAO,CAAC,CAACC,CAAC,EAAEV,GAAG,KAAK;QACtC,IAAI,CAACQ,YAAY,CAACG,GAAG,CAACX,GAAG,CAAC,EAAE;UAC1BO,mBAAmB,CAACK,MAAM,CAACZ,GAAG,CAAC,CAACS,OAAO,CAAER,KAAK,IAAK;YACjDO,YAAY,CAACK,MAAM,CAACb,GAAG,EAAEC,KAAK,CAAC;UACjC,CAAC,CAAC;QACJ;MACF,CAAC,CAAC;IACJ;IAEA,OAAOO,YAAY;EACrB;;EAEA;;EAiBA;EACA,IAAIM,0BAA0C,GAAG,IAAI;EAErD,SAASC,4BAA4BA,CAAA,EAAG;IACtC,IAAID,0BAA0B,KAAK,IAAI,EAAE;MACvC,IAAI;QACF,IAAIE,QAAQ,CACVC,QAAQ,CAACC,aAAa,CAAC,MAAM,CAAC;QAC9B;QACA,CACF,CAAC;QACDJ,0BAA0B,GAAG,KAAK;OACnC,CAAC,OAAOK,CAAC,EAAE;QACVL,0BAA0B,GAAG,IAAI;MACnC;IACF;IACA,OAAOA,0BAA0B;EACnC;EAmEA,MAAMM,qBAAuC,GAAG,IAAIC,GAAG,CAAC,CACtD,mCAAmC,EACnC,qBAAqB,EACrB,YAAY,CACb,CAAC;EAEF,SAASC,cAAcA,CAACC,OAAsB,EAAE;IAC9C,IAAIA,OAAO,IAAI,IAAI,IAAI,CAACH,qBAAqB,CAACT,GAAG,CAACY,OAAsB,CAAC,EAAE;MACzEC,MAAA,CAAAC,cAAO,CACL,KAAK,EACL,IAAI,GAAAF,OAAO,GACe,2FAAAjD,cAAc,QAC1C,CAAC;MAED,OAAO,IAAI;IACb;IACA,OAAOiD,OAAO;EAChB;EAEO,SAASG,qBAAqBA,CACnCrC,MAAoB,EACpBsC,QAAgB,EAOhB;IACA,IAAIC,MAAc;IAClB,IAAIC,MAAqB;IACzB,IAAIN,OAAe;IACnB,IAAIO,QAA8B;IAClC,IAAIC,IAAS;IAEb,IAAInD,aAAa,CAACS,MAAM,CAAC,EAAE;MACzB;MACA;MACA;MACA,IAAI2C,IAAI,GAAG3C,MAAM,CAAC4C,YAAY,CAAC,QAAQ,CAAC;MACxCJ,MAAM,GAAGG,IAAI,GAAGR,MAAA,CAAAU,aAAa,CAACF,IAAI,EAAEL,QAAQ,CAAC,GAAG,IAAI;MACpDC,MAAM,GAAGvC,MAAM,CAAC4C,YAAY,CAAC,QAAQ,CAAC,IAAI5D,aAAa;MACvDkD,OAAO,GAAGD,cAAc,CAACjC,MAAM,CAAC4C,YAAY,CAAC,SAAS,CAAC,CAAC,IAAI3D,cAAc;MAE1EwD,QAAQ,GAAG,IAAId,QAAQ,CAAC3B,MAAM,CAAC;KAChC,MAAM,IACLX,eAAe,CAACW,MAAM,CAAC,IACtBR,cAAc,CAACQ,MAAM,CAAC,KACpBA,MAAM,CAAC8C,IAAI,KAAK,QAAQ,IAAI9C,MAAM,CAAC8C,IAAI,KAAK,OAAO,CAAE,EACxD;MACA,IAAIC,IAAI,GAAG/C,MAAM,CAAC+C,IAAI;MAEtB,IAAIA,IAAI,IAAI,IAAI,EAAE;QAChB,MAAM,IAAIC,KAAK,uEAEf,CAAC;MACH;;MAEA;;MAEA;MACA;MACA;MACA,IAAIL,IAAI,GAAG3C,MAAM,CAAC4C,YAAY,CAAC,YAAY,CAAC,IAAIG,IAAI,CAACH,YAAY,CAAC,QAAQ,CAAC;MAC3EJ,MAAM,GAAGG,IAAI,GAAGR,MAAA,CAAAU,aAAa,CAACF,IAAI,EAAEL,QAAQ,CAAC,GAAG,IAAI;MAEpDC,MAAM,GACJvC,MAAM,CAAC4C,YAAY,CAAC,YAAY,CAAC,IACjCG,IAAI,CAACH,YAAY,CAAC,QAAQ,CAAC,IAC3B5D,aAAa;MACfkD,OAAO,GACLD,cAAc,CAACjC,MAAM,CAAC4C,YAAY,CAAC,aAAa,CAAC,CAAC,IAClDX,cAAc,CAACc,IAAI,CAACH,YAAY,CAAC,SAAS,CAAC,CAAC,IAC5C3D,cAAc;;MAEhB;MACAwD,QAAQ,GAAG,IAAId,QAAQ,CAACoB,IAAI,EAAE/C,MAAM,CAAC;;MAErC;MACA;MACA;MACA;MACA,IAAI,CAAC0B,4BAA4B,EAAE,EAAE;QACnC,IAAI;UAAEuB,IAAI;UAAEH,IAAI;UAAElC;QAAM,CAAC,GAAGZ,MAAM;QAClC,IAAI8C,IAAI,KAAK,OAAO,EAAE;UACpB,IAAII,MAAM,GAAGD,IAAI,GAAMA,IAAI,SAAM,EAAE;UACnCR,QAAQ,CAACjB,MAAM,CAAI0B,MAAM,QAAK,GAAG,CAAC;UAClCT,QAAQ,CAACjB,MAAM,CAAI0B,MAAM,QAAK,GAAG,CAAC;SACnC,MAAM,IAAID,IAAI,EAAE;UACfR,QAAQ,CAACjB,MAAM,CAACyB,IAAI,EAAErC,KAAK,CAAC;QAC9B;MACF;IACF,CAAC,MAAM,IAAI1B,aAAa,CAACc,MAAM,CAAC,EAAE;MAChC,MAAM,IAAIgD,KAAK,CACb,2FAEF,CAAC;IACH,CAAC,MAAM;MACLT,MAAM,GAAGvD,aAAa;MACtBwD,MAAM,GAAG,IAAI;MACbN,OAAO,GAAGjD,cAAc;MACxByD,IAAI,GAAG1C,MAAM;IACf;;IAEA;IACA,IAAIyC,QAAQ,IAAIP,OAAO,KAAK,YAAY,EAAE;MACxCQ,IAAI,GAAGD,QAAQ;MACfA,QAAQ,GAAGU,SAAS;IACtB;IAEA,OAAO;MAAEX,MAAM;MAAED,MAAM,EAAEA,MAAM,CAACjD,WAAW,EAAE;MAAE4C,OAAO;MAAEO,QAAQ;MAAEC;KAAM;EAC1E;;;;EChHA;;EASA;EACA;EACA;EASO,SAASU,mBAAmBA,CACjCC,MAAqB,EACrBC,IAAoB,EACP;IACb,OAAOnB,MAAA,CAAAoB,YAAY,CAAC;MAClBjB,QAAQ,EAAEgB,IAAI,IAAJ,gBAAAA,IAAI,CAAEhB,QAAQ;MACxBkB,MAAM,EAAAC,QAAA,KACDH,IAAI,IAAJ,gBAAAA,IAAI,CAAEE,MAAM;QACfE,kBAAkB,EAAE;OACrB;MACDC,OAAO,EAAExB,MAAA,CAAAyB,oBAAoB,CAAC;QAAEC,MAAM,EAAEP,IAAI,IAAJ,gBAAAA,IAAI,CAAEO;MAAO,CAAC,CAAC;MACvDC,aAAa,EAAE,CAAAR,IAAI,IAAJ,gBAAAA,IAAI,CAAEQ,aAAa,KAAIC,kBAAkB,EAAE;MAC1DV,MAAM;0BACNW,WAAA,CAAAC,yBAAkB;MAClBJ,MAAM,EAAEP,IAAI,IAAJ,gBAAAA,IAAI,CAAEO;IAChB,CAAC,CAAC,CAACK,UAAU,EAAE;EACjB;EAEO,SAASC,gBAAgBA,CAC9Bd,MAAqB,EACrBC,IAAoB,EACP;IACb,OAAOnB,MAAA,CAAAoB,YAAY,CAAC;MAClBjB,QAAQ,EAAEgB,IAAI,IAAJ,gBAAAA,IAAI,CAAEhB,QAAQ;MACxBkB,MAAM,EAAAC,QAAA,KACDH,IAAI,IAAJ,gBAAAA,IAAI,CAAEE,MAAM;QACfE,kBAAkB,EAAE;OACrB;MACDC,OAAO,EAAExB,MAAA,CAAAiC,iBAAiB,CAAC;QAAEP,MAAM,EAAEP,IAAI,IAAJ,gBAAAA,IAAI,CAAEO;MAAO,CAAC,CAAC;MACpDC,aAAa,EAAE,CAAAR,IAAI,IAAJ,gBAAAA,IAAI,CAAEQ,aAAa,KAAIC,kBAAkB,EAAE;MAC1DV,MAAM;0BACNW,WAAA,CAAAC,yBAAkB;MAClBJ,MAAM,EAAEP,IAAI,IAAJ,gBAAAA,IAAI,CAAEO;IAChB,CAAC,CAAC,CAACK,UAAU,EAAE;EACjB;EAEA,SAASH,kBAAkBA,CAAA,EAA+B;IAAA,IAAAM,OAAA;IACxD,IAAIC,KAAK,IAAAD,OAAA,GAAGR,MAAM,KAAN,gBAAAQ,OAAA,CAAQE,2BAA2B;IAC/C,IAAID,KAAK,IAAIA,KAAK,CAACE,MAAM,EAAE;MACzBF,KAAK,GAAAb,QAAA,KACAa,KAAK;QACRE,MAAM,EAAEC,iBAAiB,CAACH,KAAK,CAACE,MAAM;OACvC;IACH;IACA,OAAOF,KAAK;EACd;EAEA,SAASG,iBAAiBA,CACxBD,MAAsC,EACN;IAChC,IAAI,CAACA,MAAM,EAAE,OAAO,IAAI;IACxB,IAAIE,OAAO,GAAGnE,MAAM,CAACmE,OAAO,CAACF,MAAM,CAAC;IACpC,IAAIG,UAA0C,GAAG,EAAE;IACnD,KAAK,IAAI,CAAChE,GAAG,EAAEiE,GAAG,CAAC,IAAIF,OAAO,EAAE;MAC9B;MACA;MACA,IAAIE,GAAG,IAAIA,GAAG,CAACC,MAAM,KAAK,oBAAoB,EAAE;QAC9CF,UAAU,CAAChE,GAAG,CAAC,GAAG,IAAIwB,MAAA,CAAA2C,wBAAiB,CACrCF,GAAG,CAACG,MAAM,EACVH,GAAG,CAACI,UAAU,EACdJ,GAAG,CAACK,IAAI,EACRL,GAAG,CAACM,QAAQ,KAAK,IACnB,CAAC;OACF,MAAM,IAAIN,GAAG,IAAIA,GAAG,CAACC,MAAM,KAAK,OAAO,EAAE;QACxC;QACA,IAAID,GAAG,CAACO,SAAS,EAAE;UACjB,IAAIC,gBAAgB,GAAGvB,MAAM,CAACe,GAAG,CAACO,SAAS,CAAC;UAC5C,IAAI,OAAOC,gBAAgB,KAAK,UAAU,EAAE;YAC1C,IAAI;cACF;cACA,IAAIC,KAAK,GAAG,IAAID,gBAAgB,CAACR,GAAG,CAACU,OAAO,CAAC;cAC7C;cACA;cACAD,KAAK,CAACE,KAAK,GAAG,EAAE;cAChBZ,UAAU,CAAChE,GAAG,CAAC,GAAG0E,KAAK;aACxB,CAAC,OAAOvD,CAAC,EAAE;cACV;YAAA;UAEJ;QACF;QAEA,IAAI6C,UAAU,CAAChE,GAAG,CAAC,IAAI,IAAI,EAAE;UAC3B,IAAI0E,KAAK,GAAG,IAAIrC,KAAK,CAAC4B,GAAG,CAACU,OAAO,CAAC;UAClC;UACA;UACAD,KAAK,CAACE,KAAK,GAAG,EAAE;UAChBZ,UAAU,CAAChE,GAAG,CAAC,GAAG0E,KAAK;QACzB;MACF,CAAC,MAAM;QACLV,UAAU,CAAChE,GAAG,CAAC,GAAGiE,GAAG;MACvB;IACF;IACA,OAAOD,UAAU;EACnB;;EAEA;;EAEA;EACA;EACA;EAaA,MAAMa,qBAAqB,gBAAGC,gBAAK,CAACC,aAAa,CAA8B;IAC7EC,eAAe,EAAE;EACnB,CAAC;EACY;IACXH,qBAAqB,CAACI,WAAW,GAAG,gBAAgB;EACtD;;EAIA;;EAGM,MAAAC,eAAe,gBAAGJ,gBAAK,CAACC,aAAa,CAAwB,IAAII,GAAG,EAAE;EAC/D;IACXD,eAAe,CAACD,WAAW,GAAG,UAAU;EAC1C;;EAIA;;EAEA;EACA;EACA;;EAEA;;;;;;;;AAQA;;;;;AAKA;;;;;EAQA,MAAMG,gBAAgB,GAAG,iBAAiB;EAC1C,MAAMC,mBAAmB,GAAGP,gBAAK,CAACM,gBAAgB,CAAC;EACnD,MAAME,UAAU,GAAG,WAAW;EAC9B,MAAMC,aAAa,GAAGC,mBAAQ,CAACF,UAAU,CAAC;EAC1C,MAAMG,MAAM,GAAG,OAAO;EACtB,MAAMC,SAAS,GAAGZ,gBAAK,CAACW,MAAM,CAAC;EAE/B,SAASE,mBAAmBA,CAACC,EAAc,EAAE;IAC3C,IAAIP,mBAAmB,EAAE;MACvBA,mBAAmB,CAACO,EAAE,CAAC;IACzB,CAAC,MAAM;MACLA,EAAE,EAAE;IACN;EACF;EAEA,SAASC,aAAaA,CAACD,EAAc,EAAE;IACrC,IAAIL,aAAa,EAAE;MACjBA,aAAa,CAACK,EAAE,CAAC;IACnB,CAAC,MAAM;MACLA,EAAE,EAAE;IACN;EACF;EASA,MAAME,QAAQ,CAAI;IAGhB;;IAEA;;IAEAC,WAAWA,CAAA,EAAG;MAAA,IANd,CAAA3B,MAAM,GAAwC,SAAS;MAOrD,IAAI,CAAC4B,OAAO,GAAG,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;QAC9C,IAAI,CAACD,OAAO,GAAIjG,KAAK,IAAK;UACxB,IAAI,IAAI,CAACmE,MAAM,KAAK,SAAS,EAAE;YAC7B,IAAI,CAACA,MAAM,GAAG,UAAU;YACxB8B,OAAO,CAACjG,KAAK,CAAC;UAChB;SACD;QACD,IAAI,CAACkG,MAAM,GAAIC,MAAM,IAAK;UACxB,IAAI,IAAI,CAAChC,MAAM,KAAK,SAAS,EAAE;YAC7B,IAAI,CAACA,MAAM,GAAG,UAAU;YACxB+B,MAAM,CAACC,MAAM,CAAC;UAChB;SACD;MACH,CAAC,CAAC;IACJ;EACF;;EAEA;;;EAGO,SAASC,cAAcA,CAAAC,IAAA,EAIc;IAAA,IAJb;MAC7BC,eAAe;cACfC,QAAM;MACN3D;IACmB,CAAC,GAAAyD,IAAA;IACpB,IAAI,CAAC3C,KAAK,EAAE8C,YAAY,CAAC,GAAG3B,gBAAK,CAAC4B,QAAQ,CAACF,QAAM,CAAC7C,KAAK,CAAC;IACxD,IAAI,CAACgD,YAAY,EAAEC,eAAe,CAAC,GAAG9B,gBAAK,CAAC4B,QAAQ,EAAe;IACnE,IAAI,CAACG,SAAS,EAAEC,YAAY,CAAC,GAAGhC,gBAAK,CAAC4B,QAAQ,CAA8B;MAC1E1B,eAAe,EAAE;IACnB,CAAC,CAAC;IACF,IAAI,CAAC+B,SAAS,EAAEC,YAAY,CAAC,GAAGlC,gBAAK,CAAC4B,QAAQ,EAAkB;IAChE,IAAI,CAACO,UAAU,EAAEC,aAAa,CAAC,GAAGpC,gBAAK,CAAC4B,QAAQ,EAAkB;IAClE,IAAI,CAACS,YAAY,EAAEC,eAAe,CAAC,GAAGtC,gBAAK,CAAC4B,QAAQ,EAIhD;IACJ,IAAIW,WAAW,GAAGvC,gBAAK,CAACwC,MAAM,CAAmB,IAAInC,GAAG,EAAE,CAAC;IAC3D,IAAI;MAAEoC;IAAmB,CAAC,GAAG1E,MAAM,IAAI,EAAE;IAEzC,IAAI2E,oBAAoB,GAAG1C,gBAAK,CAAC2C,WAAW,CACzC7B,EAAc,IAAK;MAClB,IAAI2B,kBAAkB,EAAE;QACtB5B,mBAAmB,CAACC,EAAE,CAAC;MACzB,CAAC,MAAM;QACLA,EAAE,EAAE;MACN;IACF,CAAC,EACD,CAAC2B,kBAAkB,CACrB,CAAC;IAED,IAAIG,QAAQ,GAAG5C,gBAAK,CAAC2C,WAAW,CAC9B,CACEE,QAAqB,EAAAC,KAAA,KAMlB;MAAA,IALH;QACEC,eAAe;QACfC,kBAAkB,EAAEC,SAAS;QAC7BC,2BAA2B,EAAEC;MAC/B,CAAC,GAAAL,KAAA;MAEDC,eAAe,CAACpH,OAAO,CAAET,GAAG,IAAKqH,WAAW,CAACa,OAAO,CAACC,MAAM,CAACnI,GAAG,CAAC,CAAC;MACjE2H,QAAQ,CAACS,QAAQ,CAAC3H,OAAO,CAAC,CAAC4H,OAAO,EAAErI,GAAG,KAAK;QAC1C,IAAIqI,OAAO,CAAC/D,IAAI,KAAK9B,SAAS,EAAE;UAC9B6E,WAAW,CAACa,OAAO,CAACI,GAAG,CAACtI,GAAG,EAAEqI,OAAO,CAAC/D,IAAI,CAAC;QAC5C;MACF,CAAC,CAAC;MAEF,IAAIiE,2BAA2B,GAC7B/B,QAAM,CAACtD,MAAM,IAAI,IAAI,IACrB,OAAOsD,QAAM,CAACtD,MAAM,CAACjC,QAAQ,CAACuH,mBAAmB,KAAK,UAAU;;MAElE;MACA;MACA,IAAI,CAACP,kBAAkB,IAAIM,2BAA2B,EAAE;QACtD,IAAIR,SAAS,EAAE;UACblC,aAAa,CAAC,MAAMY,YAAY,CAACkB,QAAQ,CAAC,CAAC;QAC7C,CAAC,MAAM;UACLH,oBAAoB,CAAC,MAAMf,YAAY,CAACkB,QAAQ,CAAC,CAAC;QACpD;QACA;MACF;;MAEA;MACA,IAAII,SAAS,EAAE;QACb;QACAlC,aAAa,CAAC,MAAM;UAClB;UACA,IAAIoB,UAAU,EAAE;YACdF,SAAS,IAAIA,SAAS,CAACb,OAAO,EAAE;YAChCe,UAAU,CAACwB,cAAc,EAAE;UAC7B;UACA3B,YAAY,CAAC;YACX9B,eAAe,EAAE,IAAI;YACrB+C,SAAS,EAAE,IAAI;YACfW,eAAe,EAAET,kBAAkB,CAACS,eAAe;YACnDC,YAAY,EAAEV,kBAAkB,CAACU;UACnC,CAAC,CAAC;QACJ,CAAC,CAAC;;QAEF;QACA,IAAIC,CAAC,GAAGpC,QAAM,CAACtD,MAAM,CAAEjC,QAAQ,CAACuH,mBAAmB,CAAC,MAAM;UACxD3C,aAAa,CAAC,MAAMY,YAAY,CAACkB,QAAQ,CAAC,CAAC;QAC7C,CAAC,CAAC;;QAEF;QACAiB,CAAC,CAACC,QAAQ,CAACC,OAAO,CAAC,MAAM;UACvBjD,aAAa,CAAC,MAAM;YAClBmB,YAAY,CAACxE,SAAS,CAAC;YACvB0E,aAAa,CAAC1E,SAAS,CAAC;YACxBoE,eAAe,CAACpE,SAAS,CAAC;YAC1BsE,YAAY,CAAC;cAAE9B,eAAe,EAAE;YAAM,CAAC,CAAC;UAC1C,CAAC,CAAC;QACJ,CAAC,CAAC;QAEFa,aAAa,CAAC,MAAMqB,aAAa,CAAC0B,CAAC,CAAC,CAAC;QACrC;MACF;;MAEA;MACA,IAAI3B,UAAU,EAAE;QACd;QACA;QACAF,SAAS,IAAIA,SAAS,CAACb,OAAO,EAAE;QAChCe,UAAU,CAACwB,cAAc,EAAE;QAC3BrB,eAAe,CAAC;UACdzD,KAAK,EAAEgE,QAAQ;UACfe,eAAe,EAAET,kBAAkB,CAACS,eAAe;UACnDC,YAAY,EAAEV,kBAAkB,CAACU;QACnC,CAAC,CAAC;MACJ,CAAC,MAAM;QACL;QACA/B,eAAe,CAACe,QAAQ,CAAC;QACzBb,YAAY,CAAC;UACX9B,eAAe,EAAE,IAAI;UACrB+C,SAAS,EAAE,KAAK;UAChBW,eAAe,EAAET,kBAAkB,CAACS,eAAe;UACnDC,YAAY,EAAEV,kBAAkB,CAACU;QACnC,CAAC,CAAC;MACJ;IACF,CAAC,EACD,CAACnC,QAAM,CAACtD,MAAM,EAAE+D,UAAU,EAAEF,SAAS,EAAEM,WAAW,EAAEG,oBAAoB,CAC1E,CAAC;;IAED;IACA;IACA1C,gBAAK,CAACiE,eAAe,CAAC,MAAMvC,QAAM,CAACwC,SAAS,CAACtB,QAAQ,CAAC,EAAE,CAAClB,QAAM,EAAEkB,QAAQ,CAAC,CAAC;;IAE3E;IACA;IACA5C,gBAAK,CAACmE,SAAS,CAAC,MAAM;MACpB,IAAIpC,SAAS,CAAC7B,eAAe,IAAI,CAAC6B,SAAS,CAACkB,SAAS,EAAE;QACrDf,YAAY,CAAC,IAAIlB,QAAQ,EAAQ,CAAC;MACpC;IACF,CAAC,EAAE,CAACe,SAAS,CAAC,CAAC;;IAEf;IACA;IACA;IACA/B,gBAAK,CAACmE,SAAS,CAAC,MAAM;MACpB,IAAIlC,SAAS,IAAIJ,YAAY,IAAIH,QAAM,CAACtD,MAAM,EAAE;QAC9C,IAAIyE,QAAQ,GAAGhB,YAAY;QAC3B,IAAIuC,aAAa,GAAGnC,SAAS,CAACf,OAAO;QACrC,IAAIiB,UAAU,GAAGT,QAAM,CAACtD,MAAM,CAACjC,QAAQ,CAACuH,mBAAmB,CAAC,YAAY;UACtEhB,oBAAoB,CAAC,MAAMf,YAAY,CAACkB,QAAQ,CAAC,CAAC;UAClD,MAAMuB,aAAa;QACrB,CAAC,CAAC;QACFjC,UAAU,CAAC4B,QAAQ,CAACC,OAAO,CAAC,MAAM;UAChC9B,YAAY,CAACxE,SAAS,CAAC;UACvB0E,aAAa,CAAC1E,SAAS,CAAC;UACxBoE,eAAe,CAACpE,SAAS,CAAC;UAC1BsE,YAAY,CAAC;YAAE9B,eAAe,EAAE;UAAM,CAAC,CAAC;QAC1C,CAAC,CAAC;QACFkC,aAAa,CAACD,UAAU,CAAC;MAC3B;IACF,CAAC,EAAE,CAACO,oBAAoB,EAAEb,YAAY,EAAEI,SAAS,EAAEP,QAAM,CAACtD,MAAM,CAAC,CAAC;;IAElE;IACA;IACA4B,gBAAK,CAACmE,SAAS,CAAC,MAAM;MACpB,IACElC,SAAS,IACTJ,YAAY,IACZhD,KAAK,CAACwF,QAAQ,CAACnJ,GAAG,KAAK2G,YAAY,CAACwC,QAAQ,CAACnJ,GAAG,EAChD;QACA+G,SAAS,CAACb,OAAO,EAAE;MACrB;IACF,CAAC,EAAE,CAACa,SAAS,EAAEE,UAAU,EAAEtD,KAAK,CAACwF,QAAQ,EAAExC,YAAY,CAAC,CAAC;;IAEzD;IACA;IACA7B,gBAAK,CAACmE,SAAS,CAAC,MAAM;MACpB,IAAI,CAACpC,SAAS,CAAC7B,eAAe,IAAImC,YAAY,EAAE;QAC9CP,eAAe,CAACO,YAAY,CAACxD,KAAK,CAAC;QACnCmD,YAAY,CAAC;UACX9B,eAAe,EAAE,IAAI;UACrB+C,SAAS,EAAE,KAAK;UAChBW,eAAe,EAAEvB,YAAY,CAACuB,eAAe;UAC7CC,YAAY,EAAExB,YAAY,CAACwB;QAC7B,CAAC,CAAC;QACFvB,eAAe,CAAC5E,SAAS,CAAC;MAC5B;KACD,EAAE,CAACqE,SAAS,CAAC7B,eAAe,EAAEmC,YAAY,CAAC,CAAC;IAE7CrC,gBAAK,CAACmE,SAAS,CAAC,MAAM;MACpBzH,MAAA,CAAAC,cAAO,CACL8E,eAAe,IAAI,IAAI,IAAI,CAACC,QAAM,CAAC3D,MAAM,CAACuG,mBAAmB,EAC7D,8DAA8D,GAC5D,kEACJ,CAAC;MACD;MACA;KACD,EAAE,EAAE,CAAC;IAEN,IAAIC,SAAS,GAAGvE,gBAAK,CAACwE,OAAO,CAAC,MAAiB;MAC7C,OAAO;QACLC,UAAU,EAAE/C,QAAM,CAAC+C,UAAU;QAC7BC,cAAc,EAAEhD,QAAM,CAACgD,cAAc;QACrCC,EAAE,EAAGC,CAAC,IAAKlD,QAAM,CAACmD,QAAQ,CAACD,CAAC,CAAC;QAC7BE,IAAI,EAAEA,CAACC,EAAE,EAAElG,KAAK,EAAEhB,IAAI,KACpB6D,QAAM,CAACmD,QAAQ,CAACE,EAAE,EAAE;UAClBlG,KAAK;UACLmG,kBAAkB,EAAEnH,IAAI,IAAJ,gBAAAA,IAAI,CAAEmH;QAC5B,CAAC,CAAC;QACJC,OAAO,EAAEA,CAACF,EAAE,EAAElG,KAAK,EAAEhB,IAAI,KACvB6D,QAAM,CAACmD,QAAQ,CAACE,EAAE,EAAE;UAClBE,OAAO,EAAE,IAAI;UACbpG,KAAK;UACLmG,kBAAkB,EAAEnH,IAAI,IAAJ,gBAAAA,IAAI,CAAEmH;SAC3B;OACJ;IACH,CAAC,EAAE,CAACtD,QAAM,CAAC,CAAC;IAEZ,IAAI7E,QAAQ,GAAG6E,QAAM,CAAC7E,QAAQ,IAAI,GAAG;IAErC,IAAIqI,iBAAiB,GAAGlF,gBAAK,CAACwE,OAAO,CACnC,OAAO;cACL9C,QAAM;MACN6C,SAAS;MACTY,MAAM,EAAE,KAAK;MACbtI;KACD,CAAC,EACF,CAAC6E,QAAM,EAAE6C,SAAS,EAAE1H,QAAQ,CAC9B,CAAC;;IAED;IACA;IACA;IACA;IACA;IACA;IACA,oBACEmD,gBAAA,CAAA5D,aAAA,CAAA4D,gBAAA,CAAAoF,QAAA,EACE,mBAAApF,gBAAA,CAAA5D,aAAA,CAACmC,WAAA,CAAA8G,wBAAiB,CAACC,QAAQ;MAACnK,KAAK,EAAE+J;IAAkB,gBACnDlF,gBAAA,CAAA5D,aAAA,CAACmC,WAAA,CAAAgH,6BAAsB,CAACD,QAAQ;MAACnK,KAAK,EAAE0D;IAAM,gBAC5CmB,gBAAA,CAAA5D,aAAA,CAACgE,eAAe,CAACkF,QAAQ;MAACnK,KAAK,EAAEoH,WAAW,CAACa;IAAQ,gBACnDpD,gBAAA,CAAA5D,aAAA,CAAC2D,qBAAqB,CAACuF,QAAQ;MAACnK,KAAK,EAAE4G;IAAU,gBAC/C/B,gBAAA,CAAA5D,aAAA,CAACmC,WAAA,CAAAiH,MAAM;MACL3I,QAAQ,EAAEA,QAAS;MACnBwH,QAAQ,EAAExF,KAAK,CAACwF,QAAS;MACzBoB,cAAc,EAAE5G,KAAK,CAAC6G,aAAc;MACpCnB,SAAS,EAAEA,SAAU;MACrBxG,MAAM,EAAE;QACN4H,oBAAoB,EAAEjE,QAAM,CAAC3D,MAAM,CAAC4H;MACtC;IAAE,GAED9G,KAAK,CAAC+G,WAAW,IAAIlE,QAAM,CAAC3D,MAAM,CAACuG,mBAAmB,gBACrDtE,gBAAA,CAAA5D,aAAA,CAACyJ,UAAU;MACTjI,MAAM,EAAE8D,QAAM,CAAC9D,MAAO;MACtBG,MAAM,EAAE2D,QAAM,CAAC3D,MAAO;MACtBc,KAAK,EAAEA;KACR,CAAC,GAEF4C,eAEI,CACsB,CACR,CACK,CACP,CAAC,EAC5B,IACD,CAAC;EAEP;EAEA,SAASoE,UAAUA,CAAAC,KAAA,EAQW;IAAA,IARV;MAClBlI,MAAM;MACNG,MAAM;MACNc;IAKF,CAAC,GAAAiH,KAAA;IACC,OAAOvH,WAAA,CAAAwH,oBAAa,CAACnI,MAAM,EAAEF,SAAS,EAAEmB,KAAK,EAAEd,MAAM,CAAC;EACxD;EASA;;;EAGO,SAASiI,aAAaA,CAAAC,KAAA,EAKN;IAAA,IALO;MAC5BpJ,QAAQ;MACRqJ,QAAQ;MACRnI,MAAM;MACNK;IACkB,CAAC,GAAA6H,KAAA;IACnB,IAAIE,UAAU,GAAGnG,gBAAK,CAACwC,MAAM,EAAkB;IAC/C,IAAI2D,UAAU,CAAC/C,OAAO,IAAI,IAAI,EAAE;MAC9B+C,UAAU,CAAC/C,OAAO,GAAG1G,MAAA,CAAAyB,oBAAoB,CAAC;QAAEC,MAAM;QAAEgI,QAAQ,EAAE;MAAK,CAAC,CAAC;IACvE;IAEA,IAAIlI,OAAO,GAAGiI,UAAU,CAAC/C,OAAO;IAChC,IAAI,CAACvE,KAAK,EAAE8C,YAAY,CAAC,GAAG3B,gBAAK,CAAC4B,QAAQ,CAAC;MACzC7E,MAAM,EAAEmB,OAAO,CAACnB,MAAM;MACtBsH,QAAQ,EAAEnG,OAAO,CAACmG;IACpB,CAAC,CAAC;IACF,IAAI;MAAE5B;IAAmB,CAAC,GAAG1E,MAAM,IAAI,EAAE;IACzC,IAAI6E,QAAQ,GAAG5C,gBAAK,CAAC2C,WAAW,CAC7BE,QAAwD,IAAK;MAC5DJ,kBAAkB,IAAIlC,mBAAmB,GACrCA,mBAAmB,CAAC,MAAMoB,YAAY,CAACkB,QAAQ,CAAC,CAAC,GACjDlB,YAAY,CAACkB,QAAQ,CAAC;IAC5B,CAAC,EACD,CAAClB,YAAY,EAAEc,kBAAkB,CACnC,CAAC;IAEDzC,gBAAK,CAACiE,eAAe,CAAC,MAAM/F,OAAO,CAACmI,MAAM,CAACzD,QAAQ,CAAC,EAAE,CAAC1E,OAAO,EAAE0E,QAAQ,CAAC,CAAC;IAE1E,oBACE5C,gBAAA,CAAA5D,aAAA,CAACmC,WAAA,CAAAiH,MAAM;MACL3I,QAAQ,EAAEA,QAAS;MACnBqJ,QAAQ,EAAEA,QAAS;MACnB7B,QAAQ,EAAExF,KAAK,CAACwF,QAAS;MACzBoB,cAAc,EAAE5G,KAAK,CAAC9B,MAAO;MAC7BwH,SAAS,EAAErG,OAAQ;MACnBH,MAAM,EAAEA;IAAO,CAChB,CAAC;EAEN;EASA;;;;EAIO,SAASuI,UAAUA,CAAAC,KAAA,EAKN;IAAA,IALO;MACzB1J,QAAQ;MACRqJ,QAAQ;MACRnI,MAAM;MACNK;IACe,CAAC,GAAAmI,KAAA;IAChB,IAAIJ,UAAU,GAAGnG,gBAAK,CAACwC,MAAM,EAAe;IAC5C,IAAI2D,UAAU,CAAC/C,OAAO,IAAI,IAAI,EAAE;MAC9B+C,UAAU,CAAC/C,OAAO,GAAG1G,MAAA,CAAAiC,iBAAiB,CAAC;QAAEP,MAAM;QAAEgI,QAAQ,EAAE;MAAK,CAAC,CAAC;IACpE;IAEA,IAAIlI,OAAO,GAAGiI,UAAU,CAAC/C,OAAO;IAChC,IAAI,CAACvE,KAAK,EAAE8C,YAAY,CAAC,GAAG3B,gBAAK,CAAC4B,QAAQ,CAAC;MACzC7E,MAAM,EAAEmB,OAAO,CAACnB,MAAM;MACtBsH,QAAQ,EAAEnG,OAAO,CAACmG;IACpB,CAAC,CAAC;IACF,IAAI;MAAE5B;IAAmB,CAAC,GAAG1E,MAAM,IAAI,EAAE;IACzC,IAAI6E,QAAQ,GAAG5C,gBAAK,CAAC2C,WAAW,CAC7BE,QAAwD,IAAK;MAC5DJ,kBAAkB,IAAIlC,mBAAmB,GACrCA,mBAAmB,CAAC,MAAMoB,YAAY,CAACkB,QAAQ,CAAC,CAAC,GACjDlB,YAAY,CAACkB,QAAQ,CAAC;IAC5B,CAAC,EACD,CAAClB,YAAY,EAAEc,kBAAkB,CACnC,CAAC;IAEDzC,gBAAK,CAACiE,eAAe,CAAC,MAAM/F,OAAO,CAACmI,MAAM,CAACzD,QAAQ,CAAC,EAAE,CAAC1E,OAAO,EAAE0E,QAAQ,CAAC,CAAC;IAE1E,oBACE5C,gBAAA,CAAA5D,aAAA,CAACmC,WAAA,CAAAiH,MAAM;MACL3I,QAAQ,EAAEA,QAAS;MACnBqJ,QAAQ,EAAEA,QAAS;MACnB7B,QAAQ,EAAExF,KAAK,CAACwF,QAAS;MACzBoB,cAAc,EAAE5G,KAAK,CAAC9B,MAAO;MAC7BwH,SAAS,EAAErG,OAAQ;MACnBH,MAAM,EAAEA;IAAO,CAChB,CAAC;EAEN;EASA;;;;;;EAMA,SAASyI,aAAaA,CAAAC,KAAA,EAKC;IAAA,IALA;MACrB5J,QAAQ;MACRqJ,QAAQ;MACRnI,MAAM;MACNG;IACkB,CAAC,GAAAuI,KAAA;IACnB,IAAI,CAAC5H,KAAK,EAAE8C,YAAY,CAAC,GAAG3B,gBAAK,CAAC4B,QAAQ,CAAC;MACzC7E,MAAM,EAAEmB,OAAO,CAACnB,MAAM;MACtBsH,QAAQ,EAAEnG,OAAO,CAACmG;IACpB,CAAC,CAAC;IACF,IAAI;MAAE5B;IAAmB,CAAC,GAAG1E,MAAM,IAAI,EAAE;IACzC,IAAI6E,QAAQ,GAAG5C,gBAAK,CAAC2C,WAAW,CAC7BE,QAAwD,IAAK;MAC5DJ,kBAAkB,IAAIlC,mBAAmB,GACrCA,mBAAmB,CAAC,MAAMoB,YAAY,CAACkB,QAAQ,CAAC,CAAC,GACjDlB,YAAY,CAACkB,QAAQ,CAAC;IAC5B,CAAC,EACD,CAAClB,YAAY,EAAEc,kBAAkB,CACnC,CAAC;IAEDzC,gBAAK,CAACiE,eAAe,CAAC,MAAM/F,OAAO,CAACmI,MAAM,CAACzD,QAAQ,CAAC,EAAE,CAAC1E,OAAO,EAAE0E,QAAQ,CAAC,CAAC;IAE1E,oBACE5C,gBAAA,CAAA5D,aAAA,CAACmC,WAAA,CAAAiH,MAAM;MACL3I,QAAQ,EAAEA,QAAS;MACnBqJ,QAAQ,EAAEA,QAAS;MACnB7B,QAAQ,EAAExF,KAAK,CAACwF,QAAS;MACzBoB,cAAc,EAAE5G,KAAK,CAAC9B,MAAO;MAC7BwH,SAAS,EAAErG,OAAQ;MACnBH,MAAM,EAAEA;IAAO,CAChB,CAAC;EAEN;EAEa;IACXyI,aAAa,CAACrG,WAAW,GAAG,wBAAwB;EACtD;EAeA,MAAMuG,SAAS,GACb,OAAOtI,MAAM,KAAK,WAAW,IAC7B,OAAOA,MAAM,CAACjC,QAAQ,KAAK,WAAW,IACtC,OAAOiC,MAAM,CAACjC,QAAQ,CAACC,aAAa,KAAK,WAAW;EAEtD,MAAMuK,kBAAkB,GAAG,+BAA+B;;EAE1D;;;EAGa,MAAAC,IAAI,gBAAG5G,gBAAK,CAAC6G,UAAU,CAClC,SAASC,WAAWA,CAAAC,KAAA,EAalBC,GAAG,EACH;IAAA,IAbA;QACEC,OAAO;QACPC,QAAQ;QACRC,cAAc;QACdlC,OAAO;QACPpG,KAAK;QACLtE,MAAM;QACNwK,EAAE;QACFC,kBAAkB;QAClBoC;MAEF,CAAC,GAAAL,KAAA;MADIM,IAAI,GAAAC,6BAAA,CAAAP,KAAA,EAAAQ,SAAA;IAIT,IAAI;MAAE1K;IAAS,CAAC,GAAGmD,gBAAK,CAACwH,UAAU,CAACjJ,WAAA,CAAAkJ,wBAAiB,CAAC;;IAEtD;IACA,IAAIC,YAAY;IAChB,IAAIC,UAAU,GAAG,KAAK;IAEtB,IAAI,OAAO5C,EAAE,KAAK,QAAQ,IAAI4B,kBAAkB,CAACiB,IAAI,CAAC7C,EAAE,CAAC,EAAE;MACzD;MACA2C,YAAY,GAAG3C,EAAE;;MAEjB;MACA,IAAI2B,SAAS,EAAE;QACb,IAAI;UACF,IAAImB,UAAU,GAAG,IAAIC,GAAG,CAAC1J,MAAM,CAACiG,QAAQ,CAAC0D,IAAI,CAAC;UAC9C,IAAIC,SAAS,GAAGjD,EAAE,CAACkD,UAAU,CAAC,IAAI,CAAC,GAC/B,IAAIH,GAAG,CAACD,UAAU,CAACK,QAAQ,GAAGnD,EAAE,CAAC,GACjC,IAAI+C,GAAG,CAAC/C,EAAE,CAAC;UACf,IAAIoD,IAAI,GAAGzL,MAAA,CAAAU,aAAa,CAAC4K,SAAS,CAACI,QAAQ,EAAEvL,QAAQ,CAAC;UAEtD,IAAImL,SAAS,CAACK,MAAM,KAAKR,UAAU,CAACQ,MAAM,IAAIF,IAAI,IAAI,IAAI,EAAE;YAC1D;YACApD,EAAE,GAAGoD,IAAI,GAAGH,SAAS,CAACM,MAAM,GAAGN,SAAS,CAACO,IAAI;UAC/C,CAAC,MAAM;YACLZ,UAAU,GAAG,IAAI;UACnB;SACD,CAAC,OAAOtL,CAAC,EAAE;UACV;UACAK,MAAA,CAAAC,cAAO,CACL,KAAK,EACL,gBAAaoI,EAAE,iHAEjB,CAAC;QACH;MACF;IACF;;IAEA;IACA,IAAIgD,IAAI,GAAGxJ,WAAA,CAAAiK,OAAO,CAACzD,EAAE,EAAE;MAAEmC;IAAS,CAAC,CAAC;IAEpC,IAAIuB,eAAe,GAAGC,mBAAmB,CAAC3D,EAAE,EAAE;MAC5CE,OAAO;MACPpG,KAAK;MACLtE,MAAM;MACNyK,kBAAkB;MAClBkC,QAAQ;MACRE;IACF,CAAC,CAAC;IACF,SAASuB,WAAWA,CAClB1O,KAAsD,EACtD;MACA,IAAIgN,OAAO,EAAEA,OAAO,CAAChN,KAAK,CAAC;MAC3B,IAAI,CAACA,KAAK,CAAC2O,gBAAgB,EAAE;QAC3BH,eAAe,CAACxO,KAAK,CAAC;MACxB;IACF;IAEA;MACE;MACA+F,gBAAA,CAAA5D,aAAA,MAAA4B,QAAA,KACMqJ,IAAI;QACRU,IAAI,EAAEL,YAAY,IAAIK,IAAK;QAC3Bd,OAAO,EAAEU,UAAU,IAAIR,cAAc,GAAGF,OAAO,GAAG0B,WAAY;QAC9D3B,GAAG,EAAEA,GAAI;QACTzM,MAAM,EAAEA;OACT;IAAA;EAEL,CACF;EAEa;IACXqM,IAAI,CAACzG,WAAW,GAAG,MAAM;EAC3B;EAmBA;;;EAGa,MAAA0I,OAAO,gBAAG7I,gBAAK,CAAC6G,UAAU,CACrC,SAASiC,cAAcA,CAAAC,KAAA,EAYrB/B,GAAG,EACH;IAAA,IAZA;QACE,cAAc,EAAEgC,eAAe,GAAG,MAAM;QACxCC,aAAa,GAAG,KAAK;QACrBC,SAAS,EAAEC,aAAa,GAAG,EAAE;QAC7BC,GAAG,GAAG,KAAK;QACXC,KAAK,EAAEC,SAAS;QAChBvE,EAAE;QACFqC,uBAAuB;QACvBlB;MAEF,CAAC,GAAA6C,KAAA;MADI1B,IAAI,GAAAC,6BAAA,CAAAyB,KAAA,EAAAQ,UAAA;IAIT,IAAIpB,IAAI,GAAG5J,WAAA,CAAAiL,eAAe,CAACzE,EAAE,EAAE;MAAEmC,QAAQ,EAAEG,IAAI,CAACH;IAAS,CAAC,CAAC;IAC3D,IAAI7C,QAAQ,GAAG9F,WAAA,CAAAkL,WAAW,EAAE;IAC5B,IAAIC,WAAW,GAAG1J,gBAAK,CAACwH,UAAU,CAACjJ,WAAA,CAAAgH,6BAAsB,CAAC;IAC1D,IAAI;MAAEhB,SAAS;MAAE1H;IAAS,CAAC,GAAGmD,gBAAK,CAACwH,UAAU,CAACjJ,WAAA,CAAAkJ,wBAAiB,CAAC;IACjE,IAAIvH,eAAe,GACjBwJ,WAAW,IAAI,IAAI;IACnB;IACA;IACAC,sBAAsB,CAACxB,IAAI,CAAC,IAC5Bf,uBAAuB,KAAK,IAAI;IAElC,IAAIwC,UAAU,GAAGrF,SAAS,CAACG,cAAc,GACrCH,SAAS,CAACG,cAAc,CAACyD,IAAI,CAAC,CAACC,QAAQ,GACvCD,IAAI,CAACC,QAAQ;IACjB,IAAIyB,gBAAgB,GAAGxF,QAAQ,CAAC+D,QAAQ;IACxC,IAAI0B,oBAAoB,GACtBJ,WAAW,IAAIA,WAAW,CAACK,UAAU,IAAIL,WAAW,CAACK,UAAU,CAAC1F,QAAQ,GACpEqF,WAAW,CAACK,UAAU,CAAC1F,QAAQ,CAAC+D,QAAQ,GACxC,IAAI;IAEV,IAAI,CAACa,aAAa,EAAE;MAClBY,gBAAgB,GAAGA,gBAAgB,CAAChQ,WAAW,EAAE;MACjDiQ,oBAAoB,GAAGA,oBAAoB,GACvCA,oBAAoB,CAACjQ,WAAW,EAAE,GAClC,IAAI;MACR+P,UAAU,GAAGA,UAAU,CAAC/P,WAAW,EAAE;IACvC;IAEA,IAAIiQ,oBAAoB,IAAIjN,QAAQ,EAAE;MACpCiN,oBAAoB,GAClBpN,MAAA,CAAAU,aAAa,CAAC0M,oBAAoB,EAAEjN,QAAQ,CAAC,IAAIiN,oBAAoB;IACzE;;IAEA;IACA;IACA;IACA;IACA;IACA,MAAME,gBAAgB,GACpBJ,UAAU,KAAK,GAAG,IAAIA,UAAU,CAACK,QAAQ,CAAC,GAAG,CAAC,GAC1CL,UAAU,CAACM,MAAM,GAAG,CAAC,GACrBN,UAAU,CAACM,MAAM;IACvB,IAAIC,QAAQ,GACVN,gBAAgB,KAAKD,UAAU,IAC9B,CAACR,GAAG,IACHS,gBAAgB,CAAC5B,UAAU,CAAC2B,UAAU,CAAC,IACvCC,gBAAgB,CAACO,MAAM,CAACJ,gBAAgB,CAAC,KAAK,GAAI;IAEtD,IAAIK,SAAS,GACXP,oBAAoB,IAAI,IAAI,KAC3BA,oBAAoB,KAAKF,UAAU,IACjC,CAACR,GAAG,IACHU,oBAAoB,CAAC7B,UAAU,CAAC2B,UAAU,CAAC,IAC3CE,oBAAoB,CAACM,MAAM,CAACR,UAAU,CAACM,MAAM,CAAC,KAAK,GAAI,CAAC;IAE9D,IAAII,WAAW,GAAG;MAChBH,QAAQ;MACRE,SAAS;MACTnK;KACD;IAED,IAAIqK,WAAW,GAAGJ,QAAQ,GAAGnB,eAAe,GAAGtL,SAAS;IAExD,IAAIwL,SAA6B;IACjC,IAAI,OAAOC,aAAa,KAAK,UAAU,EAAE;MACvCD,SAAS,GAAGC,aAAa,CAACmB,WAAW,CAAC;IACxC,CAAC,MAAM;MACL;MACA;MACA;MACA;MACA;MACApB,SAAS,GAAG,CACVC,aAAa,EACbgB,QAAQ,GAAG,QAAQ,GAAG,IAAI,EAC1BE,SAAS,GAAG,SAAS,GAAG,IAAI,EAC5BnK,eAAe,GAAG,eAAe,GAAG,IAAI,CACzC,CACEsK,MAAM,CAACC,OAAO,CAAC,CACfC,IAAI,CAAC,GAAG,CAAC;IACd;IAEA,IAAIrB,KAAK,GACP,OAAOC,SAAS,KAAK,UAAU,GAAGA,SAAS,CAACgB,WAAW,CAAC,GAAGhB,SAAS;IAEtE,oBACEtJ,gBAAA,CAAA5D,aAAA,CAACwK,IAAI,EAAA5I,QAAA,KACCqJ,IAAI;MACR,gBAAckD,WAAY;MAC1BrB,SAAS,EAAEA,SAAU;MACrBlC,GAAG,EAAEA,GAAI;MACTqC,KAAK,EAAEA,KAAM;MACbtE,EAAE,EAAEA,EAAG;MACPqC,uBAAuB,EAAEA;KAExB,UAAOlB,QAAQ,KAAK,UAAU,GAAGA,QAAQ,CAACoE,WAAW,CAAC,GAAGpE,QACtD,CAAC;EAEX,CACF;EAEa;IACX2C,OAAO,CAAC1I,WAAW,GAAG,SAAS;EACjC;EAsFA;;;;;;EAMO,MAAMwK,IAAI,gBAAG3K,gBAAK,CAAC6G,UAAU,CAClC,CAAA+D,KAAA,EAeEC,YAAY,KACT;IAAA,IAfH;QACEC,UAAU;QACVjG,QAAQ;QACRsC,cAAc;QACdlC,OAAO;QACPpG,KAAK;QACL/B,MAAM,GAAGvD,aAAa;QACtBwD,MAAM;QACNgO,QAAQ;QACR7D,QAAQ;QACRlC,kBAAkB;QAClBoC;MAEF,CAAC,GAAAwD,KAAA;MADII,KAAK,GAAA1D,6BAAA,CAAAsD,KAAA,EAAAK,UAAA;IAIV,IAAIC,MAAM,GAAGC,SAAS,EAAE;IACxB,IAAIC,UAAU,GAAGC,aAAa,CAACtO,MAAM,EAAE;MAAEmK;IAAS,CAAC,CAAC;IACpD,IAAIoE,UAA0B,GAC5BxO,MAAM,CAACjD,WAAW,EAAE,KAAK,KAAK,GAAG,KAAK,GAAG,MAAM;IAEjD,IAAI0R,aAAsD,GAAItR,KAAK,IAAK;MACtE8Q,QAAQ,IAAIA,QAAQ,CAAC9Q,KAAK,CAAC;MAC3B,IAAIA,KAAK,CAAC2O,gBAAgB,EAAE;MAC5B3O,KAAK,CAACuR,cAAc,EAAE;MAEtB,IAAIC,SAAS,GAAIxR,KAAK,CAAgCyR,WAAW,CAC9DD,SAAqC;MAExC,IAAIE,YAAY,GACd,CAACF,SAAS,IAAT,gBAAAA,SAAS,CAAEtO,YAAY,CAAC,YAAY,CAAC,KACtCL,MAAM;MAERoO,MAAM,CAACO,SAAS,IAAIxR,KAAK,CAAC2R,aAAa,EAAE;QACvCd,UAAU;QACVhO,MAAM,EAAE6O,YAAY;QACpB9G,QAAQ;QACRI,OAAO;QACPpG,KAAK;QACLqI,QAAQ;QACRlC,kBAAkB;QAClBoC;MACF,CAAC,CAAC;KACH;IAED,oBACEpH,gBAAA,CAAA5D,aAAA,SAAA4B,QAAA;MACEgJ,GAAG,EAAE6D,YAAa;MAClB/N,MAAM,EAAEwO,UAAW;MACnBvO,MAAM,EAAEqO,UAAW;MACnBL,QAAQ,EAAE5D,cAAc,GAAG4D,QAAQ,GAAGQ;KAClC,EAAAP,KAAK,CACV,CAAC;EAEN,CACF;EAEa;IACXL,IAAI,CAACxK,WAAW,GAAG,MAAM;EAC3B;EAOA;;;;EAIO,SAAS0L,iBAAiBA,CAAAC,MAAA,EAGN;IAAA,IAHO;MAChCC,MAAM;MACNC;IACsB,CAAC,GAAAF,MAAA;IACvBG,oBAAoB,CAAC;MAAEF,MAAM;MAAEC;IAAW,CAAC,CAAC;IAC5C,OAAO,IAAI;EACb;EAEa;IACXH,iBAAiB,CAAC1L,WAAW,GAAG,mBAAmB;EACrD;EACA;;EAEA;EACA;EACA;EAAA,IAEK+L,cAAc,0BAAdA,cAAc;IAAdA,cAAc;IAAdA,cAAc;IAAdA,cAAc;IAAdA,cAAc;IAAdA,cAAc;IAAA,OAAdA,cAAc;EAAA,EAAdA,cAAc;EAAA,IAQdC,mBAAmB,0BAAnBA,mBAAmB;IAAnBA,mBAAmB;IAAnBA,mBAAmB;IAAnBA,mBAAmB;IAAA,OAAnBA,mBAAmB;EAAA,EAAnBA,mBAAmB,IAMxB;EAEA,SAASC,yBAAyBA,CAChCC,QAA8C,EAC9C;IACA,OAAUA,QAAQ;EACpB;EAEA,SAASC,oBAAoBA,CAACD,QAAwB,EAAE;IACtD,IAAIE,GAAG,GAAGvM,gBAAK,CAACwH,UAAU,CAACjJ,WAAA,CAAA8G,wBAAiB,CAAC;IAC7C,CAAUkH,GAAG,GAAb7P,MAAA,CAAA8P,gBAAS,QAAMJ,yBAAyB,CAACC,QAAQ,CAAC,IAAzC;IACT,OAAOE,GAAG;EACZ;EAEA,SAASE,kBAAkBA,CAACJ,QAA6B,EAAE;IACzD,IAAIxN,KAAK,GAAGmB,gBAAK,CAACwH,UAAU,CAACjJ,WAAA,CAAAgH,6BAAsB,CAAC;IACpD,CAAU1G,KAAK,GAAfnC,MAAA,CAAA8P,gBAAS,QAAQJ,yBAAyB,CAACC,QAAQ,CAAC,IAA3C;IACT,OAAOxN,KAAK;EACd;;EAEA;;EAEA;;;;;EAKO,SAAS6J,mBAAmBA,CACjC3D,EAAM,EAAA2H,KAAA,EAgB4C;IAAA,IAflD;MACEnS,MAAM;MACN0K,OAAO,EAAE0H,WAAW;MACpB9N,KAAK;MACLmG,kBAAkB;MAClBkC,QAAQ;MACRE;IAQF,CAAC,GAAAsF,KAAA,cAAG,EAAE,GAAAA,KAAA;IAEN,IAAI7H,QAAQ,GAAGtG,WAAA,CAAAqO,WAAW,EAAE;IAC5B,IAAIvI,QAAQ,GAAG9F,WAAA,CAAAkL,WAAW,EAAE;IAC5B,IAAItB,IAAI,GAAG5J,WAAA,CAAAiL,eAAe,CAACzE,EAAE,EAAE;MAAEmC;IAAS,CAAC,CAAC;IAE5C,OAAOlH,gBAAK,CAAC2C,WAAW,CACrB1I,KAAsC,IAAK;MAC1C,IAAIK,sBAAsB,CAACL,KAAK,EAAEM,MAAM,CAAC,EAAE;QACzCN,KAAK,CAACuR,cAAc,EAAE;;QAEtB;QACA;QACA,IAAIvG,OAAO,GACT0H,WAAW,KAAKjP,SAAS,GACrBiP,WAAW,GACXpO,WAAA,CAAAsO,UAAU,CAACxI,QAAQ,CAAC,KAAK9F,WAAA,CAAAsO,UAAU,CAAC1E,IAAI,CAAC;QAE/CtD,QAAQ,CAACE,EAAE,EAAE;UACXE,OAAO;UACPpG,KAAK;UACLmG,kBAAkB;UAClBkC,QAAQ;UACRE;QACF,CAAC,CAAC;MACJ;KACD,EACD,CACE/C,QAAQ,EACRQ,QAAQ,EACRsD,IAAI,EACJwE,WAAW,EACX9N,KAAK,EACLtE,MAAM,EACNwK,EAAE,EACFC,kBAAkB,EAClBkC,QAAQ,EACRE,uBAAuB,CAE3B,CAAC;EACH;;EAEA;;;;EAIO,SAAS0F,eAAeA,CAC7BC,WAAiC,EACM;IACvCrQ,MAAA,CAAAC,cAAO,CACL,OAAOhC,eAAe,KAAK,WAAW,EACtC,6IACqE,GACX,2GACR,wEACqB,GACG,mJACA,UAE5E,CAAC;IAED,IAAIqS,sBAAsB,GAAGhN,gBAAK,CAACwC,MAAM,CAAC/H,kBAAkB,CAACsS,WAAW,CAAC,CAAC;IAC1E,IAAIE,qBAAqB,GAAGjN,gBAAK,CAACwC,MAAM,CAAC,KAAK,CAAC;IAE/C,IAAI6B,QAAQ,GAAG9F,WAAA,CAAAkL,WAAW,EAAE;IAC5B,IAAI/N,YAAY,GAAGsE,gBAAK,CAACwE,OAAO,CAC9B;IACE;IACA;IACA;IACAjJ,0BAA0B,CACxB8I,QAAQ,CAACiE,MAAM,EACf2E,qBAAqB,CAAC7J,OAAO,GAAG,IAAI,GAAG4J,sBAAsB,CAAC5J,OAChE,CAAC,EACH,CAACiB,QAAQ,CAACiE,MAAM,CAClB,CAAC;IAED,IAAIzD,QAAQ,GAAGtG,WAAA,CAAAqO,WAAW,EAAE;IAC5B,IAAIM,eAAe,GAAGlN,gBAAK,CAAC2C,WAAW,CACrC,CAACwK,QAAQ,EAAEC,eAAe,KAAK;MAC7B,MAAMC,eAAe,GAAG5S,kBAAkB,CACxC,OAAO0S,QAAQ,KAAK,UAAU,GAAGA,QAAQ,CAACzR,YAAY,CAAC,GAAGyR,QAC5D,CAAC;MACDF,qBAAqB,CAAC7J,OAAO,GAAG,IAAI;MACpCyB,QAAQ,CAAC,GAAG,GAAGwI,eAAe,EAAED,eAAe,CAAC;IAClD,CAAC,EACD,CAACvI,QAAQ,EAAEnJ,YAAY,CACzB,CAAC;IAED,OAAO,CAACA,YAAY,EAAEwR,eAAe,CAAC;EACxC;;EASA;;;;EAuBA;;;;EAWA,SAASI,4BAA4BA,CAAA,EAAG;IACtC,IAAI,OAAOnR,QAAQ,KAAK,WAAW,EAAE;MACnC,MAAM,IAAIoB,KAAK,CACb,mDAAmD,GACjD,8DACJ,CAAC;IACH;EACF;EAEA,IAAIgQ,SAAS,GAAG,CAAC;EACjB,IAAIC,kBAAkB,GAAGA,CAAA,YAAWC,MAAM,CAAC,EAAEF,SAAS,CAAC,GAAI;;EAE3D;;;;EAIO,SAASpC,SAASA,CAAA,EAAmB;IAC1C,IAAI;MAAEzO;IAAO,CAAC,GAAG4P,oBAAoB,CAACJ,cAAc,CAACwB,SAAS,CAAC;IAC/D,IAAI;MAAE7Q;IAAS,CAAC,GAAGmD,gBAAK,CAACwH,UAAU,CAACjJ,WAAA,CAAAkJ,wBAAiB,CAAC;IACtD,IAAIkG,cAAc,GAAGpP,WAAA,CAAAqP,iBAAU,EAAE;IAEjC,OAAO5N,gBAAK,CAAC2C,WAAW,CACtB,UAACpI,MAAM,EAAEsT,OAAO,EAAU;MAAA,IAAjBA,OAAO;QAAPA,OAAO,GAAG,EAAE;MAAA;MACnBP,4BAA4B,EAAE;MAE9B,IAAI;QAAEvQ,MAAM;QAAED,MAAM;QAAEL,OAAO;QAAEO,QAAQ;QAAEC;MAAK,CAAC,GAAGL,qBAAqB,CACrErC,MAAM,EACNsC,QACF,CAAC;MAED,IAAIgR,OAAO,CAAChJ,QAAQ,KAAK,KAAK,EAAE;QAC9B,IAAI3J,GAAG,GAAG2S,OAAO,CAAC/C,UAAU,IAAI0C,kBAAkB,EAAE;QACpD9Q,MAAM,CAACoR,KAAK,CAAC5S,GAAG,EAAEyS,cAAc,EAAEE,OAAO,CAAC9Q,MAAM,IAAIA,MAAM,EAAE;UAC1DiI,kBAAkB,EAAE6I,OAAO,CAAC7I,kBAAkB;UAC9ChI,QAAQ;UACRC,IAAI;UACJqO,UAAU,EAAEuC,OAAO,CAAC/Q,MAAM,IAAKA,MAAyB;UACxDiR,WAAW,EAAEF,OAAO,CAACpR,OAAO,IAAKA,OAAuB;UACxDuG,kBAAkB,EAAE6K,OAAO,CAAC7K;QAC9B,CAAC,CAAC;MACJ,CAAC,MAAM;QACLtG,MAAM,CAACmI,QAAQ,CAACgJ,OAAO,CAAC9Q,MAAM,IAAIA,MAAM,EAAE;UACxCiI,kBAAkB,EAAE6I,OAAO,CAAC7I,kBAAkB;UAC9ChI,QAAQ;UACRC,IAAI;UACJqO,UAAU,EAAEuC,OAAO,CAAC/Q,MAAM,IAAKA,MAAyB;UACxDiR,WAAW,EAAEF,OAAO,CAACpR,OAAO,IAAKA,OAAuB;UACxDwI,OAAO,EAAE4I,OAAO,CAAC5I,OAAO;UACxBpG,KAAK,EAAEgP,OAAO,CAAChP,KAAK;UACpBmP,WAAW,EAAEL,cAAc;UAC3B3K,kBAAkB,EAAE6K,OAAO,CAAC7K,kBAAkB;UAC9CoE,uBAAuB,EAAEyG,OAAO,CAACzG;QACnC,CAAC,CAAC;MACJ;KACD,EACD,CAAC1K,MAAM,EAAEG,QAAQ,EAAE8Q,cAAc,CACnC,CAAC;EACH;;EAEA;EACA;EACO,SAAStC,aAAaA,CAC3BtO,MAAe,EAAAkR,MAAA,EAEP;IAAA,IADR;MAAE/G;IAA6C,CAAC,GAAA+G,MAAA,cAAG,EAAE,GAAAA,MAAA;IAErD,IAAI;MAAEpR;IAAS,CAAC,GAAGmD,gBAAK,CAACwH,UAAU,CAACjJ,WAAA,CAAAkJ,wBAAiB,CAAC;IACtD,IAAIyG,YAAY,GAAGlO,gBAAK,CAACwH,UAAU,CAACjJ,WAAA,CAAA4P,mBAAY,CAAC;IACjD,CAAUD,YAAY,GAAtBxR,MAAA,CAAA8P,gBAAS,QAAe,kDAAkD,IAAjE;IAET,IAAI,CAAC4B,KAAK,CAAC,GAAGF,YAAY,CAACG,OAAO,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;IAC5C;IACA;IACA,IAAInG,IAAI,GAAAnK,QAAA,CAAQ,IAAAO,WAAA,CAAAiL,eAAe,CAACzM,MAAM,GAAGA,MAAM,GAAG,GAAG,EAAE;MAAEmK;IAAS,CAAC,CAAC,CAAE;;IAEtE;IACA;IACA;IACA,IAAI7C,QAAQ,GAAG9F,WAAA,CAAAkL,WAAW,EAAE;IAC5B,IAAI1M,MAAM,IAAI,IAAI,EAAE;MAClB;MACA;MACAoL,IAAI,CAACG,MAAM,GAAGjE,QAAQ,CAACiE,MAAM;;MAE7B;MACA;MACA;MACA,IAAIiG,MAAM,GAAG,IAAI5T,eAAe,CAACwN,IAAI,CAACG,MAAM,CAAC;MAC7C,IAAIiG,MAAM,CAAC1S,GAAG,CAAC,OAAO,CAAC,IAAI0S,MAAM,CAACC,GAAG,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE;QACrDD,MAAM,CAAClL,MAAM,CAAC,OAAO,CAAC;QACtB8E,IAAI,CAACG,MAAM,GAAGiG,MAAM,CAACE,QAAQ,EAAE,SAAOF,MAAM,CAACE,QAAQ,EAAE,GAAK,EAAE;MAChE;IACF;IAEA,IAAI,CAAC,CAAC1R,MAAM,IAAIA,MAAM,KAAK,GAAG,KAAKqR,KAAK,CAACM,KAAK,CAACC,KAAK,EAAE;MACpDxG,IAAI,CAACG,MAAM,GAAGH,IAAI,CAACG,MAAM,GACrBH,IAAI,CAACG,MAAM,CAACrD,OAAO,CAAC,KAAK,EAAE,SAAS,CAAC,GACrC,QAAQ;IACd;;IAEA;IACA;IACA;IACA;IACA,IAAIpI,QAAQ,KAAK,GAAG,EAAE;MACpBsL,IAAI,CAACC,QAAQ,GACXD,IAAI,CAACC,QAAQ,KAAK,GAAG,GAAGvL,QAAQ,GAAGH,MAAA,CAAAkS,SAAS,CAAC,CAAC/R,QAAQ,EAAEsL,IAAI,CAACC,QAAQ,CAAC,CAAC;IAC3E;IAEA,OAAO7J,WAAA,CAAAsO,UAAU,CAAC1E,IAAI,CAAC;EACzB;EAUA;EAEA;;;;EAIO,SAAS0G,UAAUA,CAAAC,MAAA,EAE8B;IAAA,IAAAC,cAAA;IAAA,IAFhB;MACtC7T;IACgB,CAAC,GAAA4T,MAAA,cAAG,EAAE,GAAAA,MAAA;IACtB,IAAI;MAAEpS,MAAA,EAAAgF;IAAO,CAAC,GAAG4K,oBAAoB,CAACJ,cAAc,CAAC8C,UAAU,CAAC;IAChE,IAAInQ,KAAK,GAAG4N,kBAAkB,CAACN,mBAAmB,CAAC6C,UAAU,CAAC;IAC9D,IAAIzM,WAAW,GAAGvC,gBAAK,CAACwH,UAAU,CAACpH,eAAe,CAAC;IACnD,IAAIsO,KAAK,GAAG1O,gBAAK,CAACwH,UAAU,CAACjJ,WAAA,CAAA4P,mBAAY,CAAC;IAC1C,IAAIc,OAAO,IAAAF,cAAA,GAAGL,KAAK,CAACL,OAAO,CAACK,KAAK,CAACL,OAAO,CAACnE,MAAM,GAAG,CAAC,CAAC,qBAAvC6E,cAAA,CAAyCL,KAAK,CAACQ,EAAE;IAE/D,CAAU3M,WAAW,GAArB7F,MAAA,CAAA8P,gBAAS;IACT,CAAUkC,KAAK,GAAfhS,MAAA,CAAA8P,gBAAS;IACT,EACEyC,OAAO,IAAI,IAAI,IADjBvS,MAAA,CAAA8P,gBAAS;;IAKT;IACA;IACA;IACA,IAAI2C,UAAU,GAAGvO,SAAS,GAAGA,SAAS,EAAE,GAAG,EAAE;IAC7C,IAAI,CAACkK,UAAU,EAAEsE,aAAa,CAAC,GAAGpP,gBAAK,CAAC4B,QAAQ,CAAS1G,GAAG,IAAIiU,UAAU,CAAC;IAC3E,IAAIjU,GAAG,IAAIA,GAAG,KAAK4P,UAAU,EAAE;MAC7BsE,aAAa,CAAClU,GAAG,CAAC;IACpB,CAAC,MAAM,IAAI,CAAC4P,UAAU,EAAE;MACtB;MACAsE,aAAa,CAAC5B,kBAAkB,EAAE,CAAC;IACrC;;IAEA;IACAxN,gBAAK,CAACmE,SAAS,CAAC,MAAM;MACpBzC,QAAM,CAAC2N,UAAU,CAACvE,UAAU,CAAC;MAC7B,OAAO,MAAM;QACX;QACA;QACA;QACApJ,QAAM,CAAC4N,aAAa,CAACxE,UAAU,CAAC;OACjC;IACH,CAAC,EAAE,CAACpJ,QAAM,EAAEoJ,UAAU,CAAC,CAAC;;IAExB;IACA,IAAIyE,IAAI,GAAGvP,gBAAK,CAAC2C,WAAW,CAC1B,CAACoF,IAAY,EAAElK,IAAuC,KAAK;MACzD,CAAUoR,OAAO,GAAjBvS,MAAA,CAAA8P,gBAAS,QAAU,yCAAyC,IAAnD;MACT9K,QAAM,CAACoM,KAAK,CAAChD,UAAU,EAAEmE,OAAO,EAAElH,IAAI,EAAElK,IAAI,CAAC;KAC9C,EACD,CAACiN,UAAU,EAAEmE,OAAO,EAAEvN,QAAM,CAC9B,CAAC;IAED,IAAI8N,UAAU,GAAGrE,SAAS,EAAE;IAC5B,IAAID,MAAM,GAAGlL,gBAAK,CAAC2C,WAAW,CAC5B,CAACpI,MAAM,EAAEsD,IAAI,KAAK;MAChB2R,UAAU,CAACjV,MAAM,EAAAyD,QAAA,KACZH,IAAI;QACPgH,QAAQ,EAAE,KAAK;QACfiG;MAAU,EACX,CAAC;IACJ,CAAC,EACD,CAACA,UAAU,EAAE0E,UAAU,CACzB,CAAC;IAED,IAAIC,WAAW,GAAGzP,gBAAK,CAACwE,OAAO,CAAC,MAAM;MACpC,IAAIiL,WAAW,gBAAGzP,gBAAK,CAAC6G,UAAU,CAChC,CAACmE,KAAK,EAAEhE,GAAG,KAAK;QACd,oBACEhH,gBAAA,CAAA5D,aAAA,CAACuO,IAAI,EAAA3M,QAAA,KAAKgN,KAAK;UAAEnG,QAAQ,EAAE,KAAM;UAACiG,UAAU,EAAEA,UAAW;UAAC9D,GAAG,EAAEA;QAAI,EAAE,CAAC;MAE1E,CACF,CAAC;MACY;QACXyI,WAAW,CAACtP,WAAW,GAAG,cAAc;MAC1C;MACA,OAAOsP,WAAW;IACpB,CAAC,EAAE,CAAC3E,UAAU,CAAC,CAAC;;IAEhB;IACA,IAAIvH,OAAO,GAAG1E,KAAK,CAACyE,QAAQ,CAACkL,GAAG,CAAC1D,UAAU,CAAC,IAAIpO,MAAA,CAAAgT,YAAY;IAC5D,IAAIlQ,IAAI,GAAG+C,WAAW,CAACiM,GAAG,CAAC1D,UAAU,CAAC;IACtC,IAAI6E,qBAAqB,GAAG3P,gBAAK,CAACwE,OAAO,CACvC,MAAAxG,QAAA;MACE2M,IAAI,EAAE8E,WAAW;MACjBvE,MAAM;MACNqE;IAAI,GACDhM,OAAO;MACV/D;IAAI,EACJ,EACF,CAACiQ,WAAW,EAAEvE,MAAM,EAAEqE,IAAI,EAAEhM,OAAO,EAAE/D,IAAI,CAC3C,CAAC;IAED,OAAOmQ,qBAAqB;EAC9B;;EAEA;;;;EAIO,SAASC,WAAWA,CAAA,EAAkC;IAC3D,IAAI/Q,KAAK,GAAG4N,kBAAkB,CAACN,mBAAmB,CAAC0D,WAAW,CAAC;IAC/D,OAAOjV,KAAK,CAACkV,IAAI,CAACjR,KAAK,CAACyE,QAAQ,CAACrE,OAAO,EAAE,CAAC,CAAC5D,GAAG,CAAC0U,MAAA;MAAA,IAAC,CAAC7U,GAAG,EAAEqI,OAAO,CAAC,GAAAwM,MAAA;MAAA,OAAA/R,QAAA,KAC1DuF,OAAO;QACVrI;MAAG;IAAA,CACH,CAAC;EACL;EAEA,MAAM8U,8BAA8B,GAAG,+BAA+B;EACtE,IAAIC,oBAA4C,GAAG,EAAE;;EAErD;;;EAGA,SAAShE,oBAAoBA,CAAAiE,MAAA,EAMrB;IAAA,IANsB;MAC5BnE,MAAM;MACNC;IAIF,CAAC,GAAAkE,MAAA,cAAG,EAAE,GAAAA,MAAA;IACJ,IAAI;MAAExT,MAAA,EAAAgF;IAAO,CAAC,GAAG4K,oBAAoB,CAACJ,cAAc,CAACiE,oBAAoB,CAAC;IAC1E,IAAI;MAAEC,qBAAqB;MAAEpL;IAAmB,CAAC,GAAGyH,kBAAkB,CACpEN,mBAAmB,CAACgE,oBACtB,CAAC;IACD,IAAI;MAAEtT;IAAS,CAAC,GAAGmD,gBAAK,CAACwH,UAAU,CAACjJ,WAAA,CAAAkJ,wBAAiB,CAAC;IACtD,IAAIpD,QAAQ,GAAG9F,WAAA,CAAAkL,WAAW,EAAE;IAC5B,IAAI4E,OAAO,GAAG9P,WAAA,CAAA8R,UAAU,EAAE;IAC1B,IAAItG,UAAU,GAAGxL,WAAA,CAAA+R,aAAa,EAAE;;IAEhC;IACAtQ,gBAAK,CAACmE,SAAS,CAAC,MAAM;MACpB/F,MAAM,CAACF,OAAO,CAACqS,iBAAiB,GAAG,QAAQ;MAC3C,OAAO,MAAM;QACXnS,MAAM,CAACF,OAAO,CAACqS,iBAAiB,GAAG,MAAM;OAC1C;KACF,EAAE,EAAE,CAAC;;IAEN;IACAC,WAAW,CACTxQ,gBAAK,CAAC2C,WAAW,CAAC,MAAM;MACtB,IAAIoH,UAAU,CAAClL,KAAK,KAAK,MAAM,EAAE;QAC/B,IAAI3D,GAAG,GAAG,CAAC6Q,MAAM,GAAGA,MAAM,CAAC1H,QAAQ,EAAEgK,OAAO,CAAC,GAAG,IAAI,KAAKhK,QAAQ,CAACnJ,GAAG;QACrE+U,oBAAoB,CAAC/U,GAAG,CAAC,GAAGkD,MAAM,CAACqS,OAAO;MAC5C;MACA,IAAI;QACFC,cAAc,CAACC,OAAO,CACpB3E,UAAU,IAAIgE,8BAA8B,EAC5CY,IAAI,CAACC,SAAS,CAACZ,oBAAoB,CACrC,CAAC;OACF,CAAC,OAAOrQ,KAAK,EAAE;QACdlD,MAAA,CAAAC,cAAO,CACL,KAAK,wGAC+FiD,KAAK,OAC3G,CAAC;MACH;MACAxB,MAAM,CAACF,OAAO,CAACqS,iBAAiB,GAAG,MAAM;IAC3C,CAAC,EAAE,CAACvE,UAAU,EAAED,MAAM,EAAEhC,UAAU,CAAClL,KAAK,EAAEwF,QAAQ,EAAEgK,OAAO,CAAC,CAC9D,CAAC;;IAED;IACA,IAAI,OAAOlS,QAAQ,KAAK,WAAW,EAAE;MACnC;MACA6D,gBAAK,CAACiE,eAAe,CAAC,MAAM;QAC1B,IAAI;UACF,IAAI6M,gBAAgB,GAAGJ,cAAc,CAACK,OAAO,CAC3C/E,UAAU,IAAIgE,8BAChB,CAAC;UACD,IAAIc,gBAAgB,EAAE;YACpBb,oBAAoB,GAAGW,IAAI,CAACI,KAAK,CAACF,gBAAgB,CAAC;UACrD;SACD,CAAC,OAAOzU,CAAC,EAAE;UACV;QAAA;MAEJ,CAAC,EAAE,CAAC2P,UAAU,CAAC,CAAC;;MAEhB;MACA;MACAhM,gBAAK,CAACiE,eAAe,CAAC,MAAM;QAC1B,IAAIgN,qBAAkE,GACpElF,MAAM,IAAIlP,QAAQ,KAAK,GAAG,GACtB,CAACwH,QAAQ,EAAEgK,OAAO,KAChBtC,MAAM;QAAA;QACJ/N,QAAA,KAEKqG,QAAQ;UACX+D,QAAQ,EACN1L,MAAA,CAAAU,aAAa,CAACiH,QAAQ,CAAC+D,QAAQ,EAAEvL,QAAQ,CAAC,IAC1CwH,QAAQ,CAAC+D;SAEb,GAAAiG,OACF,CAAC,GACHtC,MAAM;QACZ,IAAImF,wBAAwB,GAAGxP,QAAM,IAAN,gBAAAA,QAAM,CAAEyP,uBAAuB,CAC5DlB,oBAAoB,EACpB,MAAM7R,MAAM,CAACqS,OAAO,EACpBQ,qBACF,CAAC;QACD,OAAO,MAAMC,wBAAwB,IAAIA,wBAAwB,EAAE;OACpE,EAAE,CAACxP,QAAM,EAAE7E,QAAQ,EAAEkP,MAAM,CAAC,CAAC;;MAE9B;MACA;MACA/L,gBAAK,CAACiE,eAAe,CAAC,MAAM;QAC1B;QACA,IAAImM,qBAAqB,KAAK,KAAK,EAAE;UACnC;QACF;;QAEA;QACA,IAAI,OAAOA,qBAAqB,KAAK,QAAQ,EAAE;UAC7ChS,MAAM,CAACgT,QAAQ,CAAC,CAAC,EAAEhB,qBAAqB,CAAC;UACzC;QACF;;QAEA;QACA,IAAI/L,QAAQ,CAACkE,IAAI,EAAE;UACjB,IAAI8I,EAAE,GAAGlV,QAAQ,CAACmV,cAAc,CAC9BC,kBAAkB,CAAClN,QAAQ,CAACkE,IAAI,CAAC+F,KAAK,CAAC,CAAC,CAAC,CAC3C,CAAC;UACD,IAAI+C,EAAE,EAAE;YACNA,EAAE,CAACG,cAAc,EAAE;YACnB;UACF;QACF;;QAEA;QACA,IAAIxM,kBAAkB,KAAK,IAAI,EAAE;UAC/B;QACF;;QAEA;QACA5G,MAAM,CAACgT,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC;OACtB,EAAE,CAAC/M,QAAQ,EAAE+L,qBAAqB,EAAEpL,kBAAkB,CAAC,CAAC;IAC3D;EACF;;EAIA;;;;;;;;EAQO,SAASyM,eAAeA,CAC7BC,QAA2C,EAC3C7D,OAA+B,EACzB;IACN,IAAI;MAAE8D;IAAQ,CAAC,GAAG9D,OAAO,IAAI,EAAE;IAC/B7N,gBAAK,CAACmE,SAAS,CAAC,MAAM;MACpB,IAAItG,IAAI,GAAG8T,OAAO,IAAI,IAAI,GAAG;QAAEA;MAAQ,CAAC,GAAGjU,SAAS;MACpDU,MAAM,CAACwT,gBAAgB,CAAC,cAAc,EAAEF,QAAQ,EAAE7T,IAAI,CAAC;MACvD,OAAO,MAAM;QACXO,MAAM,CAACyT,mBAAmB,CAAC,cAAc,EAAEH,QAAQ,EAAE7T,IAAI,CAAC;OAC3D;IACH,CAAC,EAAE,CAAC6T,QAAQ,EAAEC,OAAO,CAAC,CAAC;EACzB;;EAEA;;;;;;;;EAQA,SAASnB,WAAWA,CAClBkB,QAA6C,EAC7C7D,OAA+B,EACzB;IACN,IAAI;MAAE8D;IAAQ,CAAC,GAAG9D,OAAO,IAAI,EAAE;IAC/B7N,gBAAK,CAACmE,SAAS,CAAC,MAAM;MACpB,IAAItG,IAAI,GAAG8T,OAAO,IAAI,IAAI,GAAG;QAAEA;MAAQ,CAAC,GAAGjU,SAAS;MACpDU,MAAM,CAACwT,gBAAgB,CAAC,UAAU,EAAEF,QAAQ,EAAE7T,IAAI,CAAC;MACnD,OAAO,MAAM;QACXO,MAAM,CAACyT,mBAAmB,CAAC,UAAU,EAAEH,QAAQ,EAAE7T,IAAI,CAAC;OACvD;IACH,CAAC,EAAE,CAAC6T,QAAQ,EAAEC,OAAO,CAAC,CAAC;EACzB;;EAEA;;;;;;;;EAQA,SAASG,SAASA,CAAAC,MAAA,EAMf;IAAA,IANgB;MACjBC,IAAI;MACJnS;IAIF,CAAC,GAAAkS,MAAA;IACC,IAAIE,OAAO,GAAG1T,WAAA,CAAA2T,UAAU,CAACF,IAAI,CAAC;IAE9BhS,gBAAK,CAACmE,SAAS,CAAC,MAAM;MACpB,IAAI8N,OAAO,CAACpT,KAAK,KAAK,SAAS,EAAE;QAC/B,IAAIsT,OAAO,GAAG/T,MAAM,CAACgU,OAAO,CAACvS,OAAO,CAAC;QACrC,IAAIsS,OAAO,EAAE;UACX;UACA;UACA;UACAE,UAAU,CAACJ,OAAO,CAACE,OAAO,EAAE,CAAC,CAAC;QAChC,CAAC,MAAM;UACLF,OAAO,CAACK,KAAK,EAAE;QACjB;MACF;IACF,CAAC,EAAE,CAACL,OAAO,EAAEpS,OAAO,CAAC,CAAC;IAEtBG,gBAAK,CAACmE,SAAS,CAAC,MAAM;MACpB,IAAI8N,OAAO,CAACpT,KAAK,KAAK,SAAS,IAAI,CAACmT,IAAI,EAAE;QACxCC,OAAO,CAACK,KAAK,EAAE;MACjB;IACF,CAAC,EAAE,CAACL,OAAO,EAAED,IAAI,CAAC,CAAC;EACrB;;EAIA;;;;;;;;EAQA,SAASrI,sBAAsBA,CAC7B5E,EAAM,EACNlH,IAAwC,EACxC;IAAA,IADAA,IAAwC;MAAxCA,IAAwC,GAAG,EAAE;IAAA;IAE7C,IAAIkE,SAAS,GAAG/B,gBAAK,CAACwH,UAAU,CAACzH,qBAAqB,CAAC;IAEvD,EACEgC,SAAS,IAAI,IAAI,IADnBrF,MAAA,CAAA8P,gBAAS,CAEP,uGAAgG,GAC9F,mEAAmE,IAH9D;IAMT,IAAI;MAAE3P;IAAS,CAAC,GAAGyP,oBAAoB,CACrCJ,cAAc,CAACvC,sBACjB,CAAC;IACD,IAAIxB,IAAI,GAAG5J,WAAA,CAAAiL,eAAe,CAACzE,EAAE,EAAE;MAAEmC,QAAQ,EAAErJ,IAAI,CAACqJ;IAAS,CAAC,CAAC;IAC3D,IAAI,CAACnF,SAAS,CAAC7B,eAAe,EAAE;MAC9B,OAAO,KAAK;IACd;IAEA,IAAIqS,WAAW,GACb7V,MAAA,CAAAU,aAAa,CAAC2E,SAAS,CAAC6B,eAAe,CAACwE,QAAQ,EAAEvL,QAAQ,CAAC,IAC3DkF,SAAS,CAAC6B,eAAe,CAACwE,QAAQ;IACpC,IAAIoK,QAAQ,GACV9V,MAAA,CAAAU,aAAa,CAAC2E,SAAS,CAAC8B,YAAY,CAACuE,QAAQ,EAAEvL,QAAQ,CAAC,IACxDkF,SAAS,CAAC8B,YAAY,CAACuE,QAAQ;;IAEjC;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,OACE1L,MAAA,CAAA+V,SAAS,CAACtK,IAAI,CAACC,QAAQ,EAAEoK,QAAQ,CAAC,IAAI,IAAI,IAC1C9V,MAAA,CAAA+V,SAAS,CAACtK,IAAI,CAACC,QAAQ,EAAEmK,WAAW,CAAC,IAAI,IAAI;EAEjD;;EAIA"},"metadata":{},"sourceType":"script","externalDependencies":[]}